{"version":3,"sources":["webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?b67a","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?ea16","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue","webpack:///src/components/Common/Modal/AddCustomFieldsPopup.vue","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?4215","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?ad29","webpack:///./src/views/LayoutCustomFields/DependencyField.vue","webpack:///src/views/LayoutCustomFields/DependencyField.vue","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?4055","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?ea1f","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?f16e","webpack:///./src/components/Common/Modal/AddCustomFieldsPopup.vue?283d","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?071a","webpack:///./src/views/LayoutCustomFields/DependencyField.vue?304b"],"names":["content","__esModule","default","module","i","locals","exports","add","___CSS_LOADER_API_IMPORT___","push","render","_vm","this","_c","_self","staticClass","attrs","on","$event","CloseCustomFieldsPopup","_v","_s","$t","_m","_l","systemFieldList","element","key","class","selectedModule","activateTab","class_name","display_name","ref","showFieldPropPopup","buttons","FormSchema","onSubmit","_e","staticRenderFns","props","LanguageArrayData","type","Array","required","SubModuleId","String","ModuleId","components","DataService","DynamicForm","data","drag","dropfieldslist","dropfields","systemFieldsModel","OldIdForProp","FieldName","DataTypeId","iSLayoutControl","divManageLayoutProp","LanguageArray","FieldPropertyData","oldFieldPropertyData","finalJsonData","controlOnStart","bindEditedDataProperty","disabled","errorMessage","classicon","langCulture","myObj","lenghtOfLanguageDiv","displayNameData","customfieldtypeId","layoutType","Data","astype","label","name","value","placeholder","visibility","validationRules","config","onKeyUp","Bindingwithdisplayname","LengthLimit","options","rows","chkIndex","chktxtIndex","max","showAddIcon","onAddButtonClick","AddMultiLanguage","text","onClick","updated","vm","BindLangDDL","created","ShowHideFields","GetCustomFieldDataTypes","methods","isLetter","forEach","items","replace","lableDisplaynamebinding","undefined","itm","index","lang_id","lang_name","item","indx","RemoveFile","e","field","checkindex","findIndex","x","chechIndex1","splice","length","onaddIconBackground","addIcon","Lblname","IsSystemGeneratedField","resetform","$refs","Propertiesform1","reset","Data_type_name","Data_type_id","$parent","hidePopup","endDrag","$vent","AllowOneElementdrop","clone","pullFunction","closeAddCustomFieldPopup","closeAddCustomField","RemoveField","id","confirmR","formfields","dropdowndata","totalLength","mainObj","CUSTOM_FIELD_ID","MODULE_ID","SUB_MODULE_ID","NAME","Label","DISPLAY_NAME","DisplayName","DESCRIPTION","Description","PICKLIST_OPTION","PickListOption","TYPE_ID","LENGTH","Length","IS_REQUIRED","MarkasRequired","STATUSID","DECIMAL_PLACES","DecimalPlaces","LOC_VALUE","FORM_FIELD_VISIBILITY","LIST_FIELD_VISIBILITY","params","JSON","stringify","SaveUpdateCustomField","then","response","checkstatus","parse","STATUS_CODE","ShowAlert","$emit","GetCustomFieldDataType","target","_value","component","closePopup","displayname","scopedSlots","_u","DependencyData","fn","GetMultiSelectValue","sel","selectedItem","showWhenSelectItem","Dependencyvalues","checkboxdisabled","domProps","checkIfselected","checkedSelected","IsDefaultValue","toggleSelected","CustomFieldId","Number","CustomLayoutId","CustomLayout_Id","LayoutList","dependentId","dependentOnDdlId","CustomData","dependentListArray","CustomArray","SelectedCustomFieldName","GetEditDependencyData","showWhenListSelectedItem","TagsSelectedArray","DepartmentData","onChange","GetCustomFieldDDL","mode","GetMultiValues","onRemove","removeRecord","isDefault","isrequired","isreq","customFieldName","GetCustomFieldDependent","editDependency","val","ths","returnValue","selectedValue","filter","dependent","includes","xy","FieldData","xz","group_display_name","pop","custom_field_id","GetCustomFieldShowWhenDDL","$","each","prop","isShowDependencyFieldPopup","popupcloseforsystemfields","event","GetDependencyDataArray","value_mapping","ele","document","getElementsByClassName","inneritem","checked","DependencyForm","UpdateKeyValue","getElementById","innerindex","meta","getindex","obj","textContent","isSel","dependentOn","DependOn","IsRequired","showWhenArray","prototype","map","call","ShowWhen","url","ManageCustomFieldDependency","SetDependField","dependCustomField","has_dependent_field","_dependentData$data$","_dependentData$data$2","dependentData","GetCustomFieldId","xvalue","array","split","dependent_on","showWhenValues","show_when","selectedValues"],"mappings":"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","file":"js/chunk-863a4670.js","sourcesContent":["// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=059bce22&prod&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"446bbefd\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".scroldv[data-v-31a74548]{max-height:490px;overflow-y:scroll}.sel[data-v-31a74548]{background-color:#41b883;color:#fff}.timeline-panel li[data-v-31a74548]{max-width:95%;min-width:95%;margin-bottom:0}.custom-checkbox .custom-control-label[data-v-31a74548]{margin-top:5px;margin-left:0;padding-top:3px;padding-left:5px}.custom-control-input[data-v-31a74548]{z-index:1;opacity:0;top:5px}.customslidercheck .form-check-input[data-v-31a74548]{visibility:hidden}.customslidercheck[data-v-31a74548]{max-width:68px;width:100%;position:relative;height:24px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered ui-draggable\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header ui-draggable-handle py-0\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseCustomFieldsPopup()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title py-3\",attrs:{\"name\":\"header\"}},[_vm._v(\" \"+_vm._s(_vm.$t('AddCustomFields'))+\" \")])]),_c('div',{staticClass:\"container-fluid padding-t_10\"},[_c('div',{staticClass:\"left-menu-tab new_tab\"},[_vm._m(0),_c('ul',{staticClass:\"nav nav-pills flex-column left-tab mt-2 responivecustomtab\",attrs:{\"id\":\"upper\",\"role\":\"tablist\"}},_vm._l((_vm.systemFieldList),function(element){return _c('li',{key:element,staticClass:\"nav-item\"},[_c('a',{staticClass:\"nav-link left-menu\",class:{ 'active': _vm.selectedModule === element },attrs:{\"id\":\"leftmenu\"},on:{\"click\":function($event){return _vm.activateTab(element)}}},[_c('i',{class:element.class_name,attrs:{\"id\":\"itemdata\"}}),_vm._v(\"  \"+_vm._s(element.display_name)+\" \")])])}),0)]),_c('div',{staticClass:\"right-content\"},[_c('div',{staticClass:\"col-lg-12 mb-0 float-left p-0\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Forminfo'))+\" \")])])])]),_c('br'),_c('br'),_c('Form',{ref:\"Propertiesform1\"},[(_vm.showFieldPropPopup)?_c('div',{staticClass:\"listing py-3 px-3\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1):_vm._e()])],1)])])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-12 p-0\"},[_c('div',{staticClass:\"theme-primary partition\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\"User Defined Fields:\")])])])\n}]\n\nexport { render, staticRenderFns }","\r\n<template>\r\n    <div>\r\n        <div class=\"my-popups\">\r\n            <div class=\"modal d-block \">\r\n                <div class=\"modal-dialog modal-dialog-centered ui-draggable\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header ui-draggable-handle  py-0\">\r\n                            <button type=\"button\" class=\"close\" v-on:click=\"CloseCustomFieldsPopup()\">\r\n                                <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                            </button>\r\n                            <h4 name=\"header\" class=\"modal-title py-3\">\r\n                                {{ $t('AddCustomFields') }}\r\n                            </h4>\r\n                        </div>\r\n                        <div class=\"container-fluid padding-t_10\">\r\n                            <div class=\"left-menu-tab new_tab\">\r\n                                <div class=\"col-md-12 p-0\">\r\n                                    <div class=\"theme-primary partition\">\r\n                                        <span class=\"p-name text-white\">User Defined Fields:</span>\r\n                                    </div>\r\n                                </div>\r\n                                <ul class=\"nav nav-pills flex-column left-tab mt-2 responivecustomtab\" id=\"upper\"\r\n                                    role=\"tablist\">\r\n                                    <li class=\"nav-item\" v-for=\"element in systemFieldList\" :key=\"element\">\r\n                                        <a id=\"leftmenu\" class=\"nav-link left-menu \" @click=\"activateTab(element)\"\r\n                                            :class=\"{ 'active': selectedModule === element }\">\r\n                                            <i id=\"itemdata\" v-bind:class=\"element.class_name\"></i>&nbsp;\r\n                                            {{ element.display_name }}\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div class=\"right-content\">\r\n                                <div class=\"col-lg-12 mb-0 float-left p-0\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\">\r\n                                            <span class=\"spngropuname\">\r\n                                                {{ $t('Forminfo') }}\r\n                                            </span>\r\n                                        </h5>\r\n                                    </div>\r\n                                </div><br /><br />\r\n                                <Form ref=\"Propertiesform1\">\r\n                                    <div class=\"listing py-3 px-3 \" v-if=\"showFieldPropPopup\">\r\n                                        <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                                            v-on:OnSubmit=\"onSubmit\">\r\n                                        </dynamic-form>\r\n                                    </div>\r\n                                </Form>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../../services/DataService.js';\r\n// import CustomFieldPropertyPopup from '../Modal/CustomFieldPropertyPopup.vue'\r\nimport { DynamicForm } from 'tg-controls_cli/dist/myLib.common'\r\nexport default {\r\n    props: {\r\n\r\n        LanguageArrayData:\r\n        {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        SubModuleId:\r\n        {\r\n            type: String,\r\n            required: true\r\n        },\r\n        ModuleId: {\r\n            type: String,\r\n            required: true\r\n        }\r\n    },\r\n    components: {\r\n        DataService,\r\n        // CustomFieldPropertyPopup,\r\n        DynamicForm\r\n    },\r\n    data() {\r\n        return {\r\n            drag: false,\r\n            dropfieldslist: [],\r\n            dropfields: [],\r\n            systemFieldsModel: '',\r\n            OldIdForProp: '',\r\n            systemFieldList: [],\r\n            showFieldPropPopup: false,\r\n            FieldName: null,\r\n            DataTypeId: '',\r\n            iSLayoutControl: false,\r\n            divManageLayoutProp: false,\r\n            LanguageArray: [],\r\n            FieldPropertyData: [],\r\n            oldFieldPropertyData: [],\r\n            finalJsonData: [],\r\n            // closepopupMenuhide:false,\r\n            controlOnStart: true,\r\n            bindEditedDataProperty: [],\r\n            disabled: false,\r\n            errorMessage: '',\r\n            classicon: '',\r\n            selectedModule: null,\r\n            langCulture: [],\r\n            myObj: [],\r\n            lenghtOfLanguageDiv: null,\r\n            displayNameData: '',\r\n            customfieldtypeId: null,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: 'Label',\r\n                            name: \"Label\",\r\n                            value: this.FieldName,\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            disabled: false,\r\n                            validationRules: { \"required\": true },\r\n                            config: {\r\n                                onKeyUp: this.Bindingwithdisplayname\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: 'Pick List Option',\r\n                            name: \"PickListOption\",\r\n                            value: '',\r\n                            visibility: false,\r\n                            placeholder: \"Enter comma seprated value \",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: 'Length',\r\n                            name: \"Length\",\r\n                            value: '',\r\n                            placeholder: \"Enter Length\",\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true },\r\n                            config: {\r\n                                onKeyUp: this.LengthLimit\r\n                            }\r\n\r\n                        },\r\n                        {\r\n                            astype: \"NumericField\",\r\n                            label: 'Decimal Places',\r\n                            name: \"DecimalPlaces\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": true },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"CheckBoxField\",\r\n                            label: \"Mark as Required\",\r\n                            name: \"MarkasRequired\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{ value: \"1\", name: \"\" }]\r\n                            }\r\n                        },\r\n                        {\r\n                            astype: \"TextAreaField\",\r\n                            label: 'Description',\r\n                            name: \"Description\",\r\n                            value: '',\r\n                            placeholder: \"Enter Description\",\r\n                            visibility: true,\r\n                            validationRules: \"\",\r\n                            config: {\r\n                                rows: 3\r\n                            }\r\n                        }\r\n                    ],\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: 'Language',\r\n                            name: \"Language\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            chkIndex: 0,\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: 'Display Name',\r\n                            name: \"DisplayName\",\r\n                            value: '',\r\n                            placeholder: \"Enter Display Name\",\r\n                            chktxtIndex: 0,\r\n                            visibility: false,\r\n                            validationRules: { \"required\": true, max: 250 },\r\n                            config: {\r\n                                showAddIcon: true,\r\n                                onAddButtonClick: this.AddMultiLanguage\r\n                                // onKeyUp:isLetter\r\n                                // onKeyUp: this.isLetter\r\n                            },\r\n                        },\r\n\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\"\r\n                },\r\n\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.CloseCustomFieldsPopup\r\n                }\r\n            ]\r\n\r\n        }\r\n    },\r\n    updated() {\r\n        var vm = this;\r\n        vm.BindLangDDL();\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.ShowHideFields();\r\n        vm.GetCustomFieldDataTypes();\r\n        vm.BindLangDDL();\r\n    },\r\n    methods:\r\n    {\r\n        LengthLimit() {\r\n            var vm = this;\r\n            if ((vm.FormSchema)[0].Data[2].value > 250) {\r\n                (vm.FormSchema)[0].Data[2].value = 250; // Set the input value to 250 if it exceeds the limit\r\n         }\r\n        },\r\n        isLetter() {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data.forEach(items => {\r\n                if (items.label == \"Display Name\") {\r\n                    items.value = items.value.replace(/[^a-zA-Z]/g, '');\r\n                }\r\n            })\r\n        },\r\n        lableDisplaynamebinding(value) {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data[1].value = value;\r\n        },\r\n        BindLangDDL(name) {\r\n            var vm = this;\r\n            if (name == undefined) {\r\n                vm.LanguageArray.forEach((itm, index) => {\r\n                    (vm.FormSchema)[1].Data[0].config.options.push({\r\n                        value: itm.lang_id,\r\n                        name: itm.lang_name\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.LanguageArray.forEach((itm, index) => {\r\n                    if (typeof (name) != 'undefined' && name != null) {\r\n                        (vm.FormSchema)[1].Data.forEach((item, indx) => {\r\n                            if (indx % 2 == 0) {\r\n                                (vm.FormSchema)[1].Data[indx].config.options.push({\r\n                                    value: itm.lang_id,\r\n                                    name: itm.lang_name\r\n                                })\r\n                            }\r\n                        })\r\n\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        RemoveFile: function (e, field) {\r\n            var vm = this;\r\n            var checkindex = (vm.FormSchema)[1].Data.findIndex(x => x.chktxtIndex === field.chktxtIndex);\r\n            var chechIndex1 = checkindex - 1;\r\n            if (checkindex > -1) {\r\n                (vm.FormSchema)[1].Data.splice(checkindex, 1);\r\n            }\r\n            if (chechIndex1 > -1) {\r\n                (vm.FormSchema)[1].Data.splice(chechIndex1, 1);\r\n            }\r\n        },\r\n        AddMultiLanguage() {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data.push({\r\n                astype: \"SelectField\",\r\n                label: 'Language',\r\n                name: \"Language\" + (vm.FormSchema)[1].Data.length,\r\n                value: \"\",\r\n                placeholder: \"\",\r\n                chkIndex: (vm.FormSchema)[1].Data.length,\r\n                config: {\r\n                    options: [],\r\n                },\r\n                validationRules: \"required\",\r\n            },\r\n                {\r\n                    astype: \"TextField\",\r\n                    label: 'Display Name',\r\n                    name: \"DisplayName\" + (vm.FormSchema)[1].Data.length,\r\n                    value: '',\r\n                    placeholder: \"\",\r\n                    chktxtIndex: (vm.FormSchema)[1].Data.length,\r\n                    validationRules: { \"required\": true, max: 250 },\r\n                    config: {\r\n                        showAddIcon: true,\r\n                        onaddIconBackground: 'bg-danger',\r\n                        onAddButtonClick: vm.RemoveFile,\r\n                        addIcon: 'fa fa-trash',\r\n                        onKeyUp: this.isLetter\r\n                    },\r\n                })\r\n            vm.FormSchema[1].Data.forEach((item) => {\r\n                vm.Lblname = item.name\r\n            })\r\n            vm.BindLangDDL(vm.Lblname);\r\n        },\r\n        ShowHideFields() {\r\n            var vm = this;\r\n            if (vm.IsSystemGeneratedField == true) {\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[0].disabled = true;\r\n                (vm.FormSchema)[0].Data[4].disabled = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[5].visibility = false;\r\n                (vm.FormSchema)[1].Data[0].visibility = false;\r\n                (vm.FormSchema)[1].Data[1].visibility = false;\r\n            }\r\n            else {\r\n                (vm.FormSchema)[1].Data[0].visibility = true;\r\n                (vm.FormSchema)[1].Data[1].visibility = true;\r\n                if (vm.FieldName == 'Decimal') {\r\n                    (vm.FormSchema)[0].Data[3].visibility = true;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n                if (vm.FieldName == 'Select List' || vm.FieldName == 'Checkbox' || vm.FieldName == 'Radio') {\r\n                    (vm.FormSchema)[0].Data[1].visibility = true;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n                if (vm.FieldName == 'Date') {\r\n                    (vm.FormSchema)[0].Data[1].visibility = false;\r\n                    (vm.FormSchema)[0].Data[3].visibility = false;\r\n                    (vm.FormSchema)[0].Data[2].visibility = false;\r\n                }\r\n            }\r\n        },\r\n        resetform() {\r\n            var vm = this;\r\n            (vm.FormSchema)[0].Data[0].value = \"\";\r\n            (vm.FormSchema)[0].Data[1].value = \"\";\r\n            (vm.FormSchema)[0].Data[2].value = \"\";\r\n            (vm.FormSchema)[0].Data[3].value = \"\";\r\n            (vm.FormSchema)[0].Data[4].value = \"\";\r\n            (vm.FormSchema)[0].Data[5].value = \"\";\r\n            (vm.FormSchema)[1].Data[0].value = \"\";\r\n            (vm.FormSchema)[1].Data[1].value = \"\";\r\n        },\r\n\r\n        activateTab(item) {\r\n            debugger\r\n            var vm = this;\r\n            vm.$refs.Propertiesform1.reset();\r\n            vm.BindLangDDL();\r\n            vm.resetform();\r\n            (vm.FormSchema)[0].Data[0].value = item.Data_type_name;\r\n            if (item.Data_type_name == \"Text\") {\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n            }\r\n            else if (item.Data_type_name == 'Decimal') {\r\n                (vm.FormSchema)[0].Data[3].visibility = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == 'Select List' || item.Data_type_name == 'Checkbox' || item.Data_type_name == 'Radio') {\r\n                (vm.FormSchema)[0].Data[1].visibility = true;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == \"Date\") {\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n            }\r\n            else if (item.Data_type_name == \"Phone\" || item.Data_type_name == \"Email\") {\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n            }\r\n\r\n            else if (item.Data_type_name == \"Url\" || item.Data_type_name == \"Text Area\"\r\n            ) {\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[3].visibility = false;\r\n                (vm.FormSchema)[0].Data[1].visibility = false;\r\n                (vm.FormSchema)[0].Data[2].visibility = true;\r\n            }\r\n            vm.DataTypeId = item.Data_type_id;\r\n            vm.FieldName = item.Data_type_name;\r\n            vm.iSLayoutControl = true;\r\n            vm.divManageLayoutProp = false;\r\n            vm.LanguageArray = vm.LanguageArrayData;\r\n            vm.oldFieldPropertyData = vm.FieldPropertyData;\r\n            vm.showFieldPropPopup = true;\r\n            vm.selectedModule = item;\r\n            vm.lableDisplaynamebinding(item.Data_type_name);\r\n        },\r\n\r\n        CloseCustomFieldsPopup() {\r\n            this.$parent.hidePopup();\r\n        },\r\n        endDrag($vent, type) {\r\n        },\r\n        AllowOneElementdrop() {\r\n            var vm = this;\r\n            if (vm.dropfields == null) {\r\n                vm.disabled = false;\r\n            }\r\n            if (vm.dropfields != null) {\r\n                vm.disabled = true;\r\n            }\r\n            else {\r\n                vm.disabled = false;\r\n            }\r\n        },\r\n        clone({ name }) {\r\n            return { name };\r\n        },\r\n        pullFunction() {\r\n            return this.controlOnStart ? \"clone\" : true;\r\n        },\r\n        closeAddCustomFieldPopup() {\r\n            var vm = this;\r\n            vm.$parent.closeAddCustomField();\r\n        },\r\n        RemoveField: function (id) {\r\n            var vm = this;\r\n            vm.confirmR(vm.$t(\"ConfirmDelete\"), true, (vm.$t(\"Delete\") + \"  \" + vm.$t(\"Report\")), function () {\r\n                var checkindex = vm.dropfieldslist.findIndex(x => x.Data_type_id === id);\r\n                if (checkindex > -1) {\r\n                    vm.systemFieldList.push(vm.dropfieldslist[checkindex]);\r\n                    vm.dropfieldslist.splice(checkindex, 1);\r\n                    vm.FieldPropertyData = [];\r\n                    if (vm.dropfields == '') {\r\n                        vm.disabled = false;\r\n                    }\r\n                }\r\n\r\n            });\r\n        },\r\n\r\n        onSubmit(formfields, e) {\r\n            debugger;\r\n            var vm = this;\r\n            var dropdowndata = '';\r\n            var totalLength = this.FormSchema[1].Data.length;\r\n            this.FormSchema[1].Data.forEach((item, index) => {\r\n                if (item.astype != 'TextField') {\r\n                    dropdowndata += item.value + ','\r\n                } else {\r\n                    if (totalLength - 1 != index) {\r\n                        dropdowndata += item.value + '^'\r\n                    } else {\r\n                        dropdowndata += item.value\r\n                    }\r\n\r\n                }\r\n            })\r\n            let mainObj = {\r\n                CUSTOM_FIELD_ID: 0,\r\n                MODULE_ID: vm.ModuleId,\r\n                SUB_MODULE_ID: vm.SubModuleId,\r\n                NAME: formfields.Label,\r\n                DISPLAY_NAME: formfields.DisplayName,\r\n                DESCRIPTION: formfields.Description,\r\n                PICKLIST_OPTION: formfields.PickListOption,\r\n                TYPE_ID: vm.DataTypeId,\r\n                LENGTH: formfields.Length,\r\n                IS_REQUIRED: formfields.MarkasRequired[0] == 'undefined' ? 0 : 1,\r\n                STATUSID: 1001,\r\n                DECIMAL_PLACES: formfields.DecimalPlaces,\r\n                LOC_VALUE: dropdowndata,\r\n                FORM_FIELD_VISIBILITY: 'YES',\r\n                LIST_FIELD_VISIBILITY: 'YES'\r\n            }\r\n            vm.finalJsonData.push(mainObj);\r\n            var params = `jsonString=${JSON.stringify(vm.finalJsonData)}`\r\n            DataService.SaveUpdateCustomField(params).then(function (response) {\r\n                var checkstatus = JSON.parse(response.data)\r\n                if (checkstatus.STATUS_CODE == 1) {\r\n                    vm.ShowAlert(vm.$t('CustomFieldSuccess', [vm.$t('Field')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.$emit('GetCustomNewField', vm.finalJsonData,);\r\n                    vm.CloseCustomFieldsPopup();\r\n                }\r\n                else if (checkstatus.STATUS_CODE == 3) {\r\n                    vm.ShowAlert(vm.$t('CustomFieldExists'), \"danger\", true, vm.$t(\"Alert\"));\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t('CustomFieldUpdate'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.$emit('GetCustomNewField', vm.finalJsonData,);\r\n                    vm.CloseCustomFieldsPopup();\r\n                }\r\n            })\r\n        },\r\n        GetCustomFieldDataTypes() {\r\n            var vm = this;\r\n            DataService.GetCustomFieldDataType().then(function (response) {\r\n                if (JSON.parse(response.data) != null) {\r\n                    vm.systemFieldList = JSON.parse(response.data).data;\r\n                    vm.systemFieldList.forEach((item) => {\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        Bindingwithdisplayname(e) {\r\n            var vm = this;\r\n            (vm.FormSchema)[1].Data[1].value = e.target._value;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.makepopleft#mainDivProp .dropdown-menu {\r\n    inset: unset !important;\r\n    transform: unset !important;\r\n    right: 0px !important;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./AddCustomFieldsPopup.vue?vue&type=template&id=059bce22\"\nimport script from \"./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"\nexport * from \"./AddCustomFieldsPopup.vue?vue&type=script&lang=js\"\nimport style0 from \"./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=059bce22&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered ui-draggable\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header ui-draggable-handle py-0\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closePopup}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title py-3\",attrs:{\"name\":\"header\"}},[_vm._v(\" \"+_vm._s(_vm.$t('CustomFieldDependency'))+\" \"+_vm._s(_vm.displayname)+\" \")])]),_c('div',{staticClass:\"listing py-3 px-3\"},[_c('dynamic-form',{ref:\"DependencyForm\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([(_vm.DependencyData)?{key:\"tgslot-ProductTypeCode\",fn:function({ data }){return [_c('div',{staticClass:\"col-lg-12 p-0 workdiary_sanp_row border p-3\"},[_c('div',{staticClass:\"timeline-panel row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('ul',{staticClass:\"list-group\"},_vm._l((_vm.GetMultiSelectValue),function(item,index){return _c('li',{key:index,staticClass:\"list-group-item\",class:{ sel: _vm.selectedItem && _vm.selectedItem.name === item.name },on:{\"click\":function($event){return _vm.showWhenSelectItem($event,item)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])}),0)]),_c('div',{staticClass:\"col-md-6 border-left pl-5\"},[_c('div',{staticClass:\"scroldv\"},[(_vm.DependencyData)?_c('div',{staticClass:\"d-flex\"},[_c('h6',{staticClass:\"col-md-6\"},[_vm._v(\"values\")]),_vm._v(\" \"),_c('h6',{staticClass:\"col-md-6\"},[_vm._v(\"Isdefault\")])]):_vm._e(),_c('ul',{staticClass:\"list-group\",attrs:{\"id\":\"rightList\"}},_vm._l((_vm.Dependencyvalues),function(itm,index){return _c('li',{staticClass:\"list-group-item d-flex\"},[_c('label',{staticClass:\"form-check form-check-inline col-md-6\"},[_c('div',{staticClass:\"custom-control custom-checkbox custom-control-inline\"},[_c('input',{staticClass:\"chkItems custom-control-input\",attrs:{\"disabled\":_vm.checkboxdisabled,\"id\":itm.value,\"type\":\"checkbox\"},domProps:{\"checked\":_vm.checkIfselected(itm.value)},on:{\"change\":function($event){return _vm.checkedSelected($event, itm)}}}),_c('label',{staticClass:\"custom-control-label\",attrs:{\"for\":itm.value}},[_vm._v(_vm._s(itm.name))]),_c('input',{attrs:{\"type\":\"hidden\"},domProps:{\"value\":itm.value}})])]),_c('label',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"customslidercheck\"},[_c('input',{class:{'form-check-input':true},attrs:{\"id\":\"isTrueCheckDefault\",\"name\":\"taggele\",\"id\":itm.value+'_id',\"type\":\"checkbox\",\"disabled\":_vm.checkIfselected(itm.value) == false},domProps:{\"checked\":_vm.IsDefaultValue(itm.value)},on:{\"change\":function($event){return _vm.toggleSelected($event, itm)}}}),_c('span',{staticClass:\"slider round\"},[_c('span',{staticClass:\"slider-yes\"},[_vm._v(\"Yes\")]),_c('span',{staticClass:\"slider-no\"},[_vm._v(\"No\")])])])])])}),0)])])])])]}}:null],null,true)})],1)])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<div class=\"my-popups\">\r\n    <div class=\"modal d-block \">\r\n        <div class=\"modal-dialog modal-dialog-centered ui-draggable\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header ui-draggable-handle  py-0\">\r\n                    <button type=\"button\" class=\"close\" @click=\"closePopup\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 name=\"header\" class=\"modal-title py-3\">\r\n                        {{ $t('CustomFieldDependency') }} {{displayname}}\r\n                    </h4>\r\n                </div>\r\n                <div class=\"listing py-3 px-3\">\r\n                    <dynamic-form lang=\"en\" ref=\"DependencyForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n                     <template v-slot:tgslot-ProductTypeCode=\"{ data }\" v-if=\"DependencyData\"  >\r\n                            <div class=\"col-lg-12 p-0 workdiary_sanp_row border p-3\"  >\r\n                                <div class=\"timeline-panel row\">\r\n                                    <div class=\"col-md-6\" >\r\n                                        <ul class=\"list-group\">\r\n                                            <li class=\"list-group-item\" v-for=\"(item, index) in GetMultiSelectValue\" :key=\"index\" @click=\"showWhenSelectItem($event,item)\" :class=\"{ sel: selectedItem && selectedItem.name === item.name }\">\r\n                                                {{ item.name }}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"col-md-6 border-left pl-5\"  >                                     \r\n                                        <div class=\"scroldv\">\r\n                                            <div class=\"d-flex\" v-if=\"DependencyData\">\r\n                                            <h6 class=\"col-md-6\" >values</h6>   <h6 class=\"col-md-6\" >Isdefault</h6>\r\n                                            </div>\r\n                                            <ul class=\"list-group \" id=\"rightList\">\r\n                                                <li class=\"list-group-item d-flex\" v-for=\"(itm,index) in Dependencyvalues\">\r\n                                                    <label class=\"form-check form-check-inline col-md-6\">\r\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\r\n                                                            <input @change=\"checkedSelected($event, itm)\" :disabled=\"checkboxdisabled\" :id=\"itm.value\" type=\"checkbox\" :checked=\"checkIfselected(itm.value)\" class=\"chkItems custom-control-input\" >\r\n                                                            <label :for=\"itm.value\" class=\"custom-control-label\">{{itm.name}}</label>\r\n                                                            <input type=\"hidden\" :value=\"itm.value\">\r\n                                                        </div>\r\n                                                      \r\n                                                    </label>\r\n                                                    <label class=\"col-md-6\"  >\r\n                                                        <div class=\"customslidercheck\" >\r\n                                                            <input id=\"isTrueCheckDefault\" name=\"taggele\" :checked=\"IsDefaultValue(itm.value)\"  @change=\"toggleSelected($event, itm)\" :id=\"itm.value+'_id'\"  type=\"checkbox\"  :disabled=\"checkIfselected(itm.value) == false\" :class=\"{'form-check-input':true}\">                                                            \r\n                                                            <span class=\"slider round\">\r\n                                                                <span class=\"slider-yes\">Yes</span>\r\n                                                                <span class=\"slider-no\">No</span>\r\n                                                            </span>  \r\n                                                        </div>                   \r\n                                                     </label>\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </template>    \r\n                    </dynamic-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    DynamicForm\r\n} from 'tg-controls_cli/dist/myLib.common';\r\nimport DataService from \"../../services/DataService.js\";\r\n\r\nexport default {\r\n    components: {\r\n        DynamicForm\r\n    },\r\n    props: {\r\n        CustomFieldId: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        DependencyData: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        CustomLayoutId: {\r\n            type: Number,\r\n            required: true\r\n        },\r\n        Dependencyvalues: {\r\n            type: Array,\r\n            required: true\r\n        },\r\n        displayname: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        CustomLayout_Id:{\r\n            type: Number ,\r\n            required: true\r\n        },\r\n        LayoutList:{\r\n            type : Array,\r\n            required: true\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            dependentId: null,\r\n            selectedItem: null,\r\n            dependentOnDdlId: '',\r\n            type: 'dependonddl',\r\n            CustomData: [],\r\n            dependentListArray: [],\r\n            CustomArray: [],\r\n            SelectedCustomFieldName: null,\r\n            GetMultiSelectValue: [],\r\n            GetEditDependencyData: [],\r\n            showWhenListSelectedItem: '',\r\n            TagsSelectedArray: [],\r\n            DepartmentData: [],\r\n            FormSchema: [\r\n                {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('DependOn'),\r\n                    name: \"DependOn\",\r\n                    value: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                        onChange: this.GetCustomFieldDDL\r\n                    },\r\n                    validationRules: \"required\",\r\n                }\r\n\r\n                ],\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"MultiSelectField\",\r\n                    label: this.$t('ShowWhen'),\r\n                    name: \"ShowWhen\",\r\n                    value: '',\r\n                    mode: \"tag\",\r\n                    placeholder: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                        onChange: this.GetMultiValues,\r\n                        onRemove: this.removeRecord,\r\n                    },\r\n                    //validationRules: \"required\",\r\n                },\r\n\r\n                ]\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                            astype: \"CheckBoxField\",\r\n                            label: \"IsRequired\",\r\n                            name: \"IsRequired\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            disabled:false,\r\n                            config: {\r\n                                options: [{ value: \"1\", name: \"\" }]\r\n                            }\r\n                        },]\r\n            },\r\n            {\r\n                layoutType: \"Single\",\r\n                Data: [{\r\n                    astype: \"SlotField\",\r\n                    label: '',\r\n                    name: \"ProductTypeCode\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    visibility: true,\r\n                    config: {\r\n                        options: [],\r\n                    },\r\n                }]\r\n            },      \r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\"\r\n            },\r\n\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                onClick: this.closePopup\r\n            }\r\n            ],\r\n            // DependancyAdded:false,\r\n            // disabledtoggel:true\r\n            checkboxdisabled: true,\r\n            isDefault: '',\r\n            isrequired:'',\r\n            isreq:''\r\n        }\r\n\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.SelectedCustomFieldName = vm.$parent.customFieldName;\r\n        vm.GetCustomFieldDependent();\r\n        vm.editDependency();\r\n        if (vm.Dependencyvalues.length < 1) {\r\n            (vm.FormSchema)[3].Data[0].visibility = false;\r\n            (vm.FormSchema)[1].Data[0].visibility = false\r\n        }\r\n    },\r\n    methods: {\r\n        IsDefaultValue: function (val) {\r\n            let ths = this;\r\n            let returnValue = false;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                let selectedValue = ths.dependentListArray.filter((x) => { return x.value == ths.selectedItem.value });\r\n                if (selectedValue.length > 0 && selectedValue[0].isDefault == val) {\r\n                    return true;\r\n                }\r\n            }\r\n            return returnValue;\r\n        },\r\n        checkIfselected: function (val) {\r\n            let ths = this;\r\n            let returnValue = false;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                let selectedValue = ths.dependentListArray.filter((x) => { return x.value == ths.selectedItem.value });\r\n                if (selectedValue.length > 0 && selectedValue[0].dependent.includes(val)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return returnValue;\r\n        },\r\n        GetCustomFieldDependent() { \r\n            var vm = this;\r\n            (vm.FormSchema)[0].Data[0].config.options = [];\r\n            vm.LayoutList.forEach(xy => {\r\n                xy.FieldData.forEach(xz => {\r\n                    if(xz.name.includes(\"X\") && xy.group_display_name.includes(\"NewGroup\")){\r\n                        vm.DependencyData.forEach(data =>{\r\n                          if(data.name.includes(\"X\")){\r\n                            vm.DependencyData.pop(data);\r\n                          }\r\n                        })\r\n                    }\r\n                })\r\n            }) \r\n            vm.DependencyData.forEach(item => {\r\n                (vm.FormSchema)[0].Data[0].config.options.push({\r\n                    value: item.custom_field_id,\r\n                    name: item.display_name ? item.display_name : vm.$t(item.name)\r\n                })          \r\n            })\r\n        },\r\n        async GetCustomFieldDDL(e, field, dependentId) {\r\n            var vm = this;\r\n            var CustomData = [];\r\n            if (dependentId) {\r\n                vm.dependentOnDdlId = dependentId;\r\n            } else {\r\n                vm.dependentOnDdlId = e.target.value;\r\n            }\r\n            (vm.FormSchema)[1].Data[0].config.options = [];\r\n            var params = `customFieldId=${vm.dependentOnDdlId}&Type=${vm.type}`;\r\n            await DataService.GetCustomFieldShowWhenDDL(params).then((response) => {\r\n                CustomData = JSON.parse(response.data);\r\n                if (CustomData != null) {\r\n                    if(vm.Dependencyvalues.length > 1){\r\n                        vm.DependencyData=true;\r\n                        (vm.FormSchema)[3].Data[0].visibility = true;\r\n                        (vm.FormSchema)[1].Data[0].visibility = true\r\n                    }\r\n                    else{\r\n                        vm.DependencyData=false;\r\n                        (vm.FormSchema)[2].Data[0].disabled = true;\r\n                        (vm.FormSchema)[3].Data[0].visibility = false;\r\n                        (vm.FormSchema)[1].Data[0].visibility = false\r\n                    }\r\n                    \r\n                    CustomData.forEach(item => {\r\n                        (vm.FormSchema)[1].Data[0].config.options.push({\r\n                            value: item.value,\r\n                            name: item.name\r\n                        })\r\n                    })\r\n                }\r\n                else{\r\n                    vm.DependencyData=false;\r\n                    (vm.FormSchema)[2].Data[0].disabled = true;\r\n                    (vm.FormSchema)[3].Data[0].visibility = false;\r\n                    (vm.FormSchema)[1].Data[0].visibility = false\r\n                }\r\n                if (e != \"\") {\r\n                    if (e.target.value == vm.dependentId) {\r\n                        vm.editDependency();\r\n                    }\r\n                }\r\n                vm.TagsSelectedArray = [];\r\n                vm.GetMultiSelectValue = [];\r\n                (vm.FormSchema)[1].Data[0].value = [];\r\n                $('#rightList input:checkbox').each(function (index, item) {\r\n                    $(item).prop('checked', false);\r\n                });\r\n            })\r\n        },\r\n        closePopup() {\r\n            var vm = this;\r\n            vm.$parent.isShowDependencyFieldPopup = false;\r\n            vm.$parent.popupcloseforsystemfields();\r\n        },\r\n        showWhenSelectItem(event, itm) {\r\n            var vm = this;\r\n            var GetDependencyDataArray = [];\r\n            vm.checkboxdisabled = false;\r\n            if (vm.GetEditDependencyData.value_mapping) {\r\n                GetDependencyDataArray = JSON.parse(vm.GetEditDependencyData.value_mapping);\r\n            }\r\n            var ele = document.getElementsByClassName(\"chkItems custom-control-input\");\r\n            var toggleEle = document.getElementsByClassName(\"form-check-input\");\r\n\r\n            GetDependencyDataArray.forEach((item, index) => {\r\n                if (item.value == itm.value) {\r\n                    item.dependent.forEach(inneritem => {\r\n                        for (var i = 0; i < ele.length; i++) {\r\n                            if (ele[i].id == inneritem) {\r\n                                ele[i].checked = true;\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            vm.selectedItem = itm;\r\n        },\r\n        toggleSelected(event, item) { \r\n            var vm = this;\r\n            let value = 0;\r\n            if (event.target.checked == true) {\r\n                value = item.value;\r\n            }\r\n            let ths = this;\r\n            if (ths.selectedItem != null && typeof (ths.selectedItem.value) != 'undefined') {\r\n                ths.dependentListArray.forEach(function (x) {\r\n                    if (x.value == ths.selectedItem.value) {\r\n                        x.isDefault = value;\r\n                    }\r\n                });\r\n            }\r\n            vm.$refs.DependencyForm.UpdateKeyValue();\r\n        },\r\n        checkedSelected(event, data) {\r\n            var vm = this;\r\n            var element = document.getElementById(data.value + '_id');\r\n            if (event.target.checked) {\r\n                if (element) {\r\n                    element.disabled = false;\r\n                }\r\n            }\r\n            else {\r\n                if (element) {\r\n                    element.disabled = true;\r\n                    element.checked = false\r\n                }\r\n            }\r\n            vm.dependentListArray.forEach((inneritem, innerindex) => {\r\n                if (vm.selectedItem.value === inneritem.value) {\r\n                    vm.dependentListArray[innerindex].dependent.push(data.value);\r\n                    vm.dependentListArray[innerindex].isDefault = \"\"                   \r\n                }\r\n            })\r\n\r\n        },\r\n        removeRecord(event, field, meta) {\r\n            var vm = this;\r\n            let getindex = vm.GetMultiSelectValue.findIndex(x => x.value === event.value);\r\n            if (getindex != -1) {\r\n                vm.GetMultiSelectValue.splice(getindex, 1);\r\n                vm.dependentListArray.splice(getindex, 1);\r\n            }\r\n        },\r\n        GetMultiValues() {\r\n            var vm = this;\r\n            var obj = (vm.FormSchema)[1].Data[0].config.options.filter(x => x.name == event.target.textContent)[0];\r\n            obj.isSel = false;\r\n            vm.GetMultiSelectValue.push(obj);\r\n            vm.dependentListArray.push({ value: obj.value, dependent: []});\r\n        },\r\n        onSubmit(formfields, e) {\r\n            var vm = this; \r\n            var dependentOn = formfields.DependOn;\r\n            if(formfields.IsRequired[0]==1){\r\n                vm.isreq = true;\r\n            }\r\n            else{\r\n                vm.isreq =false\r\n            }\r\n                vm.dependentListArray.push({ \r\n                      IsRequired: vm.isreq});\r\n        \r\n            var showWhenArray = [];\r\n            var showWhen = JSON.stringify(Array.prototype.map.call(formfields.ShowWhen, function (item) {\r\n                showWhenArray.push(item.value);\r\n            }))\r\n            var obj = {\r\n                \"depend_on\": formfields.DependOn,\r\n                \"value\": showWhenArray\r\n            };\r\n            var url = `customFieldDependencyId=&customlayoutId=${vm.CustomLayout_Id}&customFieldId=${vm.CustomFieldId}&dependentOn=${dependentOn}&showWhen=${JSON.stringify(obj)}&valueMapping=${JSON.stringify(vm.dependentListArray)}`\r\n            DataService.ManageCustomFieldDependency(url).then(response => {\r\n                if (response.data == '1') {\r\n                    vm.SetDependField(dependentOn);\r\n                    vm.ShowAlert(vm.$t('DependentSuccess'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.closePopup();\r\n                } else if (response.data == '2') {\r\n                    vm.SetDependField(dependentOn);\r\n                    vm.ShowAlert(vm.$t('UpdatedSuccessfully'), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.closePopup();\r\n                }\r\n            })\r\n        },\r\n        SetDependField(dependCustomField){\r\n            var vm=this;\r\n            vm.$parent.LayoutList.forEach(x=>{\r\n                x.FieldData.forEach(item=>{\r\n                    if(item.display_name==vm.displayname){\r\n                        item.has_dependent_field=dependCustomField;\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        async editDependency() {\r\n            var vm = this;\r\n            vm.GetEditDependencyData = [];\r\n            var dependentData = [];\r\n            vm.TagsSelectedArray = [];\r\n            vm.GetMultiSelectValue = [];\r\n            (vm.FormSchema)[1].Data[0].value = [];\r\n            var url = `CustomLayoutId=${vm.CustomLayout_Id}&customFieldId=${vm.$parent.CustomFieldId}&dependentOnId=`; //${vm.dependentOnDdlId}`\r\n            await DataService.GetCustomFieldId(url).then(response => {\r\n                dependentData = JSON.parse(response.data)\r\n                if (dependentData.data.length > 0) {\r\n                    vm.GetEditDependencyData = dependentData.data[0];\r\n                    dependentData.data.forEach( xvalue =>{\r\n                        var array = xvalue.value_mapping.split(\" \");\r\n                        array = JSON.parse(array);\r\n                      if(array.length >= 2){\r\n                            vm.FormSchema[2].Data[0].value= array[1].IsRequired;\r\n                      }\r\n                      else{\r\n                        vm.FormSchema[2].Data[0].value=array[0].IsRequired\r\n                      }\r\n                       \r\n                    })\r\n\r\n                }\r\n            })\r\n            vm.dependentId = dependentData.data[0]?.dependent_on ?? null;\r\n            if (vm.dependentId != null) {\r\n                (vm.FormSchema)[0].Data[0].value = vm.dependentId;\r\n                await vm.GetCustomFieldDDL('', '', vm.dependentId);\r\n                const showWhenValues = JSON.parse(vm.GetEditDependencyData.show_when).value;\r\n                const selectedValues = (vm.FormSchema)[1].Data[0].config.options.filter(item => {\r\n                    return showWhenValues.includes(item.value);\r\n                });\r\n\r\n                vm.GetMultiSelectValue = selectedValues;\r\n                vm.dependentListArray = JSON.parse(vm.GetEditDependencyData.value_mapping);\r\n                vm.TagsSelectedArray = selectedValues.map(item => ({\r\n                    label: item.name,\r\n                    value: item.value\r\n                }));\r\n                (vm.FormSchema)[1].Data[0].value = vm.TagsSelectedArray;\r\n                return;\r\n            } else {\r\n                return\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.scroldv {\r\n    max-height: 490px;\r\n    overflow-y: scroll;\r\n}\r\n\r\n.sel {\r\n    background-color: #41b883;\r\n    /* Add your selected item style */\r\n    color: #fff;\r\n}\r\n\r\n.timeline-panel li {\r\n    max-width: 95%;\r\n    min-width: 95%;\r\n    margin-bottom: 0;\r\n}\r\n\r\n.custom-checkbox .custom-control-label {\r\n    margin-top: 5px;\r\n    margin-left: 0px;\r\n    padding-top: 3px;\r\n    padding-left: 5px;\r\n}\r\n\r\n.custom-control-input {\r\n    z-index: 1;\r\n    opacity: 0;\r\n    top: 5px;\r\n}\r\n\r\n.customslidercheck .form-check-input {\r\n    visibility: hidden;\r\n}\r\n\r\n.customslidercheck {\r\n    max-width: 68px;\r\n    width: 100%;\r\n    position: relative;\r\n    height: 24px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./DependencyField.vue?vue&type=template&id=31a74548&scoped=true&lang=en\"\nimport script from \"./DependencyField.vue?vue&type=script&lang=js\"\nexport * from \"./DependencyField.vue?vue&type=script&lang=js\"\nimport style0 from \"./DependencyField.vue?vue&type=style&index=0&id=31a74548&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31a74548\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".makepopleft#mainDivProp .dropdown-menu{inset:unset!important;transform:unset!important;right:0!important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddCustomFieldsPopup.vue?vue&type=style&index=0&id=059bce22&prod&lang=css\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=style&index=0&id=31a74548&prod&scoped=true&lang=css\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9868c764\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DependencyField.vue?vue&type=style&index=0&id=31a74548&prod&scoped=true&lang=css\""],"sourceRoot":""}