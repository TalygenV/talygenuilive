{"version":3,"sources":["webpack:///./src/views/ItemGroupList/Manage.vue","webpack:///src/views/ItemGroupList/Manage.vue","webpack:///./src/views/ItemGroupList/Manage.vue?038a","webpack:///./src/views/ItemGroupList/Manage.vue?d654"],"names":["render","_vm","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","DataLoaded","buttons","FormSchema","on","onSubmit","_e","staticRenderFns","data","group_id","TagsSelectedArray","Groupname","ReaderData","UsersData","UserList","Status","GroupDetail","Reader","Users","layoutType","Data","astype","label","name","value","placeholder","validationRules","config","options","mode","rows","type","class","text","onClick","onCancel","created","GetDeviceList","$route","params","id","GetNotficationUsers","ManageItemsGroup","methods","DataService","then","response","forEach","item","push","url","NAME","DEPARTMENT_NAME","USER_ID","console","log","formfields","vm","jsonobj","GroupId","GroupName","LocationId","ReaderId","UserIds","Array","prototype","map","call","join","GroupDetails","GroupDescription","StatusId","poststring","JSON","stringify","AddGroup","ShowAlert","$router","GetItemsGroupById","length","group_name","reader_id","user_ids","split","obj","find","x","status_id","group_details"],"mappings":"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","file":"js/chunk-2d0d7694.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('AddGroup')))])])])])]),_c('div',{staticClass:\"border p-3\"},[(_vm.DataLoaded)?_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}}):_vm._e(),_c('div',{staticClass:\"col-lg-6\"},[_c('small',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.$t('MandatoryString')))])])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"en\">\r\n<section class=\"main-content\">\r\n    <loader :is-visible=\"isLoading\"></loader>\r\n    <div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\">{{$t('AddGroup')}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"border p-3\">\r\n        <dynamic-form lang=\"en\" v-if=\"DataLoaded\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"onSubmit\">\r\n        </dynamic-form>\r\n        <div class=\"col-lg-6\">\r\n            <small class=\"text-danger\">{{$t('MandatoryString')}}</small>\r\n        </div>\r\n    </div>\r\n</section>\r\n</template>\r\n\r\n<script>\r\nimport DataService from '../../service/DataService';\r\nexport default {\r\n    data() {\r\n        return {\r\n            group_id: 0,\r\n            TagsSelectedArray: [],\r\n            isLoading: false,\r\n            Groupname: '',\r\n            ReaderData: [],\r\n            UsersData: [],\r\n            UserList: [],\r\n            Status: '',\r\n            GroupDetail: '',\r\n            Reader: '',\r\n            Users: '',\r\n            DataLoaded: 0,\r\n            FormSchema: [{\r\n                layoutType: \"double\",\r\n                Data: [{\r\n                    astype: \"TextField\",\r\n                    label: this.$t('GroupName'),\r\n                    name: \"GroupName\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('Reader'),\r\n                    name: \"Reader\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        // option_request_url:process.env.VUE_APP_API_URL+'/GetDeviceList',\r\n                        // token:this.GetUserInfo.Token,\r\n                        options: []\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"MultiSelectField\",\r\n                    label: this.$t('Users'),\r\n                    name: \"Users\",\r\n                    value: \"\",\r\n                    mode: \"tag\",\r\n                    placeholder: \"\",\r\n                     validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        options: []\r\n                    },\r\n                },\r\n                {\r\n                    astype: \"SelectField\",\r\n                    label: this.$t('Status'),\r\n                    name: \"Status\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: {\r\n                        \"required\": true\r\n                    },\r\n                    config: {\r\n                        options: [{\r\n                            value: \"1001\",\r\n                            name: 'Active'\r\n                        }, {\r\n                            value: \"1002\",\r\n                            name: 'InActive'\r\n                        }]\r\n                    },\r\n                }\r\n                ]\r\n            },\r\n            {\r\n                Data: [{\r\n                    astype: \"TextAreaField\",\r\n                    label: this.$t('GroupDetails'),\r\n                    name: \"GroupDescription\",\r\n                    value: \"\",\r\n                    placeholder: \"\",\r\n                    validationRules: \"\",\r\n                    config: {\r\n                        rows: 5\r\n                    }\r\n                }]\r\n            }\r\n            ],\r\n            buttons: [{\r\n                type: \"submit\",\r\n                class: \"btn btn-success\",\r\n                text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n            },\r\n\r\n            {\r\n                type: \"button\",\r\n                class: \"btn btn-danger\",\r\n                text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                onClick: this.onCancel\r\n            }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        await this.GetDeviceList();\r\n        if (this.$route.params.id != null) {\r\n            await this.GetNotficationUsers();\r\n            await this.ManageItemsGroup();\r\n        }\r\n        this.DataLoaded = 1;\r\n    },\r\n    methods: {\r\n        GetDeviceList: async function () {\r\n            await DataService.GetDeviceList().then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[1].config.options.push({\r\n                        name: `${item.name}`,\r\n                        value: `${item.value}`\r\n                    })\r\n                })\r\n            });\r\n        },\r\n        GetNotficationUsers: async function () {\r\n            var url = `moduleName=ASSETASSIGNMENT`;\r\n            await DataService.GetNotficationUsers(url).then(response => {\r\n                response.data.data.forEach((item) => {\r\n                    (this.FormSchema)[0].Data[2].config.options.push({\r\n                        name: `${item.NAME}(${item.DEPARTMENT_NAME})`,\r\n                        value: `${item.USER_ID}`\r\n                    })\r\n                })\r\n                console.log((this.FormSchema)[0].Data[2].config.options);\r\n            });\r\n        },\r\n        onSubmit: function (formfields) {\r\n            debugger;\r\n\r\n            var vm = this;\r\n            var jsonobj = {\r\n                GroupId: vm.group_id,\r\n                GroupName: formfields.GroupName,\r\n                LocationId: 0,\r\n                ReaderId: formfields.Reader,\r\n                UserIds: Array.prototype.map.call(formfields.Users, function (item) {\r\n                    return item.value;\r\n                }).join(\",\"),\r\n                GroupDetails: formfields.GroupDescription,\r\n                StatusId: formfields.Status\r\n            }\r\n            var poststring = JSON.stringify(jsonobj);\r\n            DataService.AddGroup(poststring).then(response => {\r\n                debugger;\r\n\r\n                if (response.data == 'insert') {\r\n                    vm.ShowAlert(vm.$t('AddedSuccess', [vm.$t('Group_Item')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.onCancel();\r\n                }\r\n                else if (response.data == 'update') {\r\n                    vm.ShowAlert(vm.$t('UpdatedSuccess', [vm.$t('Group_Item')]), \"success\", true, vm.$t(\"Alert\"));\r\n                    vm.onCancel();\r\n                }\r\n\r\n                else if (response.data == 'duplicate') {\r\n\r\n                    vm.ShowAlert(vm.$t(\"Duplicate Group name\"), \"warning\", true, vm.$t('Alert'));\r\n\r\n                }\r\n                else {\r\n                    vm.ShowAlert(vm.$t(\"Something went Wrong\"), \"failure\", true, vm.$t('Alert'));\r\n                }\r\n            });\r\n        },\r\n        onCancel: function () {\r\n            this.$router.push({\r\n                name: 'GroupList'\r\n            });\r\n        },\r\n        ManageItemsGroup: async function () {\r\n            var vm = this;\r\n            var url = `id=${this.$route.params.id}`\r\n            await DataService.GetItemsGroupById(url).then(response => {\r\n                if (response.data.length > 0) {\r\n                    (this.FormSchema)[0].Data[0].value = response.data[0].group_name;\r\n                    (this.FormSchema)[0].Data[1].value = response.data[0].reader_id;\r\n                    vm.group_id = response.data[0].group_id;\r\n                    vm.UserList = response.data[0].user_ids.split(\",\");\r\n                    vm.UserList.forEach((item) => {\r\n                        var obj = (this.FormSchema)[0].Data[2].config.options.find(x => x.value == item);\r\n                        vm.TagsSelectedArray.push({\r\n                            label: obj.name,\r\n                            value: obj.value\r\n                        })\r\n                    });\r\n                    (this.FormSchema)[0].Data[2].value = vm.TagsSelectedArray;\r\n                    (this.FormSchema)[0].Data[3].value = response.data[0].status_id;\r\n                    (this.FormSchema)[1].Data[0].value = response.data[0].group_details;\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Manage.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Manage.vue?vue&type=template&id=331c7554&lang=en&\"\nimport script from \"./Manage.vue?vue&type=script&lang=js&\"\nexport * from \"./Manage.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}