{"version":3,"sources":["webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?86c1","webpack:///./src/views/Ticketing/DetailsComponent/AddManageCategoryModal.vue?ccd8","webpack:///./src/views/Ticketing/addWithCustomLayout.vue","webpack:///./src/components/Modal/modaladdClient.vue","webpack:///src/components/Modal/modaladdClient.vue","webpack:///./src/components/Modal/modaladdClient.vue?25a6","webpack:///./src/components/Modal/modaladdClient.vue?f2a0","webpack:///src/views/Ticketing/addWithCustomLayout.vue","webpack:///./src/views/Ticketing/addWithCustomLayout.vue?22f4","webpack:///./src/views/Ticketing/addWithCustomLayout.vue?d619"],"names":["render","_vm","this","_c","_self","staticClass","attrs","isLoading","_v","_s","$t","on","Close","domProps","ref","buttons","FormSchema","scopedSlots","_u","key","fn","data","editor","onReady","model","value","fieldInfo","callback","$$v","$set","expression","error","staticRenderFns","props","modulename","type","String","required","submodulecode","callbackfunction","Function","CLASSIC_EDITOR","isSaveAndClose","CompanyType","AutoServiceDisabled","layoutType","Data","astype","label","name","placeholder","validationRules","config","options","showAddIcon","visibility","settings","isInSlot","max","class","text","onClick","SaveCategoryForm","IsExtraMapFeature","methods","checkForAutoCreateEnable","isChecked","vm","$parent","isManageCategory","ClearFieldValue","_data","vueObj","DataServices","then","response","btnType","$refs","AddManageCategoryModal","validate","result","jsonobj","CategoryName","Status","IsForServiceRequest","Description","CategoryType","params","JSON","stringify","SaveCategoryData","MSG","ShowAlert","length","forEach","group","gi","field","fi","component","isSuccessMessage","_m","saveTicketStatus","staticStyle","TicketNumber","_e","$event","updateCkeditorModel","directives","rawName","target","composing","isForServiceRequest","StaticObj","isShowMap","latLng","GetAddress","GetDropDownData","isManageClient","onSubmit","TimeZoneList","ParentAccountList","CientOwnerList","fileData","UserType","RoleList","onChange","onChangeRadio","group_name","showLabel","FieldIndex","maxSize","accept","fileType","iconClass","GetBase64String","onAddButtonClick","multiple","SaveData","created","GetTimeZoneList","GetParentAccountList","GetClientOwnerList","GetRoleList","GetUserInfo","services","item","index","push","code","AddClient","UpdateKeyValue","e","x","y","updateProperty","GetDDLData","DATA","evt","f","files","reader","FileReader","onload","theFile","binaryData","base64StringEncoded","window","btoa","fileName","n","lastIndexOf","extensionName","substring","fileExt","attachemnetMime","size","fileSize","fileObj","attachement_mime","base64String","contentType","readAsBinaryString","ex","GetClientOwner","USERNAME","USERID","userTypeId","RoleListList","ValidateClient","addClient","components","ManageMap","ManageCategory","ManageClient","isShowDrawButton","isShowSearchBox","CountryDDl","fileMulitpleData","StateDDl","ticketType","Latitude","Longitude","showTourGuide","disabled","onChangeDropdown","GetStateDDL","id","saveForm","AllowedFileType","userid","ID","isBlank","$route","$router","getForm","ticket_id","decodeURIComponent","ticket_Type","GetCountryDDL","indexValue","filteredCountry","filter","CompleteAddress","Country","LongName","FullAddress","filterCountry","setTimeout","filteredState","AdministrativeAreaLevel1","filterState","AdministrativeAreaLevel2","City","AdministrativeAreaLevel3","PinCode","dataLat1","dataLat2","dataLng1","dataLng2","LatLng","Lat","Lng","dropName","clientAddressId","clientid","BindAddressUsingClientAdrress","event","appendingUrl","GetDDLDataFSM","json","CountryId","toString","url","GetTicketClientAddress","USER_ADDRESS_1","COUNTRY_ID","CT","ST","STATE_ID","USER_CITY","USER_ZIPCODE","USER_ADDRESS_DESC","obj","location_nw","BindAddressInEdit","ADDRFROM","STATE","CITY","COUNTY","ZIP","DIGSTREET","NOTES","LOCATION_NW","LOCATION_SE","ui","getEditableElement","parentElement","insertBefore","view","toolbar","element","mediaIcon","document","getElementsByClassName","remove","divToRemove","querySelector","ArrowIcon","onChangeEventForFields","z","ths","fieldCode","AddTicketForm","catOptions","getPropertyValue","getSelectedValue","first_value","g","labelKey","GetClientaddress","minDate","clientId","undefined","ModuleName","SubModuleCode","status","addressResult","GetDynamicForm","responseData","CC_user","CC_User","cc_user","Attachment","attachmentData","attachmentName","attachment_name","attachmentPath","attachment_path","configData","configResult","row","CORE_CONFIG_KEY","CONFIG_DATA_VALUE","addressData","TicketCategoryMandatory","TicketProductMandatory","frmSchma","ConvertCustomFieldIntoDynamicFormObj","$","each","proxy","index1","OpenCategoryModal","mode","OpenClientModal","format","fileTypeList","AttachmentDisallowedFileType","reject","showSelectedFiles","onDeleteSelectedFiles","attachmentConfig","findAttachmentConfig","indexOf","splice","dataItem","toLowerCase","includes","AddTicket","CustomFieldArray","ConvertDynamicFormObjToCustomFieldObj","CustomFieldArrayStatic","field_name","field_value","CCUsers","slice","moduleCode","subModuleCode","SaveDynamicForm","parse","Value","OTHER_DATA","TICKET_NUMBER"],"mappings":"kHAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,aAAaL,EAAIM,aAAaJ,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,sCAAsC,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,gBAAgB,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,sBAAsBP,EAAG,SAAS,CAACE,YAAY,QAAQC,MAAM,CAAC,KAAO,gBAAgBK,GAAG,CAAC,MAAQV,EAAIW,QAAQ,CAACT,EAAG,KAAK,CAACE,YAAY,cAAcC,MAAM,CAAC,cAAc,YAAYH,EAAG,OAAO,CAACE,YAAY,cAAc,CAACF,EAAG,IAAI,CAACE,YAAY,0BAA0BC,MAAM,CAAC,cAAc,WAAW,KAAO,iBAAiB,KAAO,SAAS,gBAAgB,QAAQ,gBAAgB,oBAAoB,CAACH,EAAG,KAAK,CAACE,YAAY,uBAAuBJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,oBAAoBP,EAAG,MAAM,CAACE,YAAY,yCAAyCC,MAAM,CAAC,GAAK,kBAAkB,CAACH,EAAG,MAAM,CAACE,YAAY,sBAAsBC,MAAM,CAAC,GAAK,4BAA4B,CAACH,EAAG,MAAM,CAACE,YAAY,MAAMQ,SAAS,CAAC,UAAYZ,EAAIQ,GAAGR,EAAIS,GAAG,mCAAmCP,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,OAAO,CAACW,IAAI,0BAA0B,CAACX,EAAG,eAAe,CAACG,MAAM,CAAC,KAAO,KAAK,QAAUL,EAAIc,QAAQ,OAASd,EAAIe,YAAYC,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,qBAAqBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,WAAW,CAACG,MAAM,CAAC,OAASL,EAAIqB,QAAQX,GAAG,CAAC,MAAQV,EAAIsB,SAASC,MAAM,CAACC,MAAOJ,EAAKK,UAAUD,MAAOE,SAAS,SAAUC,GAAM3B,EAAI4B,KAAKR,EAAKK,UAAW,QAASE,IAAME,WAAW,0BAA0B3B,EAAG,OAAO,CAACE,YAAY,2BAA2BC,MAAM,CAAC,KAAO,gBAAgB,CAACL,EAAIO,GAAGP,EAAIQ,GAAGY,EAAKU,kBAAkB,IAAI,UAAU,MAEzsDC,EAAkB,G,YC0DP,GACfC,MAAA,CACAC,WAAA,CACAC,KAAAC,OACAC,UAAA,GAEAC,cAAA,CACAH,KAAAC,OACAC,UAAA,GAEAE,iBAAA,CACAJ,KAAAK,WAGAnB,OACA,OACAC,OAAA,KAAAmB,eACAlC,WAAA,EACAmC,eAAA,GACAC,YAAA,SACAC,qBAAA,EACA5B,WAAA,CACA,CACA6B,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAtC,GAAA,YACAuC,KAAA,WACAxB,MAAA,GACAyB,YAAA,GACAC,gBAAA,eAEA,CACAJ,OAAA,cACAC,MAAA,KAAAtC,GAAA,UACAuC,KAAA,SACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,EAAA5B,MAAA,OAAAwB,KAAA,WAAAxB,MAAA,OAAAwB,KAAA,aACAK,aAAA,GAEAH,gBAAA,iBAKA,CACAN,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,cACAC,MAAA,KAAAtC,GAAA,uBACAuC,KAAA,sBACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,IAEAE,YAAA,EACAJ,gBAAA,MAIA,CACAN,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAtC,GAAA,eACAuC,KAAA,cACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,IAGAG,SAAA,CACAC,UAAA,GAEAF,YAAA,EACAJ,gBAAA,aAAAO,IAAA,SAKA3C,QAAA,CACA,CACAoB,KAAA,SACAwB,MAAA,uBACAC,KAAA,gDACAnC,MAAA,eACAoC,QAAA,KAAAC,kBAEA,CACA3B,KAAA,SACAwB,MAAA,uBACAC,KAAA,sCACAC,QAAA,KAAAC,kBAGA,CACA3B,KAAA,SACAwB,MAAA,iBACAC,KAAA,yCACAC,QAAA,KAAAjD,UAKA,gBAEA,KAAAmD,qBAEAC,QAAA,CACAC,yBAAA,SAAAC,GAGA,IAAAC,EAAA,KAEAA,EAAAvB,oBADA,GAAAsB,GAMAtD,MAAA,WACA,IAAAuD,EAAA,KACAA,EAAAC,QAAAC,kBAAA,GAEAC,gBAAA,WACA,IAAAH,EAAA,KACAA,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MAAA,GACA0C,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MAAA,GACA0C,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MAAA,GACA0C,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MAAA,IAEAsC,kBAAA,WACA,IAAAS,EAAA,KACAC,OAAAV,oBAAAW,MACA,SAAAC,GACAH,EAAA7B,YAAA,GACA,MAAAgC,EAAAtD,MAAA,IAAAsD,EAAAtD,OACAmD,EAAA7B,YAAAgC,EAAAtD,KACA,UAAAmD,EAAA7B,YACA6B,EAAAxD,WAAA,GAAA8B,KAAA,GAAAS,YAAA,EAEAiB,EAAAxD,WAAA,GAAA8B,KAAA,GAAAS,YAAA,OAKAO,iBAAA,SAAAc,GACA,IAAAT,EAAA,KACA,gBAAAS,EAAAnD,QACA0C,EAAAzB,eAAA,gBAEAyB,EAAAU,MAAAC,uBAAAC,WAAAL,KAAAM,IACA,GAAAA,EAAA,CACA,IAAAC,EAAA,CACAC,aAAAf,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MACA0D,OAAAhB,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MACA2D,oBAAAjB,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MACA4D,YAAAlB,EAAAI,MAAAvD,WAAA,GAAA8B,KAAA,GAAArB,MACA6D,aAAA,mBAEAC,EAAAC,KAAAC,UAAAR,GACAR,OAAAiB,iBAAAH,GAAAb,KAAAC,IAEA,WAAAA,EAAAtD,KAAA2D,OAAAW,KACAxB,EAAAyB,UAAAzB,EAAAzD,GAAA,gBAAAyD,EAAAzD,GAAA,2BAAAyD,EAAAzD,GAAA,UACA,gBAAAyD,EAAAzB,gBACAyB,EAAAvD,QACAuD,EAAAC,QAAApD,WAAA6E,OAAA,GACA1B,EAAAC,QAAApD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,sBAAAD,EAAAhD,MACAkB,EAAA5B,iBAAA,kBAAA0D,EAAA,YAQA9B,EAAAG,kBACAH,EAAAC,QAAApD,WAAA6E,OAAA,GACA1B,EAAAC,QAAApD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,sBAAAD,EAAAhD,MACAkB,EAAA5B,iBAAA,kBAAA0D,EAAA,YAQA9B,EAAAyB,UAAAzB,EAAAzD,GAAA,cAAAyD,EAAAzD,GAAA,2BAAAyD,EAAAzD,GAAA,kBClQ8X,I,YCO1XyF,EAAY,eACd,EACAnG,EACAgC,GACA,EACA,KACA,KACA,MAIa,OAAAmE,E,kDClBf,IAAInG,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACE,YAAY,gBAAgB,CAACF,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,yBAAyB,CAACF,EAAG,MAAM,CAACE,YAAY,gCAAgC,CAACF,EAAG,OAAO,CAACE,YAAY,qBAAqB,CAACJ,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,GAAG,iBAAiBP,EAAG,OAAO,CAACE,YAAY,eAAe,CAACF,EAAG,aAAa,CAACE,YAAY,sCAAsCC,MAAM,CAAC,GAAK,qBAAqB,CAACH,EAAG,KAAK,CAACE,YAAY,4BAA4BF,EAAG,MAAMF,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIS,GAAG,eAAe,QAAQ,SAAUT,EAAImG,iBAAkBjG,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,uEAAuE,CAACJ,EAAIoG,GAAG,GAAGlG,EAAG,KAAK,CAACE,YAAY,aAAa,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,gBAAgBP,EAAG,MAAM,CAACE,YAAY,sBAAsB,CAACF,EAAG,IAAI,CAACF,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIqG,qBAAqBnG,EAAG,MAAM,CAACoG,YAAY,CAAC,YAAY,OAAO,SAAW,WAAW,WAAa,UAAU,QAAU,YAAY,OAAS,OAAO,OAAS,qBAAqB,QAAU,eAAe,MAAQ,YAAY,CAACtG,EAAIO,GAAG,IAAIP,EAAIQ,GAAGR,EAAIuG,kBAAkB,OAAOvG,EAAIwG,KAAKtG,EAAG,OAAO,CAACW,IAAI,aAAa,CAAGb,EAAImG,iBAAs2CnG,EAAIwG,KAAx1CtG,EAAG,eAAe,CAACW,IAAI,gBAAgBR,MAAM,CAAC,QAAUL,EAAIc,QAAQ,OAASd,EAAIe,YAAYC,YAAYhB,EAAIiB,GAAG,CAAC,CAACC,IAAI,iBAAiBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,WAAW,CAACwD,MAAM,CAAE,aAA4B,IAAdtC,EAAKU,OAAczB,MAAM,CAAC,OAASL,EAAIqB,QAAQX,GAAG,CAAC,MAAQV,EAAIsB,QAAQ,MAAQ,SAASmF,GAAQ,OAAOzG,EAAI0G,oBAAoBD,EAAQrF,KAAQG,MAAM,CAACC,MAAOJ,EAAKK,UAAUD,MAAOE,SAAS,SAAUC,GAAM3B,EAAI4B,KAAKR,EAAKK,UAAW,QAASE,IAAME,WAAW,0BAA0B3B,EAAG,OAAO,CAACE,YAAY,oBAAoB,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGY,EAAKU,UAAU5B,EAAG,QAAQ,CAACyG,WAAW,CAAC,CAAC3D,KAAK,QAAQ4D,QAAQ,UAAUpF,MAAOJ,EAAKK,UAAUD,MAAOK,WAAW,yBAAyBxB,MAAM,CAAC,KAAO,UAAUO,SAAS,CAAC,MAASQ,EAAKK,UAAUD,OAAQd,GAAG,CAAC,MAAQ,SAAS+F,GAAWA,EAAOI,OAAOC,WAAiB9G,EAAI4B,KAAKR,EAAKK,UAAW,QAASgF,EAAOI,OAAOrF,cAAexB,EAAI+G,oBAAqB,CAAC7F,IAAI,sBAAsBC,GAAG,UAAS,KAAEC,IAAQ,MAAO,CAAClB,EAAG,MAAM,CAACE,YAAY,OAAO,CAACF,EAAG,MAAM,CAACE,YAAY,YAAY,CAACF,EAAG,eAAe,CAACW,IAAI,iBAAiBR,MAAM,CAAC,OAASL,EAAIgH,cAAc,GAAG9G,EAAG,MAAM,CAACE,YAAY,YAAY,CAAEJ,EAAIiH,UAAW/G,EAAG,YAAY,CAACE,YAAY,MAAMC,MAAM,CAAC,QAAU,SAAS,aAAe,YAAY,OAASL,EAAIkH,OAAO,OAASlH,EAAImD,OAAO,UAAY,SAASzC,GAAG,CAAC,WAAaV,EAAImH,cAAcnH,EAAIwG,MAAM,QAAQ,MAAM,MAAK,MAAkB,GAAIxG,EAAIoE,iBAAkBlE,EAAG,iBAAiB,CAACG,MAAM,CAAC,WAAa,YAAY,cAAgB,YAAY,iBAAmBL,EAAIoH,mBAAmBpH,EAAIwG,KAAMxG,EAAIqH,eAAgBnH,EAAG,eAAe,CAACG,MAAM,CAAC,iBAAmBL,EAAIoH,mBAAmBpH,EAAIwG,MAAM,IAElyFzE,EAAkB,CAAC,WAAY,IAAI/B,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,OAAO,CAACE,YAAY,0BAA0B,CAACF,EAAG,IAAI,CAACE,YAAY,oB,0DCFzIL,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,SAAS,CAACG,MAAM,CAAC,aAAaL,EAAIM,aAAaJ,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,sCAAsC,CAACF,EAAG,MAAM,CAACE,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,6CAA6C,CAACF,EAAG,KAAK,CAACE,YAAY,eAAe,CAACJ,EAAIO,GAAGP,EAAIQ,GAAGR,EAAIS,GAAG,kBAAkBP,EAAG,SAAS,CAACE,YAAY,QAAQC,MAAM,CAAC,KAAO,UAAUK,GAAG,CAAC,MAAQ,SAAS+F,GAAQ,OAAOzG,EAAIW,WAAW,CAACT,EAAG,KAAK,CAACE,YAAY,cAAcC,MAAM,CAAC,cAAc,cAAcH,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,OAAO,CAACW,IAAI,kBAAkB,CAACX,EAAG,eAAe,CAACW,IAAI,YAAYR,MAAM,CAAC,KAAO,KAAK,QAAUL,EAAIc,QAAQ,OAASd,EAAIe,YAAYL,GAAG,CAAC,SAAWV,EAAIsH,aAAa,IAAI,UAAU,IAE/zBvF,EAAkB,GCwBP,GACfC,MAAA,CACAM,iBAAA,CACAJ,KAAAK,WAGAnB,OACA,OACAd,WAAA,EACAiH,aAAA,GACAC,kBAAA,GACAC,eAAA,GACAC,SAAA,GACAC,SAAA,EACAC,SAAA,GACA7G,WAAA,CACA,CACA6B,WAAA,OACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAtC,GAAA,cACAuC,KAAA,aACAxB,MAAA,GACAyB,YAAA,GACAC,gBAAA,aAAAO,IAAA,MAEA,CACAX,OAAA,YACAC,MAAA,KAAAtC,GAAA,aACAuC,KAAA,YACAxB,MAAA,GACAyB,YAAA,GACAC,gBAAA,aAAAO,IAAA,MAEA,CACAX,OAAA,YACAC,MAAA,KAAAtC,GAAA,UACAuC,KAAA,QACAxB,MAAA,GACAyB,YAAA,GACAC,gBAAA,aAAAO,IAAA,MAEA,CACAX,OAAA,cACAC,MAAA,KAAAtC,GAAA,UACAuC,KAAA,SACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,EAAA5B,MAAA,IAAAwB,KAAA,SAAAxB,MAAA,IAAAwB,KAAA,WACAK,aAAA,GAGAH,gBAAA,IAEA,CACAJ,OAAA,aACAC,MAAA,KAAAtC,GAAA,WACAuC,KAAA,UACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,EACAJ,KAAA,WAAAxB,MAAA,GACA,CACAwB,KAAA,aAAAxB,MAAA,IAEA6B,aAAA,EACAwE,SAAA,KAAAC,eAEA5E,gBAAA,eAEA,CACAJ,OAAA,cACAC,MAAA,KAAAtC,GAAA,kBACAuC,KAAA,iBACAxB,MAAA,GACAyB,YAAA,GACAK,YAAA,EACAH,OAAA,CACAC,QAAA,GACAC,aAAA,GAGAH,gBAAA,eAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,gBACAuC,KAAA,eACAxB,MAAA,GACAyB,YAAA,GACAK,YAAA,EACAJ,gBAAA,aAAAO,IAAA,MAEA,CACAX,OAAA,cACAC,MAAA,KAAAtC,GAAA,gBACAuC,KAAA,eACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,GACAC,aAAA,GAGAH,gBAAA,MAKA,CACA6E,WAAA,mBACAnF,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,cACAC,MAAA,KAAAtC,GAAA,YACAuC,KAAA,WACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,GACAC,aAAA,GAGAH,gBAAA,IAEA,CACAJ,OAAA,cACAC,MAAA,cACAC,KAAA,OACAxB,MAAA,GACA2B,OAAA,CACAC,QAAA,EAAAJ,KAAA,WAAAxB,MAAA,aAAAwB,KAAA,aAAAxB,MAAA,gBAGAyB,YAAA,SACAC,gBAAA,eAEA,CACAJ,OAAA,cACAC,MAAA,KAAAtC,GAAA,QACAuC,KAAA,OACAxB,MAAA,GACAyB,YAAA,GACAE,OAAA,CACAC,QAAA,GACAC,aAAA,GAGAH,gBAAA,IAEA,CACAJ,OAAA,YACAkF,WAAA,EACAhF,KAAA,aACAC,YAAA,GACAC,gBAAA,GACA+E,WAAA,EACA9E,OAAA,CACA+E,QAAA,EACAC,OAAA,CACA,CACAC,SAAA,MACAC,UAAA,mBAEA,CACAD,SAAA,MACAC,UAAA,oBAGAR,SAAA,KAAAS,gBACAjF,aAAA,EACAkF,iBAAA,GACAC,UAAA,OAMA1H,QAAA,CACA,CACAoB,KAAA,SACAwB,MAAA,kBACAC,KAAA,sCACAC,QAAA,KAAA6E,UAEA,CACAvG,KAAA,SACAwB,MAAA,iBACAC,KAAA,wCACAC,QAAA,KAAAjD,UAKA+H,QAAA,uBACA,KAAAC,wBACA,KAAAC,6BACA,KAAAC,2BACA,KAAAC,cACA5E,GAAAyD,SAAAzD,GAAA6E,YAAApB,UAEA5D,QAAA,CACApD,MAAA,WACA,IAAAuD,EAAA,KACAA,EAAAC,QAAAkD,gBAAA,GAEAsB,gBAAA,iBACA,IAAAzE,EAAA,WACA8E,OAAAL,kBAAAlE,KAAA,UACA,MAAAC,EAAAtD,MAAA,IAAAsD,EAAAtD,MACAsD,EAAAtD,KAAAwE,OAAA,IACA1B,EAAAqD,aAAA7C,EAAAtD,KACA8C,EAAAqD,aAAA1B,QAAA,CAAAoD,EAAAC,KACAhF,EAAAnD,WAAA,GAAA8B,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAG,KACApG,KAAAiG,EAAAzH,UAGA0C,EAAAU,MAAAyE,UAAAC,qBAKAxB,cAAA,eAAAyB,EAAAC,EAAAC,GACA,IAAAvF,EAAA,KAEA,GAAAsF,EAAAhI,OACA0C,EAAAU,MAAAyE,UAAAK,eAAA,kCACAxF,EAAAU,MAAAyE,UAAAK,eAAA,kCAGAxF,EAAAU,MAAAyE,UAAAK,eAAA,gCACAxF,EAAAU,MAAAyE,UAAAK,eAAA,kCACAxF,EAAAU,MAAAyE,UAAAC,mBAIAV,qBAAA,iBACA,IAAA1E,EAAA,KACAoB,EAAA,kDACA0D,OAAAW,WAAArE,GAAAb,KAAA,UACA,MAAAC,EAAAtD,MAAA,IAAAsD,EAAAtD,MACAsD,EAAAtD,KAAAwI,KAAAhE,OAAA,IACA1B,EAAAsD,kBAAA9C,EAAAtD,KAAAwI,KACA1F,EAAAsD,kBAAA3B,QAAA,CAAAoD,EAAAC,KACAhF,EAAAnD,WAAA,GAAA8B,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,SAGAkB,EAAAU,MAAAyE,UAAAC,qBAMAhB,gBAAA,SAAAuB,GAEA,IAEA,IAAA3F,EAAA,KAEAA,EAAAwD,SAAA,GAEA,IAAAoC,EAAAD,EAAAhD,OAAAkD,MAAA,GACAC,EAAA,IAAAC,WAEAD,EAAAE,OAAA,SAAAC,GAEA,gBAAAZ,GACA,IAAAa,EAAAb,EAAA1C,OAAA9B,OAEAsF,EAAAC,OAAAC,KAAAH,GAGAI,EAAAV,EAAA9G,KACAkB,EAAAsG,WACA,IAAAC,EAAAD,EAAAE,YAAA,KACAC,EAAAH,EAAAI,UAAAH,EAAA,EAAAD,EAAA5E,QAEA1B,EAAA2G,SAAA,IAAAF,EACA,IAAAG,EAAA,mBAAAhB,EAAA5H,KAAA,aAAA4H,EAAAiB,KAAA,kBAAAJ,EAAA,KACAK,EAAAlB,EAAAiB,KACA7G,EAAA8G,WAGA,IAAAC,EAAA,CACAC,iBAAAJ,EACAN,WACAW,aAAAd,EACAW,SAAAlB,EAAAiB,KACAK,YAAAtB,EAAA5H,MAGAgC,EAAAwD,SAAAyB,KAAA8B,IA3BA,GA+BAjB,EAAAqB,mBAAAvB,GAEA,MAAAwB,MAGAzC,mBAAA,iBACA,IAAA3E,EAAA,KACAoB,EAAA,gCACA0D,OAAAuC,eAAAjG,GAAAb,KAAA,UACA,MAAAC,EAAAtD,MAAA,IAAAsD,EAAAtD,MACAsD,EAAAtD,KAAAwE,OAAA,IACA1B,EAAAsD,kBAAA9C,EAAAtD,KACA8C,EAAAsD,kBAAA3B,QAAA,CAAAoD,EAAAC,KACAhF,EAAAnD,WAAA,GAAA8B,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACAnG,KAAAiG,EAAAuC,SACAhK,MAAAyH,EAAAwC,WAGAvH,EAAAU,MAAAyE,UAAAC,qBAMAR,YAAA,iBAEA,IAAA5E,EAAA,KAEAwH,GADAxH,EAAA,KACA,GACA,MAAAA,EAAAyD,SACA+D,EAAA,EAEA,MAAAxH,EAAAyD,SACA+D,EAAA,EAEA,MAAAxH,EAAAyD,SACA+D,EAAA,EAEA,MAAAxH,EAAAyD,WACA+D,EAAA,GAEA,IAAApG,EAAA,gDAAAoG,QACA1C,OAAAW,WAAArE,GAAAb,KAAA,UACA,MAAAC,EAAAtD,MAAA,IAAAsD,EAAAtD,MACAsD,EAAAtD,KAAAwI,KAAAhE,OAAA,IACA1B,EAAAyH,aAAAjH,EAAAtD,KAAAwI,KACA1F,EAAA0D,SAAA/B,QAAA,CAAAoD,EAAAC,KACAhF,EAAAnD,WAAA,GAAA8B,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACAnG,KAAAiG,EAAAzH,MACAA,MAAAyH,EAAAjG,SAGAkB,EAAAU,MAAAyE,UAAAC,qBAMAb,SAAA,WACA,IAAAvE,EAAA,KACAA,EAAAU,MAAAgH,eAAA9G,WAAAL,KAAAM,IACA,GAAAA,EAAA,CACA,IAAA8G,EAAA,CACA,UAAA3H,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,SAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,MAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,OAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,QAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,eAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,YAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,YAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,SAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,WAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,SAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MAAA,KAAA0C,EAAAnD,WAAA,GAAA8B,KAAA,GAAArB,MACA,kBACA,mBACA,iBACA,kBACA,aACA,wBACA,cACA,aACA,eACA,cACA,SAAA0C,EAAAwD,UAGAsB,OAAAK,UAAAwC,GAAApH,MAAA,SAAAC,GAEA,WAAAA,EAAAtD,KAAA,GAAA8D,QACAhB,EAAAyB,UAAAzB,EAAAzD,GAAA,gBAAAyD,EAAAzD,GAAA,yBAAAyD,EAAAzD,GAAA,UACAyD,EAAAC,QAAApD,WAAA6E,OAAA,GACA1B,EAAAC,QAAApD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,yBAAAD,EAAAhD,OACAkB,EAAA5B,iBAAA,UAAA0D,EAAA,MACA9B,EAAAvD,cAOAuD,EAAAyB,UAAAzB,EAAAzD,GAAA,kCAAAyD,EAAAzD,GAAA,mBC/auW,I,YCOnWyF,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIa,EAAAA,E,QC8CA,GACf4F,WAAA,CACAC,iBACAC,sBACAC,gBAEA7K,KAAA,WACA,OACA+B,OAAA,CACA+I,kBAAA,EACAC,iBAAA,GAEApL,WAAA,GACAqL,WAAA,GACAjG,kBAAA,EACAkG,iBAAA,GACApF,WAAA,EACAC,OAAA,GACAkF,WAAA,GACAE,SAAA,GACAC,WAAA,GACAC,SAAA,GACAC,UAAA,GACAC,eAAA,EACA3F,qBAAA,EACAC,UAAA,CACA,CACApE,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,cACAC,MAAA,KAAAtC,GAAA,iBACAuC,KAAA,SACAxB,MAAA,GACAmL,UAAA,EACAxJ,OAAA,CACAC,QAAA,GACAyE,SAAA,KAAA+E,kBAGA3J,YAAA,KAAAxC,GAAA,UACAyC,gBAAA,MAKA,CACAN,WAAA,SACAC,KAAA,CACA,CACAC,OAAA,YACAC,MAAA,KAAAtC,GAAA,WACAuC,KAAA,UACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,sBACAyC,gBAAA,eAEA,CACAJ,OAAA,cACAC,MAAA,KAAAtC,GAAA,WACAuC,KAAA,aACAxB,MAAA,GACAmL,UAAA,EACAxJ,OAAA,CACAC,QAAA,GACAyE,SAAA,KAAAgF,aAEA5J,YAAA,KAAAxC,GAAA,UACAyC,gBAAA,IAEA,CACAJ,OAAA,cACAC,MAAA,KAAAtC,GAAA,SACAuC,KAAA,QACAxB,MAAA,GACAmL,UAAA,EACAxJ,OAAA,CACAC,QAAA,IAEAH,YAAA,KAAAxC,GAAA,UACAyC,gBAAA,IAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,UACAuC,KAAA,SACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,qBACAyC,gBAAA,IAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,QACAuC,KAAA,OACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,uBACAyC,gBAAA,IAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,UACAuC,KAAA,SACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,qBACAyC,gBAAA,IAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,WACAuC,KAAA,MACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,sBACAyC,gBAAA,IAEA,CACAJ,OAAA,YACAC,MAAA,KAAAtC,GAAA,oBACAuC,KAAA,QACAxB,MAAA,GACAmL,UAAA,EACA1J,YAAA,KAAAxC,GAAA,0BACAyC,gBAAA,OAKApC,QAAA,CACA,CACAoB,KAAA,SACA4K,GAAA,oBACApJ,MAAA,yCACAC,KAAA,gDACAnC,MAAA,QACAoC,QAAA,KAAAmJ,UAEA,CACA7K,KAAA,SACA4K,GAAA,oBACApJ,MAAA,yCACAC,KAAA,yCACAC,QAAA,KAAAmJ,UAEA,CACA7K,KAAA,SACAwB,MAAA,iBACAC,KAAA,0CACAC,QAAA,KAAAjD,QAGAyD,kBAAA,EACAiD,gBAAA,EACA2F,gBAAA,GACA3L,OAAA,KAAAmB,iBAGAkG,QAAA,WACA,IAAAxE,EAAA,KAEA,GADAA,EAAA+I,OAAA,KAAAlE,YAAAmE,GACAhJ,EAAAiJ,QAAAjJ,EAAAkJ,OAAA9H,OAAAwH,KAAA,KAAA5I,EAAAkJ,OAAA9H,OAAAwH,GAMA,KAAA5I,EAAAkJ,OAAA9H,OAAAwH,IAKA5I,EAAAmJ,QAAAlE,KAAA,CAAAnG,KAAA,MAAAsC,OAAA,CAAAwH,GAAA,KAJA5I,EAAAoJ,QAAA,OAPA,CACA,IAAAC,EAAAC,mBAAAtJ,EAAAkJ,OAAA9H,OAAAwH,IACA5I,EAAAkJ,OAAA9H,OAAAmI,YACAvJ,EAAAoJ,QAAAC,GAYArJ,EAAAwJ,iBAEA3J,QAAA,CACAoD,WAAA,SAAA/F,GAEA,IAAAmD,EAAA,KACAA,EAAAiI,SAAA,GACAjI,EAAAkI,UAAA,GAEA,IAAAkB,EAAAvM,EAAAwE,OAAA,EACA,IAAAgI,EAAArJ,EAAA6H,WAAAyB,OAAA5E,GACAA,EAAAjG,OAAA5B,EAAAuM,GAAAG,gBAAAC,QAAAC,UAEAzJ,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAAuM,GAAAG,gBAAAG,YACA,IAAAC,EAAA,IAAAN,EAAA,GAAAA,EAAA,GAAApM,MACA+C,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAA0M,EACA3J,EAAAsI,YAAA,KAAAqB,GACAC,YAAA,WACA,IAAAC,EAAA7J,EAAA+H,SAAAuB,OAAA5E,GACAA,EAAAjG,OAAA5B,EAAAuM,GAAAG,gBAAAO,yBAAAL,UAEA,IAAAM,EAAA,IAAAF,EAAA,GAAAA,EAAA,GAAA5M,MACA+C,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAA8M,IACA,KACA/J,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAAuM,GAAAG,gBAAAS,yBAAAP,SACAzJ,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAAuM,GAAAG,gBAAAU,KAAAR,SACAzJ,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAAuM,GAAAG,gBAAAW,yBAAAT,SACAzJ,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAAuM,GAAAG,gBAAAY,QACA,IAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACA1N,EAAAuM,GAAAoB,OAAAlJ,QAAA,CAAAoD,EAAAC,KACA,GAAAA,GACAyF,EAAA1F,EAAA+F,IACAJ,EAAA3F,EAAAgG,MAGAJ,EAAA5F,EAAA+F,IACAF,EAAA7F,EAAAgG,OAGA1K,EAAAiI,SAAAqC,EAAA,IAAAD,EACArK,EAAAkI,UAAAkC,EAAA,IAAAG,EAEAvK,EAAAxD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,uBAAAH,EAAAiC,YAAA,sBAAAjC,EAAAiC,aACA,eAAA/B,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAiI,UAEA,eAAAxG,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAkI,iBAMAG,iBAAA,eAAArD,GACA,IAAArF,EAAA,KACAgL,EAAA3F,EAAA1C,OAAA7D,KACAmM,EAAA,GACA,UAAAD,IACAC,EAAA5F,EAAA1C,OAAArF,OAEA0C,EAAAnD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,4BAAAD,EAAAhD,KAAA,CACA,IAAAoM,EAAApJ,EAAAxE,YACA0C,EAAAiJ,QAAAiC,IAAA,IAAAD,GACAjL,EAAAmL,8BAAAD,EAAAD,SAMAzB,cAAA,eAAA4B,GAEA,IAAApL,EAAA,KACAA,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA,GACAc,EAAAkI,WAAA,GACA,IAAAmD,EAAA,gEACA/K,OAAAgL,cAAAD,GAAA9K,MAAA,SAAAC,GAEA,GAAAA,EAAAtD,KAAA,CACA,IAAAqO,EAAA/K,EAAAtD,KACA8C,EAAAkI,WAAA1H,EAAAtD,KAAA2D,OAAA6E,KACA,MAAA6F,GACA/K,EAAAtD,KAAA2D,OAAA6E,KAAA/D,QAAA,CAAAoD,EAAAC,KACAhF,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,cAOA6J,YAAA,eAAAyC,EAAAxC,GACA,IAAA5I,EAAA,KACAwL,EAAA,EAEAA,EADA,MAAAJ,EACAxC,EAEAwC,EAAAzI,OAAArF,MAAAmO,WAEAzL,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA,GACAc,EAAAoI,SAAA,GACA,IAAAiD,EAAA,sDAAAG,QACAlL,OAAAgL,cAAAD,GAAA9K,MAAA,SAAAC,GACA,GAAAA,EAAAtD,KAAA,CACA,IAAAqO,EAAA/K,EAAAtD,KACA8C,EAAAoI,SAAA5H,EAAAtD,KAAA2D,OAAA6E,KACA,MAAA6F,GACA/K,EAAAtD,KAAA2D,OAAA6E,KAAA/D,QAAA,CAAAoD,EAAAC,KACAhF,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,cAOAqM,8BAAA,eAAAD,EAAAD,GAEA,IAAA5K,EAAA,KACAA,EAAAiI,SAAA,GACAjI,EAAAkI,UAAA,GACAlI,EAAA2C,OAAA,GACA,IAAA0I,EAAA,MAAAR,oCAAAD,UACA3K,OAAAqL,uBAAAD,GAAAnL,KAAAC,IAEA,SAAAA,EAAAtD,KAAA2D,QAAAL,EAAAtD,KAAA2D,OAAA3D,KAAAwE,OAAA,GACArB,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAA0O,eACAvL,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAA2O,WACAxL,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAA4O,GAAA,GAAAC,GAAA,GAAAC,SACA3L,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAA+O,UACA5L,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAgP,aACA7L,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAkD,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAiP,kBACA9L,EAAAiI,SAAA9H,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAoL,SAAA,IAAA9H,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAqL,UACAlI,EAAAkI,UAAA/H,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAoL,SAAA,IAAA9H,EAAAtD,KAAA2D,OAAA3D,KAAA,GAAAqL,UACAlI,EAAAxD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,uBAAAH,EAAAiC,YAAA,sBAAAjC,EAAAiC,aACA,eAAA/B,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAiI,UAEA,eAAAxG,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAkI,gBAKA,IAAA6D,EAAA,CAAAC,YAAAhM,EAAAiI,UACAjI,EAAA2C,OAAAoJ,MAIAE,kBAAA,eAAApP,GAEA,IAAAmD,EAAA,KAIA,GAHAA,EAAAiI,SAAA,GACAjI,EAAAkI,UAAA,GACAlI,EAAA2C,OAAA,GACA,MAAA9F,EAAA,CACAmD,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAAqP,SACAlM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAA2O,WACAxL,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAAsP,MACAnM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAAuP,KACApM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAAwP,OACArM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAAyP,IACAtM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAA0P,UACAvM,EAAAyC,UAAA,GAAAnE,KAAA,GAAArB,MAAAJ,EAAA,GAAA2P,MACAxM,EAAAiI,SAAApL,EAAA,GAAA4P,YACAzM,EAAAkI,UAAArL,EAAA,GAAA6P,YACA1M,EAAAxD,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,uBAAAH,EAAAiC,YAAA,sBAAAjC,EAAAiC,aACA,eAAA/B,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAiI,UAEA,eAAAxG,EAAAhD,OACAgD,EAAAxE,MAAA+C,EAAAkI,gBAKA,IAAA6D,EAAA,CAAAC,YAAAhM,EAAAiI,UACAjI,EAAA2C,OAAAoJ,IAIAhP,QAAAD,GACAA,EAAA6P,GAAAC,qBAAAC,cAAAC,aACAhQ,EAAA6P,GAAAI,KAAAC,QAAAC,QACAnQ,EAAA6P,GAAAC,sBAEA,IAAAM,EAAAC,SAAAC,uBAAA,kBACAF,EAAAG,SACA,IAAAC,EAAAH,SAAAI,cAAA,0BACAD,EAAAD,SACA,IAAAG,EAAAL,SAAAC,uBAAA,0BACAI,EAAAH,UAEAI,uBAAA,SAAAxI,EAAAC,EAAAwI,GACA,IAAAC,EAAA,KACA,qBAAA1I,EAAA,CACAC,EAAAtG,OAAAC,QAAA,GACA,IAAAwM,EAAA,iCAAAnG,EAAAtG,OAAAgP,2BAAAF,IACAzN,OAAAmF,WAAAiG,GAAAnL,MAAA,SAAAC,GACA,GAAAA,EAAAtD,KAAA,CACA,IAAAqO,EAAA/K,EAAAtD,KACA,MAAAqO,IACAhG,EAAAtG,OAAAC,QAAAsB,EAAAtD,KAAAwI,KACAsI,EAAAtN,MAAAwN,cAAA9I,0BAIA,CACA,iBAAAG,EAAAzG,KACAkP,EAAA5J,gBAAAmB,EAAAjI,YACA,yBAAAiI,EAAAzG,KAAA,CACA,IAAAqP,EAAAH,EAAAtN,MAAAwN,cAAAE,iBAAA,uCACAC,EAAAF,EAAAxE,OAAArE,KAAAhI,OAAAiI,EAAAjI,OACA0Q,EAAAnL,oBAAA,KAAAwL,EAAA,GAAAC,YACAN,EAAAnL,qBACAmL,EAAAnR,WAAA8E,SAAA,SAAA4M,EAAA1M,GACA,WAAA0M,EAAA1K,aACA0K,EAAAnP,YAAA,MAGA4O,EAAAtN,MAAAwN,cAAA1I,eAAA,0BACAwI,EAAAtN,MAAAwN,cAAA1I,eAAA,yBACAwI,EAAAtN,MAAAwN,cAAA1I,eAAA,kCAEAwI,EAAAnR,WAAA8E,SAAA,SAAA4M,EAAA1M,GACA,WAAA0M,EAAA1K,aACA0K,EAAAnP,YAAA,MAGA4O,EAAAtN,MAAAwN,cAAA1I,eAAA,0BACAwI,EAAAtN,MAAAwN,cAAA1I,eAAA,wBACAwI,EAAAtN,MAAAwN,cAAA1I,eAAA,iCAGA,gBAAAD,EAAAzG,KAAA,CACA,IAAAd,EAAA,KAAAuH,EAAAjI,MAAA,kBACAoO,EAAA,iCAAA1N,mBACAsC,OAAAmF,WAAAiG,GAAAnL,MAAA,SAAAC,GACA,GAAAA,EAAAtD,KAAA,CACA,IAAAqO,EAAA/K,EAAAtD,KACA,SAAAqO,EAAA,CACA,IAAAiD,EAAA,KAAAjJ,EAAAjI,MAAA,8BACA0Q,EAAAtN,MAAAwN,cAAA1I,eAAA,oCACAwI,EAAAtN,MAAAwN,cAAA1I,eAAA,yCAAAhF,EAAAtD,KAAAwI,MACAsI,EAAAtN,MAAAwN,cAAA1I,eAAA,gCAAAwI,EAAAzR,GAAA,KAAAgJ,EAAAjI,MAAA,kBACA0Q,EAAAtN,MAAAwN,cAAA1I,eAAA,sCAAAgJ,GACA,SAAAxQ,GACAgQ,EAAAtN,MAAAwN,cAAA1I,eAAA,iDAEA,WAAAxH,GACAgQ,EAAAtN,MAAAwN,cAAA1I,eAAA,iDAGAwI,EAAAtN,MAAAwN,cAAA9I,0BAIA,yBAAAG,EAAAzG,MACAkP,EAAAS,iBAAA,KAAAV,EAAAzQ,OACA0Q,EAAAxE,iBACA,cAAAjE,EAAAzG,KACAkP,EAAAnR,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,YAAAD,EAAAhD,OACAgD,EAAAxE,MAAA,GACAwE,EAAA7C,OAAAyP,QAAApJ,OAKA,0BAAAC,EAAAzG,MACAkP,EAAAnR,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,wBAAAD,EAAAhD,OACAgD,EAAA7C,OAAAyP,QAAApJ,SAOAmJ,iBAAA,eAAArD,EAAAxC,GACA,IAAA5I,EAAA,KACA2O,EAAA,EACA,MAAAvD,EACAuD,EAAA/F,GAEA+F,EAAAvD,EAAAzI,OAAArF,MAAAmO,WACAzL,EAAA2O,YAEA3O,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA,GACA,IAAAmM,EAAA,uEAAAsD,QACArO,OAAAgL,cAAAD,GAAA9K,MAAA,SAAAC,GACA,GAAAA,EAAAtD,KAAA,CACA,IAAAqO,EAAA/K,EAAAtD,KACA,MAAAqO,SACAqD,GAAApO,EAAAtD,KAAA2D,OAAA6E,MACAlF,EAAAtD,KAAA2D,OAAA6E,KAAA/D,QAAA,CAAAoD,EAAAC,KACAhF,EAAA8C,UAAA,GAAAnE,KAAA,GAAAM,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,OAEA,KAAAiG,EAAAuJ,cACAtO,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAAyH,EAAAzH,MACA0C,EAAAmL,8BAAAwD,EAAA5J,EAAAzH,UAGA0C,EAAAU,MAAAwN,cAAA9I,mBAGApF,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,GACA0C,EAAA8C,UAAA,GAAAnE,KAAA,GAAArB,MAAA,UAOA8G,gBAAA,SAAAuB,GACA,IACA,IAAA3F,EAAA,KACA4F,EAAAD,EAAA,GAEAG,EAAA,IAAAC,WACA,IAAAgB,EAAA,GAEAjB,EAAAE,OAAA,SAAAC,GACA,gBAAAZ,GACA,IAAAa,EAAAb,EAAA1C,OAAA9B,OAEAsF,EAAAC,OAAAC,KAAAH,GAEAI,EAAAV,EAAA9G,KACAkB,EAAAsG,WACA,IAAAC,EAAAD,EAAAE,YAAA,KACAC,EAAAH,EAAAI,UAAAH,EAAA,EAAAD,EAAA5E,QACA1B,EAAA2G,SAAA,IAAAF,EACA,IAAAG,EAAA,mBAAAhB,EAAA5H,KAAA,aAAA4H,EAAAiB,KAAA,kBAAAJ,EAAA,KACAK,EAAAlB,EAAAiB,KACA7G,EAAA8G,WAEAC,EAAAC,iBAAAJ,EACAG,EAAAT,WACAS,EAAAE,aAAAd,EACAY,EAAAD,SAAAlB,EAAAiB,KACAE,EAAAG,YAAAtB,EAAA5H,KACA+I,EAAA8H,WAAA,YACA9H,EAAA+H,cAAA,YACA9O,EAAAmI,iBAAAlD,KAAA8B,IAtBA,GA0BAjB,EAAAqB,mBAAAvB,GAGA,MAAAwB,MAGA3K,QACA,KAAA0M,QAAAlE,KAAA,CAAAnG,KAAA,mBAEAoE,gBAAA,SAAAlF,EAAA8D,EAAA8G,GACA,IAAA5I,EAAA,KAGA0L,EAAA,iCAAA1N,mBAEAsC,OAAAmF,WAAAiG,GAAAnL,KAAAC,IAEAsB,EAAA7C,OAAAC,QAAA,GACA4C,EAAAxE,MAAA,GACA,KAAAkD,EAAAuO,SACA,mBAAA/Q,IACAgC,EAAAiJ,QAAAzI,EAAAtD,KAAAwI,OACAlF,EAAAtD,KAAAwI,KAAA/D,QAAAoD,IACAjD,EAAA7C,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,UAKA,WAAAd,IACAgC,EAAAiJ,QAAAzI,EAAAtD,KAAAwI,OACAlF,EAAAtD,KAAAwI,KAAA/D,QAAAoD,IACAjD,EAAA7C,OAAAC,QAAA+F,KAAA,CACA3H,MAAAyH,EAAAzH,MACAwB,KAAAiG,EAAAjG,WAMAkB,EAAAU,MAAAwN,cAAA9I,oBAGAgE,QAAA,SAAAR,GACA,IAAAoF,EAAA,KACAgB,EAAA,GACAtD,EAAA,YAAA9C,iDACAtI,OAAA2O,eAAAvD,GAAAnL,MAAA,SAAAC,GACA,SAAAA,GAAA,MAAAA,EAAAtD,KAAA,CACA,IAAAgS,EAAA1O,EAAAtD,UACAiS,EAAA,IAAA3O,EAAAtD,KAAAkS,QAAA5O,EAAAtD,KAAAkS,QAAA,GAAAC,QAAA5D,WAAA,IAEA,GAAAjL,EAAAtD,KAAAoS,WAAA5N,OAAA,EACA,IAAA6N,EAAA,CACAC,eAAAhP,EAAAtD,KAAAoS,WAAA,GAAAG,gBACAC,eAAAlP,EAAAtD,KAAAoS,WAAA,GAAAK,iBAIA,GAAAnP,EAAAtD,KAAA0S,WAAAlO,OAAA,GACA,IAAAmO,EAAArP,EAAAtD,KAAA0S,WACAC,EAAAlO,SAAA,SAAAmO,GACA,6BAAAA,EAAAC,kBACA/B,EAAAlF,gBAAAgH,EAAAE,sBAMAxP,EAAAtD,KAAA+S,YAAAvO,OAAA,IACAsN,EAAAxO,EAAAtD,KAAA+S,aAGA,IAEAC,EAAAC,EAFAC,EAAA,GACAA,EAAApC,EAAAtN,MAAAwN,cAAAmC,qCAAAnB,GAEAoB,EAAAC,KAAAV,EAAAS,EAAAE,OAAA,SAAAC,EAAA1L,GACA,iCAAAA,EAAAgL,kBACAG,EAAAnL,EAAAiL,mBAEA,gCAAAjL,EAAAgL,kBACAI,EAAApL,EAAAiL,qBAEA,OACAI,EAAAzO,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KAIA,GAHA,WAAAD,EAAAhD,OACAgD,EAAAxE,MAAA,GAEA,aAAAwE,EAAAhD,KACAgD,EAAA7C,OAAAC,QAAAwC,OAAA,IACAI,EAAAxE,MAAA,WAGA,iBAAAwE,EAAAhD,MAAA,KAAAkP,EAAA9E,OAAA9H,OAAAwH,GACA9G,EAAAxE,MAAA,SAEA,yBAAAwE,EAAAhD,KAEAgD,EAAA9C,gBAAAd,SADA,OAAAgS,EAKApO,EAAA7C,OAAAE,aAAA,EACA2C,EAAA7C,OAAAoF,iBAAA2J,EAAA0C,uBAEA,kBAAA5O,EAAAhD,KACAgD,EAAA1C,YAAA,OAEA,eAAA0C,EAAAhD,KACAgD,EAAAlD,OAAA,mBACAkD,EAAA6O,KAAA,MACA7O,EAAAxE,MAAA6R,OAEA,iBAAArN,EAAAhD,KAEAgD,EAAA9C,gBAAAd,SADA,OAAAiS,OAMA,uBAAArO,EAAAhD,MAAA,KAAAgD,EAAAxE,MACA0Q,EAAAnL,qBAAA,EAEAmL,EAAA1B,kBAAA0C,QAEA,4BAAAlN,EAAAhD,KACAkP,EAAAtN,MAAAwN,cAAA1I,eAAA,gCAAA1D,EAAAxE,OACA0Q,EAAAtN,MAAAwN,cAAA9I,iBACAtD,EAAA7C,OAAAE,aAAA,EACA2C,EAAA7C,OAAAoF,iBAAA2J,EAAA4C,qBAEA,qBAAAhP,EAAAiC,WACA,cAAA/B,EAAAhD,MAAA,YAAAgD,EAAAhD,OACAgD,EAAA7C,OAAA4R,OAAA,oBACA/O,EAAA7C,OAAAyP,QAAA,SAIA,iBAAA5M,EAAAhD,KAAA,CACAgD,EAAAgC,WAAA,EACA,IAAAgN,EAAA9C,EAAA+C,6BAAA/C,EAAAlF,iBACA,MAAAgI,IACAhP,EAAA7C,OACA,CACA+E,QAAA,EACAgN,OAAAF,EACAG,kBAAA,GACAC,sBAAAlD,EAAAkD,sBAEA/R,aAAA,EACAkF,iBAAA,GACAC,UAAA,GAGA,MAAAiL,GACAzN,EAAA7C,OAAAgS,kBAAAhM,KAAAsK,IAKAzN,EAAA7C,OAAA0E,SAAAqK,EAAAF,2BAGAsC,EAAAnL,KACA,CACAvG,WAAA,SACAmF,WAAA,aACAzE,YAAA,EACAT,KAAA,EACAC,OAAA,YACAE,KAAA,aACAxB,MAAA,GACA8B,YAAA,MAGAgR,EAAAnL,KAAA,CACAvG,WAAA,SACAmF,WAAA,UACAzE,YAAA,EACAT,KAAA,EACAC,OAAA,YACAE,KAAA,eACAxB,MAAA,GACA8B,YAAA,EACA0E,WAAA,MAGAkK,EAAAnR,WAAAuT,OAIAM,kBAAA,WACA,IAAA1Q,EAAA,KACAA,EAAAE,kBAAA,GAEA0Q,gBAAA,WAEA,IAAA5Q,EAAA,KACAA,EAAAmD,gBAAA,GAEA+N,sBAAA,SAAAnM,GACA,MAAAoM,EAAA,KAAAC,uBACA,GAAAD,EAAA,CACA,MAAAnM,EAAAmM,EAAAF,kBAAAI,QAAAtM,GACAC,GAAA,GACAmM,EAAAF,kBAAAK,OAAAtM,EAAA,KAIAoM,uBACA,QAAArM,KAAA,KAAAlI,WACA,GAAAkI,EAAApG,KACA,QAAA4S,KAAAxM,EAAApG,KACA,GAAA4S,EAAA1S,OAAA0S,EAAA1S,MAAA2S,cAAAC,SAAA,cACA,OAAAF,EAAAtS,OAKA,aAEA4J,SAAA,SAAApI,GACA,IAAAuN,EAAA,KACAA,EAAAtN,MAAAgR,UAAA9Q,WAAAL,KAAAM,IACA,GAAAA,EAAA,CACA,SAAAJ,EAAAnD,QACA0Q,EAAAnR,WAAA8E,QAAA,CAAAC,EAAAC,KACAD,EAAAjD,KAAAgD,QAAA,CAAAG,EAAAC,KACA,cAAAH,EAAAiC,YACA,cAAA/B,EAAAhD,OACAgD,EAAAxE,MAAA,aAKA0Q,EAAA3F,WAAA,SAEA2F,EAAA5R,WAAA,EACA,IAAAuV,EAAA3D,EAAAtN,MAAAwN,cAAA0D,sCAAA5D,EAAAnR,YACAgV,EAAA7D,EAAAtN,MAAAwN,cAAA0D,sCAAA5D,EAAAlL,WACA6O,EAAAhQ,QAAA2D,IAMA,GALA,yBAAAA,EAAAwM,aACA9D,EAAA/E,QAAA3D,EAAAyM,eACAzM,EAAAyM,YAAAzM,EAAAyM,YAAAzU,QAGA,YAAAgI,EAAAwM,YACAxM,EAAAyM,YAAArQ,OAAA,GACA,IAAAsQ,EAAA,GACA1M,EAAAyM,YAAApQ,QAAAmO,IACAkC,GAAAlC,EAAAxS,MAAA,OAEA0U,IAAAC,MAAA,MACA3M,EAAAyM,YAAAC,EAGA,UAAA1M,EAAAwM,aACA9D,EAAA/E,QAAA3D,EAAAyM,eACAzM,EAAAyM,YAAAzM,EAAAyM,YAAAzU,QAGA,0BAAAgI,EAAAwM,aACA,IAAAxM,EAAAyM,YACAzM,EAAAyM,YAAA,KAEAzM,EAAAyM,YAAAzM,EAAAyM,aAGA,wBAAAzM,EAAAwM,aACA,IAAAxM,EAAAyM,YACAzM,EAAAyM,YAAA,KAEAzM,EAAAyM,YAAAzM,EAAAyM,eAIAF,EAAAlQ,QAAA2D,IACAqM,EAAA1M,KAAAK,KAGA,IAAA8G,EAAA,CACAlP,KAAAyU,EACAO,WAAA,YACAC,cAAA,YACA5C,eAAAvB,EAAA7F,iBAAAzG,OAAA,EAAAsM,EAAA7F,iBAAA,MAEA7H,OAAA8R,gBAAA/Q,KAAAC,UAAA8K,IAAA7L,MAAA,SAAAC,GAEAwN,EAAA5R,WAAA,EACA,MAAAoE,GAAA,MAAAA,EAAAtD,MAAA,WAAAsD,EAAAtD,KAAA,GAAA8D,QACAgN,EAAA3L,aAAAhB,KAAAgR,MAAA7R,EAAAtD,KAAA,GAAAoV,MAAAC,YAAAC,cACAxE,EAAAvM,UAAAuM,EAAAzR,GAAA,gBAAAyR,EAAAzR,GAAA,yBAAAyR,EAAAzR,GAAA,UACAyR,EAAA/L,kBAAA,EACA,SAAA+L,EAAA3F,WACA2F,EAAA7L,iBAAA6L,EAAAzR,GAAA,2BAGAyR,EAAA7L,iBAAA6L,EAAAzR,GAAA,sBAGAyR,EAAAxF,eAAA,IAEAwF,EAAAvM,UAAAuM,EAAAzR,GAAA,oBAAAyR,EAAAzR,GAAA,wBAAAyR,EAAAzR,GAAA,UACAyR,EAAA/L,kBAAA,UAMAO,oBAAA,SAAA6C,EAAAC,GACAA,EAAA/H,UAAAD,MAAA+H,KCx5B4W,ICOxW,EAAY,eACd,EACAxJ,EACAgC,GACA,EACA,KACA,KACA,MAIa,e","file":"js/chunk-13c0b9b7.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header\"},[_c('h5',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('ManageCategory')))]),_c('button',{staticClass:\"close\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.Close}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide text-white\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"#collapseReply\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_c('em',{staticClass:\"fa fa-files-o pr-2\"}),_vm._v(_vm._s(_vm.$t('GuideForUser')))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReply\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarmergeuserguide\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('UgAddManageCategory'))}})])])])]),_c('div',{staticClass:\"modal-body\"},[_c('Form',{ref:\"AddManageCategoryModal\"},[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-Description\",fn:function({ data }){return [_c('ckeditor',{attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback d-block\",attrs:{\"name\":\"Description\"}},[_vm._v(_vm._s(data.error))])]}}])})],1)],1)])])])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <section>\r\n        <div class=\"my-popups\">\r\n            <loader :is-visible=\"isLoading\"></loader>\r\n            <div class=\"modal d-block\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n                    <div class=\"modal-content\">\r\n                        <div class=\"modal-header\">\r\n                            <h5 class=\"modal-title\">{{ $t('ManageCategory') }}</h5>\r\n                            <button v-on:click=\"Close\" href=\"javascript:;\" class=\"close\">\r\n                                <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                            </button>\r\n\r\n                            <span class=\"user-guide\">\r\n                                <a class=\"ancuserguide text-white\" data-toggle=\"collapse\" href=\"#collapseReply\" role=\"button\"\r\n                                    aria-expanded=\"false\" aria-controls=\"collapseExample\"><em\r\n                                    class=\"fa fa-files-o pr-2\"></em>{{ $t('GuideForUser') }}</a>\r\n                                <div id=\"collapseReply\" class=\"divancuserguide collapse overflow-auto\">\r\n                                    <div id=\"scrollbarmergeuserguide\" class=\"custom-scrollbar-js\">\r\n                                        <div class=\"con\" v-html=\"$t('UgAddManageCategory')\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </span>                            \r\n                        </div>\r\n                        <div class=\"modal-body\">                            \r\n                            <Form ref=\"AddManageCategoryModal\">\r\n                                <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\">\r\n                                    <template v-slot:tgslot-Description=\"{ data }\">\r\n                                        <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\">\r\n                                        </ckeditor>\r\n                                        <span name=\"Description\" class=\"invalid-feedback d-block\">{{ data.error }}</span>\r\n                                    </template>\r\n                                    <!-- <template v-slot:tgslot-IsForServiceRequest=\"{ data }\">                                        \r\n                                        <div class=\"form-group mb-0\">\r\n                                            <label class=\"switch\">\r\n                                                <input class=\"form-check-input custom-control-input dynamic\" type=\"checkbox\"\r\n                                                    v-model=\"data.fieldInfo.value\" v-bind:name=\"'IsLogin'\"\r\n                                                    v-on:change=\"checkForAutoCreateEnable(data.fieldInfo.value)\"\r\n                                                    v-disabled=\"disabled\">\r\n                                                <span class=\"slider round\" style=\"cursor:default;\">\r\n                                                    <span class=\"slider-yes\">{{ $t('Yes') }}</span>\r\n                                                    <span class=\"slider-no\">{{ $t('No') }}</span>\r\n                                                </span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </template> -->\r\n\r\n                                </dynamic-form>\r\n                            </Form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\n//import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nexport default {\r\n    props: {\r\n        modulename: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        submodulecode: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        callbackfunction: {\r\n            type: Function\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            editor: this.CLASSIC_EDITOR,\r\n            isLoading: false,\r\n            isSaveAndClose: '',\r\n            CompanyType:'normal',\r\n            AutoServiceDisabled: true,\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Category'),\r\n                            name: \"Category\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Status'),\r\n                            name: \"Status\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: '1001', name: 'Active' }, { value: '1003', name: 'Inactive' }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"ToggleField\",\r\n                            label: this.$t('IsForServiceRequest'),\r\n                            name: \"IsForServiceRequest\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: \"\"                            \r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('Description'),\r\n                            name: \"Description\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n\r\n                            },\r\n                            settings: {\r\n                                isInSlot: true\r\n                            },\r\n                            visibility: true,\r\n                            validationRules: { \"required\": true, max: 200 },\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save And Close\",\r\n                    value: \"SaveAndClose\",\r\n                    onClick: this.SaveCategoryForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success save\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onClick: this.SaveCategoryForm\r\n\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    async created() {\r\n        var vm = this;\r\n        this.IsExtraMapFeature();\r\n    },\r\n    methods: {\r\n        checkForAutoCreateEnable: function (isChecked) {\r\n            debugger\r\n\r\n            var vm = this;\r\n            if (isChecked == true) {\r\n                vm.AutoServiceDisabled = false;\r\n            } else {\r\n                vm.AutoServiceDisabled = true;\r\n            }\r\n        },\r\n        Close: function () {\r\n            var vm = this;\r\n            vm.$parent.isManageCategory = false;\r\n        },\r\n        ClearFieldValue: function () {\r\n            var vm = this;\r\n            vm._data.FormSchema[0].Data[0].value = \"\";\r\n            vm._data.FormSchema[0].Data[1].value = \"\";\r\n            vm._data.FormSchema[1].Data[0].value = \"\";\r\n            vm._data.FormSchema[2].Data[0].value = \"\";\r\n        },\r\n        IsExtraMapFeature: function () {\r\n            var vueObj = this;\r\n            DataServices.IsExtraMapFeature().then(\r\n                function (response) {\r\n                    vueObj.CompanyType = \"\";\r\n                    if (response.data != null && response.data != \"\") {\r\n                       vueObj.CompanyType = response.data;\r\n                       if(vueObj.CompanyType != 'normal'){\r\n                        vueObj.FormSchema[1].Data[0].visibility= true;\r\n                       }else{\r\n                        vueObj.FormSchema[1].Data[0].visibility= false;\r\n                       }\r\n                    }\r\n                });\r\n        },\r\n        SaveCategoryForm: function (btnType) {\r\n            var vm = this;\r\n            if (btnType.value == \"SaveAndClose\") {\r\n                vm.isSaveAndClose = \"SaveAndClose\";\r\n            }            \r\n            vm.$refs.AddManageCategoryModal.validate().then(result => {\r\n                if (result) {\r\n                    var jsonobj = {\r\n                        CategoryName: vm._data.FormSchema[0].Data[0].value,\r\n                        Status: vm._data.FormSchema[0].Data[1].value,\r\n                        IsForServiceRequest: vm._data.FormSchema[1].Data[0].value,\r\n                        Description: vm._data.FormSchema[2].Data[0].value,\r\n                        CategoryType: 'TICKET_CATEGORY'\r\n                    };\r\n                    var params = JSON.stringify(jsonobj);\r\n                    DataServices.SaveCategoryData(params).then((response) => {\r\n                        debugger;\r\n                        if (response.data.result.MSG == 'Success') {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Category\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            if (vm.isSaveAndClose == \"SaveAndClose\") {\r\n                                vm.Close();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n\r\n                            }\r\n                            else {\r\n                                vm.ClearFieldValue();\r\n                                if (vm.$parent.FormSchema.length > 0) {\r\n                                    vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                        group.Data.forEach((field, fi) => {\r\n                                            if (field.name == \"ticket_category_id\") {\r\n                                                vm.callbackfunction('TICKET_CATEGORY', field, null);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"AddedError\", [vm.$t(\"Category\")]), \"failure\", true, vm.$t(\"Alert\"));\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddManageCategoryModal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddManageCategoryModal.vue?vue&type=template&id=06918d2e&\"\nimport script from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\nexport * from \"./AddManageCategoryModal.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"main-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 padding-t_8\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white\"},[_vm._v(\" \"+_vm._s(_vm.$t('AddTicket')))]),_c('span',{staticClass:\"float-right\"},[_c('RouterLink',{staticClass:\"p-action-btn text-white float-right\",attrs:{\"to\":\"/Ticketing/Index\"}},[_c('em',{staticClass:\"fa fa-angle-double-left\"}),_c('br'),_vm._v(\" \"+_vm._s(_vm.$t('BacktoList'))+\" \")])],1)])])]),(_vm.isSuccessMessage)?_c('div',{staticClass:\"border p-3\"},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 ticket-thankyou text-center\"},[_vm._m(0),_c('h1',{staticClass:\"mt-4 mb-4\"},[_vm._v(_vm._s(_vm.$t('ThankYou')))]),_c('div',{staticClass:\"pb-4 ticket-number\"},[_c('P',[_vm._v(_vm._s(_vm.saveTicketStatus))]),_c('div',{staticStyle:{\"font-size\":\"20px\",\"position\":\"relative\",\"background\":\"#fff3cd\",\"padding\":\"35px 30px\",\"margin\":\"20px\",\"border\":\"4px dotted #856404\",\"display\":\"inline-block\",\"color\":\"#856404\"}},[_vm._v(\" \"+_vm._s(_vm.TicketNumber))])],1)])]):_vm._e(),_c('Form',{ref:\"AddTicket\"},[(!_vm.isSuccessMessage)?_c('dynamic-form',{ref:\"AddTicketForm\",attrs:{\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},scopedSlots:_vm._u([{key:\"tgslot-comment\",fn:function({ data }){return [_c('ckeditor',{class:{ 'is-invalid': data.error != '' },attrs:{\"editor\":_vm.editor},on:{\"ready\":_vm.onReady,\"input\":function($event){return _vm.updateCkeditorModel($event, data)}},model:{value:(data.fieldInfo.value),callback:function ($$v) {_vm.$set(data.fieldInfo, \"value\", $$v)},expression:\"data.fieldInfo.value\"}}),_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(_vm._s(data.error))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(data.fieldInfo.value),expression:\"data.fieldInfo.value\"}],attrs:{\"type\":\"hidden\"},domProps:{\"value\":(data.fieldInfo.value)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(data.fieldInfo, \"value\", $event.target.value)}}})]}},(_vm.isForServiceRequest)?{key:\"tgslot-addresFields\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"AddTicketForm1\",attrs:{\"schema\":_vm.StaticObj}})],1),_c('div',{staticClass:\"col-md-6\"},[(_vm.isShowMap)?_c('ManageMap',{staticClass:\"row\",attrs:{\"mapType\":\"MapBox\",\"mapContainer\":\"AddTicket\",\"latLng\":_vm.latLng,\"config\":_vm.config,\"mapHeight\":\"355px\"},on:{\"GetAddress\":_vm.GetAddress}}):_vm._e()],1)])]}}:null],null,true)}):_vm._e()],1),(_vm.isManageCategory)?_c('ManageCategory',{attrs:{\"modulename\":\"Ticketing\",\"submodulecode\":\"Ticketing\",\"callbackfunction\":_vm.GetDropDownData}}):_vm._e(),(_vm.isManageClient)?_c('ManageClient',{attrs:{\"callbackfunction\":_vm.GetDropDownData}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"checksign text-success\"},[_c('i',{staticClass:\"fa fa-check\"})])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"my-popups\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"modal d-block\"},[_c('div',{staticClass:\"modal-dialog modal-dialog-centered\"},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header theme-primary partition-full\"},[_c('h4',{staticClass:\"modal-title\"},[_vm._v(_vm._s(_vm.$t('Add Client')))]),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.Close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]),_c('div',{staticClass:\"modal-body\"},[_c('Form',{ref:\"ValidateClient\"},[_c('dynamic-form',{ref:\"AddClient\",attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit}})],1)],1)])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"my-popups\">\r\n        <loader :is-visible=\"isLoading\"></loader>\r\n        <div class=\"modal d-block\">\r\n            <div class=\"modal-dialog modal-dialog-centered\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header theme-primary partition-full\">\r\n                        <h4 class=\"modal-title\">{{ $t('Add Client') }}</h4>\r\n                        <button type=\"button\" class=\"close\" v-on:click=\"Close()\">\r\n                            <em class=\"fa fa-times\" aria-hidden=\"true\"></em>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div class=\"modal-body\">\r\n                        <Form ref=\"ValidateClient\">\r\n                            <dynamic-form lang=\"en\" ref=\"AddClient\" :buttons=\"buttons\" :schema=\"FormSchema\"\r\n                                v-on:OnSubmit=\"onSubmit\"></dynamic-form>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport services from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        callbackfunction: {\r\n            type: Function\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            TimeZoneList: [],\r\n            ParentAccountList: [],\r\n            CientOwnerList: [],\r\n            fileData: [],\r\n            UserType: 0,\r\n            RoleList: [],\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"four\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('First Name'),\r\n                            name: \"First Name\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Last Name'),\r\n                            name: \"Last Name\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Email '),\r\n                            name: \"Email\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Gender'),\r\n                            name: \"Gender\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{ value: \"M\", name: \"Male\" }, { value: \"F\", name: \"Female\" }],\r\n                                showAddIcon: false,\r\n\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('Account'),\r\n                            name: \"Account\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [{\r\n                                    name: 'Existing', value: 1\r\n                                }, {\r\n                                    name: 'Create New', value: 2\r\n                                }],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeRadio\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Parent Account'),\r\n                            name: \"Parent Account\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n\r\n                            },\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Account Name'),\r\n                            name: \"Account Name\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            validationRules: { \"required\": false, max: 100 },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Client Owner'),\r\n                            name: \"Client Owner\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    group_name: \"Advanced Setting\",\r\n                    layoutType: \"triple\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('TimeZone'),\r\n                            name: \"TimeZone\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: 'Date Format',\r\n                            name: \"Date\",\r\n                            value: \"\",\r\n                            config: {\r\n                                options: [{ name: \"M/D/YYYY\", value: \"M/D/YYYY\" }, { name: \"DD/MM/YYYY\", value: \"DD/MM/YYYY\" }]\r\n                                // options: [{ name: \"M/d/yyyy\", value: \"M/D/YYYY\" }, { name: \"dd/MM/yyyy\", value: \"DD/MM/YYYY\" }]\r\n                            },\r\n                            placeholder: \"Select\",\r\n                            validationRules: { \"required\": false, },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Role'),\r\n                            name: \"Role\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"FileField\",\r\n                            showLabel: false,\r\n                            name: \"Attachment\",\r\n                            placeholder: \"\",\r\n                            validationRules: \"\",\r\n                            FieldIndex: 0,\r\n                            config: {\r\n                                maxSize: 5,\r\n                                accept: [\r\n                                    {\r\n                                        fileType: 'png',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    },\r\n                                    {\r\n                                        fileType: 'jpg',\r\n                                        iconClass: 'fa-file-image-o'\r\n                                    }\r\n                                ],\r\n                                onChange: this.GetBase64String,\r\n                                showAddIcon: false,\r\n                                onAddButtonClick: '',\r\n                                multiple: false\r\n                            },\r\n                        }\r\n                    ]\r\n                },\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Save\",\r\n                    onClick: this.SaveData\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i>Close\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        await this.GetTimeZoneList();\r\n        await this.GetParentAccountList();\r\n        await this.GetClientOwnerList();\r\n        await this.GetRoleList();\r\n        vm.UserType = vm.GetUserInfo.UserType;\r\n    },\r\n    methods: {\r\n        Close: function () {\r\n            var vm = this;\r\n            vm.$parent.isManageClient = false;\r\n        },\r\n        GetTimeZoneList: async function () {\r\n            var vm = this;\r\n            await services.GetTimeZoneList().then(async (response) => {\r\n                if (response.data != null && response.data != \"\") {\r\n                    if (response.data.length > 0) {\r\n                        vm.TimeZoneList = response.data;\r\n                        vm.TimeZoneList.forEach((item, index) => {\r\n                            (vm.FormSchema)[1].Data[0].config.options.push({\r\n                                value: item.code,\r\n                                name: item.value\r\n                            })\r\n                        });\r\n                        vm.$refs.AddClient.UpdateKeyValue();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        onChangeRadio: async function (e, x, y) {\r\n            var vm = this;\r\n            //debugger;\r\n            if (x.value == 1) {\r\n                vm.$refs.AddClient.updateProperty(\"Parent Account\", \"visibility\", true);\r\n                vm.$refs.AddClient.updateProperty(\"Account Name\", \"visibility\", false);\r\n            }\r\n            else {\r\n                vm.$refs.AddClient.updateProperty(\"Account Name\", \"visibility\", true);\r\n                vm.$refs.AddClient.updateProperty(\"Parent Account\", \"visibility\", false);\r\n                vm.$refs.AddClient.UpdateKeyValue();\r\n            }\r\n\r\n        },\r\n        GetParentAccountList: async function () {\r\n            var vm = this;\r\n            var params = `moduleName=Ticketing&type=TALYGEN_ACCOUNT`\r\n            await services.GetDDLData(params).then(async (response) => {\r\n                if (response.data != null && response.data != \"\") {\r\n                    if (response.data.DATA.length > 0) {\r\n                        vm.ParentAccountList = response.data.DATA;\r\n                        vm.ParentAccountList.forEach((item, index) => {\r\n                            (vm.FormSchema)[0].Data[5].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        });\r\n                        vm.$refs.AddClient.UpdateKeyValue();\r\n                    }\r\n                }\r\n\r\n            });\r\n        },\r\n        GetBase64String: function (evt) {\r\n\r\n            try {\r\n\r\n                var vm = this;\r\n                //alert(vm.apiurl);\r\n                vm.fileData = [];\r\n\r\n                var f = evt.target.files[0]; // FileList object\r\n                var reader = new FileReader();\r\n                // Closure to capture the file information.\r\n                reader.onload = (function (theFile) {\r\n\r\n                    return function (e) {\r\n                        var binaryData = e.target.result;\r\n                        //Converting Binary Data to base 64\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        //showing file converted to base64\r\n\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n\r\n                        // var ggg = vm.configData;\r\n                        var fileObj = {\r\n                            attachement_mime: attachemnetMime,\r\n                            fileName: fileName,\r\n                            base64String: base64StringEncoded,\r\n                            fileSize: f.size,\r\n                            contentType: f.type\r\n                        };\r\n\r\n                        vm.fileData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                // Read in the image file as a data URL.\r\n                reader.readAsBinaryString(f);\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        GetClientOwnerList: async function () {\r\n            var vm = this;\r\n            var params = `moduleName=Client&type=`\r\n            await services.GetClientOwner(params).then(async (response) => {\r\n                if (response.data != null && response.data != \"\") {\r\n                    if (response.data.length > 0) {\r\n                        vm.ParentAccountList = response.data;\r\n                        vm.ParentAccountList.forEach((item, index) => {\r\n                            (vm.FormSchema)[0].Data[7].config.options.push({\r\n                                name: item.USERNAME,\r\n                                value: item.USERID\r\n                            })\r\n                        });\r\n                        vm.$refs.AddClient.UpdateKeyValue();\r\n                    }\r\n                }\r\n\r\n            });\r\n        },\r\n        GetRoleList: async function () {\r\n            //debugger\r\n            var vm = this;\r\n            var vm = this;\r\n            var userTypeId = 0;\r\n            if (vm.UserType == \"CA\") {\r\n                userTypeId = 1;\r\n            }\r\n            else if (vm.UserType == \"PM\") {\r\n                userTypeId = 2;\r\n            }\r\n            else if (vm.UserType == \"NU\") {\r\n                userTypeId = 3;\r\n            }\r\n            else if (vm.UserType == \"CL\") {\r\n                userTypeId = 4;\r\n            }\r\n            var params = `moduleName=Ticketing&type=TALYGEN_ROLE&refId=${userTypeId}`\r\n            await services.GetDDLData(params).then(async (response) => {\r\n                if (response.data != null && response.data != \"\") {\r\n                    if (response.data.DATA.length > 0) {\r\n                        vm.RoleListList = response.data.DATA;\r\n                        vm.RoleList.forEach((item, index) => {\r\n                            (vm.FormSchema)[1].Data[2].config.options.push({\r\n                                name: item.value,\r\n                                value: item.name\r\n                            })\r\n                        });\r\n                        vm.$refs.AddClient.UpdateKeyValue();\r\n                    }\r\n                }\r\n\r\n            });\r\n        },\r\n        SaveData: function () {\r\n            var vm = this;\r\n            vm.$refs.ValidateClient.validate().then(result => {\r\n                if (result) {\r\n                    let addClient = {\r\n                        \"FirstName\": vm.FormSchema[0].Data[0].value,\r\n                        \"LastName\": vm.FormSchema[0].Data[1].value,\r\n                        \"Email\": vm.FormSchema[0].Data[2].value,\r\n                        \"Gender\": vm.FormSchema[0].Data[3].value,\r\n                        \"Account\": vm.FormSchema[0].Data[4].value,\r\n                        \"ParentAccounts\": vm.FormSchema[0].Data[5].value,\r\n                        \"AccountName\": vm.FormSchema[0].Data[6].value,\r\n                        \"ClientOwner\": vm.FormSchema[0].Data[7].value,\r\n                        \"TimeZone\": vm.FormSchema[1].Data[0].value,\r\n                        \"DateFormat\": vm.FormSchema[1].Data[1].value,\r\n                        \"Role\": vm.FormSchema[1].Data[2].value == \"\" ? null : vm.FormSchema[1].Data[2].value,\r\n                        \"DepartmentId\": null,\r\n                        \"DesignationId\": null,\r\n                        \"CompanyName\": null,\r\n                        \"SuperVisorId\": null,\r\n                        \"UserTypeId\": 4,\r\n                        \"HomeBuisnessUnitId\": null,\r\n                        \"PayClass\": null,\r\n                        \"JobType\": null,\r\n                        \"StartDate\": null,\r\n                        \"Minitial\": null,\r\n                        \"FileData\": vm.fileData\r\n                    }\r\n                    //debugger;\r\n                    services.AddClient(addClient).then(function (response) {\r\n                        //debugger;\r\n                        if (response.data[0].Status == 'Success') {\r\n                            vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Client\")]), \"success\", true, vm.$t(\"Alert\"));\r\n                            if (vm.$parent.FormSchema.length > 0) {\r\n                                vm.$parent.FormSchema.forEach((group, gi) => {\r\n                                    group.Data.forEach((field, fi) => {\r\n                                        if (field.name == \"on_behalf_consumer_id\") {\r\n                                            vm.callbackfunction('CLIENTS', field, null);\r\n                                            vm.Close();\r\n                                        }\r\n                                    });\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.ShowAlert(vm.$t(\"UnknownErrorOccur\"), \"failure\", true, vm.$t('Alert'));\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modaladdClient.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modaladdClient.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modaladdClient.vue?vue&type=template&id=501b2929&\"\nimport script from \"./modaladdClient.vue?vue&type=script&lang=js&\"\nexport * from \"./modaladdClient.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <section class=\"main-content\">\r\n        <!-- <loader :is-visible=\"isLoading\"></loader> -->\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12 padding-t_8\">\r\n                <div class=\"theme-primary partition-full\">\r\n                    <span class=\"p-name text-white\"> {{ $t('AddTicket') }}</span>\r\n                    <span class=\"float-right\">\r\n                        <RouterLink to=\"/Ticketing/Index\" class=\"p-action-btn text-white float-right\">\r\n                            <em class=\"fa fa-angle-double-left\"></em>\r\n                            <br />\r\n                            {{ $t('BacktoList') }}\r\n                        </RouterLink>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"border p-3\" v-if=\"isSuccessMessage\">\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12  ticket-thankyou text-center\">\r\n                <span class=\"checksign text-success\"><i class=\"fa fa-check\"></i></span>\r\n                <h1 class=\"mt-4 mb-4\">{{ $t('ThankYou') }}</h1>\r\n\r\n                <div class=\"pb-4 ticket-number\">\r\n                    <P>{{ saveTicketStatus }}</P>\r\n                    <div\r\n                        style=\"font-size: 20px;position: relative;background: #fff3cd;padding: 35px 30px; margin: 20px; border: 4px dotted #856404;display: inline-block;color: #856404;\">\r\n                        {{ TicketNumber }}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Form ref=\"AddTicket\">\r\n            <dynamic-form ref=\"AddTicketForm\" :buttons=\"buttons\" :schema=\"FormSchema\" v-if=\"!isSuccessMessage\">\r\n                <template v-slot:tgslot-comment=\"{ data }\">\r\n\r\n                    <ckeditor :editor=\"editor\" @ready=\"onReady\" v-model=\"data.fieldInfo.value\"\r\n                        @input=\"updateCkeditorModel($event, data)\" :class=\"{ 'is-invalid': data.error != '' }\">\r\n                    </ckeditor>\r\n                    <span class=\"invalid-feedback\">{{ data.error }}</span>\r\n                    <input type=\"hidden\" v-model=\"data.fieldInfo.value\" />\r\n                </template>\r\n                <template v-slot:tgslot-addresFields=\"{ data }\" v-if=\"isForServiceRequest\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <dynamic-form ref=\"AddTicketForm1\" :schema=\"StaticObj\"></dynamic-form>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <ManageMap class=\"row\" mapType=\"MapBox\" mapContainer=\"AddTicket\" :latLng=\"latLng\"\r\n                                :config=\"config\" mapHeight=\"355px\" v-if=\"isShowMap\" @GetAddress=\"GetAddress\">\r\n                            </ManageMap>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </dynamic-form>\r\n        </Form>\r\n        <ManageCategory v-if=\"isManageCategory\" modulename=\"Ticketing\" submodulecode=\"Ticketing\"\r\n            v-bind:callbackfunction=\"GetDropDownData\"></ManageCategory>\r\n        <ManageClient v-if=\"isManageClient\" v-bind:callbackfunction=\"GetDropDownData\"></ManageClient>\r\n    </section>\r\n</template>\r\n<script>\r\nimport DataServices from \"@/services/DataService\";\r\nimport ManageMap from './../../components/Common/MapComponent.vue';\r\nimport ManageCategory from './DetailsComponent/AddManageCategoryModal.vue';\r\nimport ManageClient from '../../components/Modal/modaladdClient.vue'\r\nexport default {\r\n    components: {\r\n        ManageMap,\r\n        ManageCategory,\r\n        ManageClient\r\n    },\r\n    data: function () {\r\n        return {\r\n            config: {\r\n                isShowDrawButton: true,\r\n                isShowSearchBox: true\r\n            },\r\n            FormSchema: [],\r\n            CountryDDl: '',\r\n            isSuccessMessage: false,\r\n            fileMulitpleData: [],\r\n            isShowMap: true,\r\n            latLng: '',\r\n            CountryDDl: '',\r\n            StateDDl: '',\r\n            ticketType: '',\r\n            Latitude: '',\r\n            Longitude: '',\r\n            showTourGuide: true,\r\n            isForServiceRequest: false,\r\n            StaticObj: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('ClientAddress'),\r\n                            name: \"AddrTo\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.onChangeDropdown\r\n\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    layoutType: \"double\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Address'),\r\n                            name: \"Address\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterAddress'),\r\n                            validationRules: { \"required\": true },\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('Country'),\r\n                            name: \"country_id\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: [],\r\n                                onChange: this.GetStateDDL\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('State'),\r\n                            name: \"State\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            config: {\r\n                                options: []\r\n                            },\r\n                            placeholder: this.$t('Select'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('County'),\r\n                            name: \"County\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCounty'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('City'),\r\n                            name: \"City\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterCityName'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('Street'),\r\n                            name: \"Street\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterStreet'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ZipCode'),\r\n                            name: \"Zip\",\r\n                            value: \"\",\r\n                            disabled: true,\r\n                            placeholder: this.$t('PleaseEnterZipCode'),\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('NoteAboutAddress'),\r\n                            name: \"Notes\",\r\n                            value: \"\",\r\n                            disabled: false,\r\n                            placeholder: this.$t('PleaseEnterDescription'),\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    id: \"ancsaveuserticket\",\r\n                    class: \"btn btn-warning save ancsaveuserticket\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Save As Draft\",\r\n                    value: \"DRAFT\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"submit\",\r\n                    id: \"ancsaveuserticket\",\r\n                    class: \"btn btn-success save ancsaveuserticket\",\r\n                    text: \"<i class='fa fa-save pr-2'></i> Submit\",\r\n                    onClick: this.saveForm\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-danger\",\r\n                    text: \"<i class='fa fa-close pr-2'></i> Cancel\",\r\n                    onClick: this.Close\r\n                }\r\n            ],\r\n            isManageCategory: false,\r\n            isManageClient: false,\r\n            AllowedFileType: [],\r\n            editor: this.CLASSIC_EDITOR,\r\n        }\r\n    },\r\n    created: function () {\r\n        var vm = this;\r\n        vm.userid = this.GetUserInfo.ID\r\n        if (!vm.isBlank(vm.$route.params.id) && vm.$route.params.id != \"0\") {\r\n            let ticket_id = decodeURIComponent(vm.$route.params.id);\r\n            let ticket_type = vm.$route.params.ticket_Type;\r\n            vm.getForm(ticket_id);\r\n        }\r\n        else {\r\n            if (vm.$route.params.id == \"0\") {\r\n                vm.getForm(0);\r\n\r\n            }\r\n            else {\r\n                vm.$router.push({ name: \"add\", params: { id: 0 } });\r\n                vm.getForm(0);\r\n            }\r\n        }\r\n        vm.GetCountryDDL();\r\n    },\r\n    methods: {\r\n        GetAddress: function (data) {\r\n            debugger;\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            //debugger;\r\n            var indexValue = data.length - 1;\r\n            let filteredCountry = vueObj.CountryDDl.filter((item) => {\r\n                return item.name === data[indexValue].CompleteAddress.Country.LongName;\r\n            });\r\n            vueObj.StaticObj[1].Data[0].value = data[indexValue].CompleteAddress.FullAddress;\r\n            var filterCountry = filteredCountry == '' ? '' : filteredCountry[0].value;\r\n            vueObj.StaticObj[1].Data[1].value = filterCountry;\r\n            vueObj.GetStateDDL(null, filterCountry);\r\n            setTimeout(function () {\r\n                let filteredState = vueObj.StateDDl.filter((item) => {\r\n                    return item.name === data[indexValue].CompleteAddress.AdministrativeAreaLevel1.LongName;\r\n                });\r\n                var filterState = filteredState == '' ? '' : filteredState[0].value;\r\n                vueObj.StaticObj[1].Data[2].value = filterState;\r\n            }, 1000);\r\n            vueObj.StaticObj[1].Data[3].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel2.LongName;\r\n            vueObj.StaticObj[1].Data[4].value = data[indexValue].CompleteAddress.City.LongName;\r\n            vueObj.StaticObj[1].Data[5].value = data[indexValue].CompleteAddress.AdministrativeAreaLevel3.LongName;\r\n            vueObj.StaticObj[1].Data[6].value = data[indexValue].CompleteAddress.PinCode;\r\n            var dataLat1 = ''; var dataLat2 = ''; var dataLng1 = ''; var dataLng2 = '';\r\n            data[indexValue].LatLng.forEach((item, index) => {\r\n                if (index == 0) {\r\n                    dataLat1 = item.Lat;\r\n                    dataLat2 = item.Lng;\r\n                }\r\n                else {\r\n                    dataLng1 = item.Lat;\r\n                    dataLng2 = item.Lng;\r\n                }\r\n            });\r\n            vueObj.Latitude = dataLng1 + ',' + dataLat2;\r\n            vueObj.Longitude = dataLat1 + ',' + dataLng2;\r\n\r\n            vueObj.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (group.group_name == \"General Information\" || group.group_name == \"GeneralInformation\") {\r\n                        if (field.name == \"location_se\") {\r\n                            field.value = vueObj.Latitude;\r\n                        }\r\n                        if (field.name == \"location_nw\") {\r\n                            field.value = vueObj.Longitude;\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        onChangeDropdown: async function (e) {\r\n            var vm = this;\r\n            var dropName = e.target.name;\r\n            var clientAddressId = '';\r\n            if (dropName == \"AddrTo\") {\r\n                clientAddressId = e.target.value;\r\n            }\r\n            vm.FormSchema.forEach((group, gi) => {\r\n                group.Data.forEach((field, fi) => {\r\n                    if (field.name == \"on_behalf_consumer_id\") {\r\n                        let clientid = field.value.value;\r\n                        if (!vm.isBlank(clientid) && clientAddressId != '') {\r\n                            vm.BindAddressUsingClientAdrress(clientid, clientAddressId);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        },\r\n        GetCountryDDL: async function (event) {\r\n            ////debugger;\r\n            var vm = this;\r\n            vm.StaticObj[1].Data[1].config.options = [];\r\n            vm.CountryDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'COUNTRIES'}&search=&refId=`;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                ////debugger;\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.CountryDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[1].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        GetStateDDL: async function (event, id) {\r\n            var vm = this;\r\n            var CountryId = 0;\r\n            if (event == null) {\r\n                CountryId = id;\r\n            } else {\r\n                CountryId = event.target.value.toString();\r\n            }\r\n            vm.StaticObj[1].Data[2].config.options = [];\r\n            vm.StateDDl = '';\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'STATE'}&search=&refId=` + CountryId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    vm.StateDDl = response.data.result.DATA;\r\n                    if (json != null) {\r\n                        response.data.result.DATA.forEach((item, index) => {\r\n                            vm.StaticObj[1].Data[2].config.options.push({\r\n                                value: item.value,\r\n                                name: item.name\r\n                            })\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        BindAddressUsingClientAdrress: async function (clientid, clientAddressId) {\r\n            ////debugger\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            vueObj.latLng = '';\r\n            var url = `id=${clientid}&moduleName=TICKETING&addressId=${clientAddressId}`;\r\n            await DataServices.GetTicketClientAddress(url).then(response => {\r\n\r\n                if (response.data.result != null && response.data.result.data.length > 0) {\r\n                    vueObj.StaticObj[1].Data[0].value = response.data.result.data[0].USER_ADDRESS_1;\r\n                    vueObj.StaticObj[1].Data[1].value = response.data.result.data[0].COUNTRY_ID;\r\n                    vueObj.StaticObj[1].Data[2].value = response.data.result.data[0].CT[0].ST[0].STATE_ID;\r\n                    vueObj.StaticObj[1].Data[4].value = response.data.result.data[0].USER_CITY;\r\n                    vueObj.StaticObj[1].Data[6].value = response.data.result.data[0].USER_ZIPCODE;\r\n                    vueObj.StaticObj[1].Data[7].value = response.data.result.data[0].USER_ADDRESS_DESC;\r\n                    vueObj.Latitude = response.data.result.data[0].Latitude + ',' + response.data.result.data[0].Longitude;\r\n                    vueObj.Longitude = response.data.result.data[0].Latitude + ',' + response.data.result.data[0].Longitude;\r\n                    vueObj.FormSchema.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (group.group_name == \"General Information\" || group.group_name == \"GeneralInformation\") {\r\n                                if (field.name == \"location_se\") {\r\n                                    field.value = vueObj.Latitude;\r\n                                }\r\n                                if (field.name == \"location_nw\") {\r\n                                    field.value = vueObj.Longitude;\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                    var obj = { location_nw: vueObj.Latitude }\r\n                    vueObj.latLng = obj;\r\n                }\r\n            })\r\n        },\r\n        BindAddressInEdit: async function (data) {\r\n            //debugger\r\n            var vueObj = this;\r\n            vueObj.Latitude = '';\r\n            vueObj.Longitude = '';\r\n            vueObj.latLng = '';\r\n            if (data != null) {\r\n                vueObj.StaticObj[1].Data[0].value = data[0].ADDRFROM;\r\n                vueObj.StaticObj[1].Data[1].value = data[0].COUNTRY_ID;\r\n                vueObj.StaticObj[1].Data[2].value = data[0].STATE;\r\n                vueObj.StaticObj[1].Data[4].value = data[0].CITY;\r\n                vueObj.StaticObj[1].Data[3].value = data[0].COUNTY;\r\n                vueObj.StaticObj[1].Data[6].value = data[0].ZIP;\r\n                vueObj.StaticObj[1].Data[5].value = data[0].DIGSTREET;\r\n                vueObj.StaticObj[1].Data[7].value = data[0].NOTES;\r\n                vueObj.Latitude = data[0].LOCATION_NW;\r\n                vueObj.Longitude = data[0].LOCATION_SE;\r\n                vueObj.FormSchema.forEach((group, gi) => {\r\n                    group.Data.forEach((field, fi) => {\r\n                        if (group.group_name == \"General Information\" || group.group_name == \"GeneralInformation\") {\r\n                            if (field.name == \"location_se\") {\r\n                                field.value = vueObj.Latitude;\r\n                            }\r\n                            if (field.name == \"location_nw\") {\r\n                                field.value = vueObj.Longitude;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                var obj = { location_nw: vueObj.Latitude }\r\n                vueObj.latLng = obj;\r\n            }\r\n\r\n        },\r\n        onReady(editor) {\r\n            editor.ui.getEditableElement().parentElement.insertBefore(\r\n                editor.ui.view.toolbar.element,\r\n                editor.ui.getEditableElement()\r\n            );\r\n            let mediaIcon = document.getElementsByClassName('ck-dropdown')[2]\r\n            mediaIcon.remove();\r\n            var divToRemove = document.querySelector('.ck-file-dialog-button');\r\n            divToRemove.remove();\r\n            let ArrowIcon = document.getElementsByClassName('ck ck-button ck-off')[8]\r\n            ArrowIcon.remove();\r\n        },\r\n        onChangeEventForFields: function (x, y, z) {\r\n            let ths = this;\r\n            if (x == \"FILL_DEPENDENT\") {\r\n                y.config.options = [];\r\n                var url = `id=&moduleName=TICKETING&type=${y.config.fieldCode}&search=&refId=${z}`;\r\n                DataServices.GetDDLData(url).then(function (response) {\r\n                    if (response.data) {\r\n                        var json = response.data;\r\n                        if (json != null) {\r\n                            y.config.options = response.data.DATA;\r\n                            ths.$refs.AddTicketForm.UpdateKeyValue();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                if (y.name == \"attachment\") {\r\n                    ths.GetBase64String(y.value);\r\n                } else if (y.name == \"ticket_category_id\") {\r\n                    let catOptions = ths.$refs.AddTicketForm.getPropertyValue(\"ticket_category_id\", \"config.options\")\r\n                    let getSelectedValue = catOptions.filter((x) => { return x.value == y.value })\r\n                    ths.isForServiceRequest = getSelectedValue[0].first_value == \"1\" ? true : false;\r\n                    if (ths.isForServiceRequest) {\r\n                        ths.FormSchema.forEach(function (g, gi) {\r\n                            if (g.group_name == \"Address\") {\r\n                                g.visibility = true;\r\n                            }\r\n                        })\r\n                        ths.$refs.AddTicketForm.updateProperty(\"ticket_for\", \"value\", \"2\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"on_behalf\", \"value\", \"4\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"is_field_service\", \"value\", \"1\");\r\n                    } else {\r\n                        ths.FormSchema.forEach(function (g, gi) {\r\n                            if (g.group_name == \"Address\") {\r\n                                g.visibility = false;\r\n                            }\r\n                        })\r\n                        ths.$refs.AddTicketForm.updateProperty(\"ticket_for\", \"value\", \"1\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"on_behalf\", \"value\", \"\");\r\n                        ths.$refs.AddTicketForm.updateProperty(\"is_field_service\", \"value\", \"0\");\r\n                    }\r\n                }\r\n                if (y.name == \"on_behalf\") {\r\n                    let type = (y.value == \"3\") ? \"USERS\" : \"CLIENTS\";\r\n                    var url = `id=&moduleName=TICKETING&type=${type}&search=&refId=`;\r\n                    DataServices.GetDDLData(url).then(function (response) {\r\n                        if (response.data) {\r\n                            var json = response.data;\r\n                            if (json != null) {\r\n                                var labelKey = (y.value == \"3\") ? \"Select User\" : \"Select Client\";\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"value\", \"\");\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"config.options\", response.data.DATA);\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"label\", ths.$t(((y.value == \"3\") ? \"User\" : \"Client\")));\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"placeholder\", labelKey);\r\n                                if (type == \"USERS\") {\r\n                                    ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"config.showAddIcon\", false);\r\n                                }\r\n                                if (type == \"CLIENTS\") {\r\n                                    ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"config.showAddIcon\", true);\r\n                                }\r\n                                // ths.$refs.AddTicketForm.schema[0].Data[16].placeholder = labelKey;\r\n                                ths.$refs.AddTicketForm.UpdateKeyValue();\r\n                            }\r\n                        }\r\n                    });\r\n                } else if (y.name == \"on_behalf_consumer_id\") {\r\n                    ths.GetClientaddress(null, z.value);\r\n                    ths.GetCountryDDL();\r\n                } else if (y.name == \"START_DATE\") {\r\n                    ths.FormSchema.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (field.name == \"END_DATE\") {\r\n                                field.value = \"\";\r\n                                field.config.minDate = x;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n                else if (y.name == \"SA_Scheduled_StartTime\") {\r\n                    ths.FormSchema.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (field.name == \"SA_Scheduled_EndTime\") {\r\n                                field.config.minDate = x;\r\n                            }\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        GetClientaddress: async function (event, id) {\r\n            var vm = this;\r\n            var clientId = 0;\r\n            if (event == null) {\r\n                clientId = id;\r\n            } else {\r\n                clientId = event.target.value.toString();\r\n                vm.clientId = clientId;\r\n            }\r\n            vm.StaticObj[0].Data[0].config.options = [];\r\n            var appendingUrl = `id=&&moduleName=TICKETING&type=${'CLIENT_ADDRESS_LIST_WO'}&search=&refId=` + clientId;\r\n            await DataServices.GetDDLDataFSM(appendingUrl).then(function (response) {\r\n                if (response.data) {\r\n                    var json = response.data;\r\n                    if (json != null) {\r\n                        if (response.data.result.DATA != undefined) {\r\n                            response.data.result.DATA.forEach((item, index) => {\r\n                                vm.StaticObj[0].Data[0].config.options.push({\r\n                                    value: item.value,\r\n                                    name: item.name\r\n                                })\r\n                                if (item.first_value == \"1\") {\r\n                                    vm.StaticObj[0].Data[0].value = item.value;\r\n                                    vm.BindAddressUsingClientAdrress(clientId, item.value);\r\n                                }\r\n                            })\r\n                            vm.$refs.AddTicketForm.UpdateKeyValue();\r\n                        }\r\n                        else {\r\n                            vm.StaticObj[1].Data[0].value = '';\r\n                            vm.StaticObj[1].Data[1].value = '';\r\n                            vm.StaticObj[1].Data[2].value = '';\r\n                            vm.StaticObj[1].Data[3].value = '';\r\n                            vm.StaticObj[1].Data[4].value = '';\r\n                            vm.StaticObj[1].Data[5].value = '';\r\n                            vm.StaticObj[1].Data[6].value = '';\r\n                        }                        \r\n                    }                  \r\n                }\r\n            });\r\n            //vm.GetUtilityDDL(event, id);\r\n        },\r\n        GetBase64String: function (evt) {\r\n            try {\r\n                var vm = this;\r\n                var f = evt[0]; // FileList object\r\n                // var f = evt.target.files[0]; // FileList object\r\n                var reader = new FileReader();\r\n                let fileObj = {};\r\n                // Closure to capture the file information.\r\n                reader.onload = (function (theFile) {\r\n                    return function (e) {\r\n                        var binaryData = e.target.result;\r\n                        //Converting Binary Data to base 64\r\n                        var base64StringEncoded = window.btoa(binaryData);\r\n                        //showing file converted to base64\r\n                        var fileName = f.name;\r\n                        vm.fileName = fileName;\r\n                        var n = fileName.lastIndexOf(\".\");\r\n                        var extensionName = fileName.substring(n + 1, fileName.length);\r\n                        vm.fileExt += \".\" + extensionName;\r\n                        var attachemnetMime = '{\"ContentType\":\"' + f.type + '\",\"Size\":\"' + f.size + '\",\"Extension\":\"' + extensionName + '\"}';\r\n                        var fileSize = f.size;\r\n                        vm.fileSize = fileSize;\r\n\r\n                        fileObj.attachement_mime = attachemnetMime,\r\n                            fileObj.fileName = fileName,\r\n                            fileObj.base64String = base64StringEncoded,\r\n                            fileObj.fileSize = f.size,\r\n                            fileObj.contentType = f.type,\r\n                            fileObj.ModuleName = 'TICKETING',\r\n                            fileObj.SubModuleCode = 'TICKETING'\r\n                        vm.fileMulitpleData.push(fileObj);\r\n                    };\r\n                })(f);\r\n                // Read in the image file as a data URL.\r\n                reader.readAsBinaryString(f);\r\n\r\n            }\r\n            catch (ex) {\r\n            }\r\n        },\r\n        Close() {\r\n            this.$router.push({ name: \"TicketingList\" });\r\n        },\r\n        GetDropDownData: function (type, field, id) {\r\n            var vm = this;\r\n            ////debugger;\r\n\r\n            var url = `id=&moduleName=TICKETING&type=${type}&search=&refId=`;\r\n\r\n            DataServices.GetDDLData(url).then(response => {\r\n                debugger;\r\n                field.config.options = [];\r\n                field.value = '';\r\n                if (response.status == 200) {\r\n                    if (type == \"TICKET_CATEGORY\") {\r\n                        if (!vm.isBlank(response.data.DATA)) {\r\n                            response.data.DATA.forEach((item) => {\r\n                                field.config.options.push({\r\n                                    value: item.value,\r\n                                    name: item.name\r\n                                })\r\n                            })\r\n                        }\r\n                    }\r\n                    if (type == \"CLIENTS\") {\r\n                        if (!vm.isBlank(response.data.DATA)) {\r\n                            response.data.DATA.forEach((item) => {\r\n                                field.config.options.push({\r\n                                    value: item.value,\r\n                                    name: item.name\r\n                                })\r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                vm.$refs.AddTicketForm.UpdateKeyValue();\r\n            })\r\n        },\r\n        getForm: function (id) {\r\n            var ths = this;\r\n            var addressResult = '';\r\n            var url = `recordId=${id}&moduleName=Ticketing&subModuleCode=Ticketing`;\r\n            DataServices.GetDynamicForm(url).then(function (response) {\r\n                if (response != null && response.data != null) {\r\n                    var responseData = response.data.data;\r\n                    var CC_user = response.data.CC_User != \"\" ? response.data.CC_User[0].cc_user.toString() : ' ';\r\n\r\n                    if (response.data.Attachment.length > 0) {\r\n                        var attachmentData = {\r\n                            attachmentName: response.data.Attachment[0].attachment_name,\r\n                            attachmentPath: response.data.Attachment[0].attachment_path\r\n                        };\r\n                    }\r\n\r\n                    if (response.data.configData.length > 0) {\r\n                        var configResult = response.data.configData;\r\n                        configResult.forEach(function (row) {\r\n                            if (row.CORE_CONFIG_KEY == \"TicketDisallowedFileTypes\") {\r\n                                ths.AllowedFileType = row.CONFIG_DATA_VALUE;\r\n\r\n                            }\r\n\r\n                        });\r\n                    }\r\n                    if (response.data.addressData.length > 0) {\r\n                        addressResult = response.data.addressData;\r\n\r\n                    }\r\n                    var frmSchma = []\r\n                    frmSchma = ths.$refs.AddTicketForm.ConvertCustomFieldIntoDynamicFormObj(responseData);\r\n                    var TicketCategoryMandatory, TicketProductMandatory;\r\n                    $.each(configResult, $.proxy(function (index1, item) {\r\n                        if (item.CORE_CONFIG_KEY == \"TicketCategoryOptionMandatory\") {\r\n                            TicketCategoryMandatory = item.CONFIG_DATA_VALUE;\r\n                        }\r\n                        if (item.CORE_CONFIG_KEY == \"TicketProductOptionMandatory\") {\r\n                            TicketProductMandatory = item.CONFIG_DATA_VALUE;\r\n                        }\r\n                    }, this))\r\n                    frmSchma.forEach((group, gi) => {\r\n                        group.Data.forEach((field, fi) => {\r\n                            if (field.name == \"is_read\") {\r\n                                field.value = 0;\r\n                            }\r\n                            if (field.name == \"status_id\") {\r\n                                if (field.config.options.length > 0) {\r\n                                    field.value = 1111;\r\n                                }\r\n                            }\r\n                            else if (field.name == \"ticket_for\" && ths.$route.params.id == \"0\") {\r\n                                field.value = \"1\";\r\n                            }\r\n                            else if (field.name == \"ticket_category_id\") {\r\n                                if (TicketCategoryMandatory == \"yes\") {\r\n                                    field.validationRules.required = true;\r\n                                } else {\r\n                                    field.validationRules.required = false;\r\n                                }\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.OpenCategoryModal;\r\n                            }\r\n                            else if (field.name == \"assigned_to\") {\r\n                                field.visibility = false;\r\n                            }\r\n                            else if (field.name == \"cc_users\") {\r\n                                field.astype = \"MultiSelectField\";\r\n                                field.mode = \"tag\";\r\n                                field.value = CC_user;\r\n                            }\r\n                            else if (field.name == \"product_id\") {\r\n                                if (TicketProductMandatory == \"yes\") {\r\n                                    field.validationRules.required = true;\r\n                                } else {\r\n                                    field.validationRules.required = false;\r\n                                }\r\n                            }\r\n                            else if (field.name == \"is_field_service\" && field.value == \"1\") {\r\n                                ths.isForServiceRequest = true;\r\n\r\n                                ths.BindAddressInEdit(addressResult);\r\n                            }\r\n                            else if (field.name == \"on_behalf_consumer_id\") {\r\n                                ths.$refs.AddTicketForm.updateProperty(\"on_behalf_consumer_id\", \"value\", field.value);\r\n                                ths.$refs.AddTicketForm.UpdateKeyValue();\r\n                                field.config.showAddIcon = true;\r\n                                field.config.onAddButtonClick = ths.OpenClientModal;\r\n                            }\r\n                            else if (group.group_name == \"Preferred Time\") {\r\n                                if (field.name == \"START_DATE\" || field.name == \"END_DATE\") {\r\n                                    field.config.format = \"MM/DD/YYYY h:mm A\";\r\n                                    field.config.minDate = \"\";\r\n                                }\r\n                            }\r\n\r\n                            else if (field.name == \"attachment\") {\r\n                                field.showLabel = false;\r\n                                let fileTypeList = ths.AttachmentDisallowedFileType(ths.AllowedFileType);\r\n                                if (fileTypeList != null) {\r\n                                    field.config =\r\n                                    {\r\n                                        maxSize: 5,\r\n                                        reject: fileTypeList,\r\n                                        showSelectedFiles: [],\r\n                                        onDeleteSelectedFiles: ths.onDeleteSelectedFiles,\r\n                                        //onChange: ths.GetBase64String,\r\n                                        showAddIcon: false,\r\n                                        onAddButtonClick: '',\r\n                                        multiple: true\r\n                                    };\r\n\r\n                                    if (attachmentData != null) {\r\n                                        field.config.showSelectedFiles.push(attachmentData);\r\n                                    }\r\n                                }\r\n\r\n                            }\r\n                            field.config.onChange = ths.onChangeEventForFields;\r\n                        })\r\n                    })\r\n                    frmSchma.push(\r\n                        {\r\n                            layoutType: \"single\",\r\n                            group_name: 'ticketType',\r\n                            visibility: false,\r\n                            Data: [{\r\n                                astype: \"SlotField\",\r\n                                name: \"TicketType\",\r\n                                value: \"\",\r\n                                visibility: false,\r\n                            }]\r\n                        });\r\n                    frmSchma.push({\r\n                        layoutType: \"single\",\r\n                        group_name: 'Address',\r\n                        visibility: false,\r\n                        Data: [{\r\n                            astype: \"SlotField\",\r\n                            name: \"addresFields\",\r\n                            value: \"\",\r\n                            visibility: true,\r\n                            showLabel: false\r\n                        }]\r\n                    });\r\n                    ths.FormSchema = frmSchma;\r\n                }\r\n            });\r\n        },\r\n        OpenCategoryModal: function () {\r\n            var vm = this;\r\n            vm.isManageCategory = true;\r\n        },\r\n        OpenClientModal: function () {\r\n            //debugger\r\n            var vm = this;\r\n            vm.isManageClient = true;\r\n        },\r\n        onDeleteSelectedFiles: function (item) {\r\n            const attachmentConfig = this.findAttachmentConfig();\r\n            if (attachmentConfig) {\r\n                const index = attachmentConfig.showSelectedFiles.indexOf(item);\r\n                if (index > -1) {\r\n                    attachmentConfig.showSelectedFiles.splice(index, 1);\r\n                }\r\n            }\r\n        },\r\n        findAttachmentConfig() {\r\n            for (let item of this.FormSchema) {\r\n                if (item.Data) {\r\n                    for (let dataItem of item.Data) {\r\n                        if (dataItem.label && dataItem.label.toLowerCase().includes('attachment')) {\r\n                            return dataItem.config;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return null;\r\n        },\r\n        saveForm: function (btnType) {\r\n            var ths = this;\r\n            ths.$refs.AddTicket.validate().then(result => {\r\n                if (result) {\r\n                    if (btnType.value == \"DRAFT\") {\r\n                        ths.FormSchema.forEach((group, gi) => {\r\n                            group.Data.forEach((field, fi) => {\r\n                                if (group.group_name == \"ticketType\") {\r\n                                    if (field.name == \"TicketType\") {\r\n                                        field.value = 'DRAFT';\r\n                                    }\r\n                                }\r\n                            });\r\n                        });\r\n                        ths.ticketType = 'DRAFT';\r\n                    }\r\n                    ths.isLoading = true;\r\n                    var CustomFieldArray = ths.$refs.AddTicketForm.ConvertDynamicFormObjToCustomFieldObj(ths.FormSchema);\r\n                    var CustomFieldArrayStatic = ths.$refs.AddTicketForm.ConvertDynamicFormObjToCustomFieldObj(ths.StaticObj);\r\n                    CustomFieldArray.forEach((x) => {\r\n                        if (x.field_name == \"on_behalf_consumer_id\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"cc_users\") {\r\n                            if (x.field_value.length > 0) {\r\n                                var CCUsers = '';\r\n                                x.field_value.forEach((row) => {\r\n                                    CCUsers += row.value + ', ';\r\n                                });\r\n                                CCUsers = CCUsers.slice(0, -2);\r\n                                x.field_value = CCUsers;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"weekly\") {\r\n                            if (!ths.isBlank(x.field_value)) {\r\n                                x.field_value = x.field_value.value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"SA_Scheduled_StartTime\") {\r\n                            if (x.field_value == \"\") {\r\n                                x.field_value = null;\r\n                            } else {\r\n                                x.field_value = x.field_value;\r\n                            }\r\n                        }\r\n                        if (x.field_name == \"SA_Scheduled_EndTime\") {\r\n                            if (x.field_value == \"\") {\r\n                                x.field_value = null;\r\n                            } else {\r\n                                x.field_value = x.field_value;\r\n                            }\r\n                        }\r\n                    })\r\n                    CustomFieldArrayStatic.forEach((x) => {\r\n                        CustomFieldArray.push(x);\r\n                    });\r\n\r\n                    var obj = {\r\n                        data: CustomFieldArray,\r\n                        moduleCode: \"Ticketing\",\r\n                        subModuleCode: \"Ticketing\",\r\n                        attachmentData: ths.fileMulitpleData.length > 0 ? ths.fileMulitpleData : null\r\n                    }\r\n                    DataServices.SaveDynamicForm(JSON.stringify(obj)).then(function (response) {\r\n                        ////debugger;\r\n                        ths.isLoading = false;\r\n                        if (response != null && response.data != null && response.data[0].Status == \"Success\") {\r\n                            ths.TicketNumber = JSON.parse(response.data[0].Value.OTHER_DATA).TICKET_NUMBER;\r\n                            ths.ShowAlert(ths.$t(\"AddedSuccess\", [ths.$t(\"Ticket\")]), \"success\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = true;\r\n                            if (ths.ticketType == 'DRAFT') {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketDraftSubmitStatus\");\r\n                            }\r\n                            else {\r\n                                ths.saveTicketStatus = ths.$t(\"TicketSubmitStatus\");\r\n                            }\r\n\r\n                            ths.showTourGuide = false;\r\n                        } else {\r\n                            ths.ShowAlert(ths.$t(\"ErrorWhileSaving\", [ths.$t(\"Ticket\")]), \"danger\", true, ths.$t(\"Alert\"));\r\n                            ths.isSuccessMessage = false;\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        },\r\n        updateCkeditorModel: function (e, x) {\r\n            x.fieldInfo.value = e;\r\n        }\r\n    }\r\n}\r\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./addWithCustomLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./addWithCustomLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./addWithCustomLayout.vue?vue&type=template&id=b367015e&\"\nimport script from \"./addWithCustomLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./addWithCustomLayout.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}