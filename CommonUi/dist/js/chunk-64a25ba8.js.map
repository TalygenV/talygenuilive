{"version":3,"sources":["webpack:///./node_modules/core-js/internals/get-substitution.js","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?4547","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?ec61","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?33ca","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?c4b9","webpack:///./node_modules/core-js/internals/is-regexp.js","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?d379","webpack:///./node_modules/core-js/modules/es.string.replace-all.js","webpack:///./node_modules/core-js/internals/regexp-get-flags.js","webpack:///./src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue","webpack:///src/components/Common/Modal/modalGraphOptions.vue","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?56c9","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?b0e7","webpack:///src/views/Reporting/Add_Report/ReportPreview.vue","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?68c7","webpack:///./src/views/Reporting/Add_Report/ReportPreview.vue?f7d0","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///src/components/Common/Modal/modalCalculatedFieldUI.vue","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?4a2d","webpack:///./src/components/Common/Modal/modalCalculatedFieldUI.vue?db08","webpack:///src/views/Reporting/Add_Report/Datareport.vue","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?0d46","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?fb43","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?9b46","webpack:///./node_modules/core-js/internals/regexp-flags.js","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?e4c2","webpack:///./src/components/Common/Modal/modalGraphOptions.vue?a5e4","webpack:///./src/views/Reporting/Add_Report/Datareport.vue?79ba"],"names":["uncurryThis","toObject","floor","Math","charAt","replace","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","length","m","symbols","undefined","match","ch","capture","n","f","___CSS_LOADER_API_IMPORT___","push","i","isObject","classof","wellKnownSymbol","MATCH","it","isRegExp","$","call","requireObjectCoercible","isCallable","isNullOrUndefined","toString","getMethod","getRegExpFlags","getSubstitution","IS_PURE","REPLACE","$TypeError","TypeError","indexOf","max","stringIndexOf","string","searchValue","fromIndex","target","proto","replaceAll","replaceValue","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","O","this","endOfLastMatch","result","hasOwn","isPrototypeOf","regExpFlags","RegExpPrototype","RegExp","prototype","R","render","_vm","_c","_self","staticClass","class","maindiv","attrs","isLoading","editclass","_v","_s","ReportName","$t","on","$event","editreport","staticStyle","collapsedclick","saveclass","directives","name","rawName","value","savereportname","expression","domProps","composing","savereport","MainSearchmodel","ListFiltering","SelectAllSearch","_m","_l","submodulecodename","index","key","submodulecodefieldkey","GetLocalizedValue","SubModule","modulelisting","showModuleListForFilter","modulelistingforfilter","showModuleListForField","searchColumnfilter","checkMove","drag","onDragEnd","GetDraggedItem","model","modulelistingmodel","callback","$$v","element","elementIndex","FieldIcons","dttype","icon","DisplayName","FieldName","Addfields","_e","elemIndex","AddFilter","SearchNoRecordForField","SearchNoRecordForFilter","showdiv","expandclick","fieldpan","ref","FieldTabClicked","Groupsearchmodel","Grouplist","GroupSearching","itemclass","filtergroup","item","selectfiltervalue","MainFieldname","DeleteGroupFields","CalculatedUIEnabled","openActionIcon","showRowLevelFunction","OpenCalculatedUI","closeActionIcon","ColumnSearchmodel","filterColumngroup","indx","selectfilterColumnvalue","Columnlist","ColumnListDisplayOrder","Calculated_Field","ExpresssionFieldName","DeleteColumnFields","openSetting","modeldisplayname","preventDefault","PreventDecimal","ColumnFieldDataCode","modeldateformat","$$selectedVal","Array","filter","options","o","selected","map","val","_value","multiple","GetDateFromDB","dateformat","dateIndex","dateFormat","modeldecimalplaces","modeluseseparator","isArray","_i","$$a","$$el","$$c","checked","$$i","concat","modelusecurrency","ApplySaveSelectedData","CloseSetting","FilterTabClicked","category","filterRulechange","templates","template","tempIndex","Filterlist","itmIndex","filtertype","itemIndex","dragover","eleIndex","maincomponentkey","OperatorDisplayName","valueTypeText","valueTypeNumber","valueTypeNumber2","$options","filters","formatDate","valueTypeFirstdate","valueTypeSeconddate","ValueDisplayFirstTime","ValueDisplaySecondTime","Displaymultiplevalue","DropDownValue","DateRangeValue","DeleteFilterFields","IsMandatoryforFilter","openrulespop","GetOperator","itmInx","componentkey","selectedOPValue","OPERATOR_ID","_q","checkvalue","OPERATOR_DISPLAY_NAME","OPERATOR_EXPRESSION","MP","OPERATION_DATA_TYPE","$set","texttypevalue1","ValueDisplaytext","texttypevalue2","ValueDisplaytext2","numbertypevalue1","ValueDisplaynumber","PreventValues","numbertypevalue2","ValueDisplaynumber2","parseFloat","datetypevalue1","ValueDisplaydate","datetypevalue2","ValueDisplaydate2","Date","parse","DDLForDateRange","modeldaterange","DateRangeData","DDLitem","date_range_name","date_range_value","TruncateStr","timetypevalue","ValueDisplayTime","timetypevalue2","ValueDisplayTime2","DDLForFilter","modelFilterDDLValue","multiselectvalue","FormSchema","applySetting","CustomFieldId","ClosePopFilter","showReportPreview","previewdata","customreportparameters","savedateformat","saveJsonReport","PdfJsonReport","editjsondata","graphData","sortingArray","GraphJson","LevelOfGrouping","getchangedinlist","showcalculatedUI","ExpFieldDataArray","editexpressionvalue","ExpDataArray","AlreadyExistExpression","VerifiedExpressionColumnValue","staticRenderFns","PreviewReport","ResetData","ExportToPDF","ExportToExcel","OpenSortingPopup","OpenGraph","isSortPopup","sortColummnarray","input","sortcolummnId","x","columnOrders","AddSortingForm","isValueExistInSort","RemoveSortingForm","close","showGraphOptions","OpenGraphOptions","showChart","ResetGraphData","FilterCustomFieldName","XAxisField","YAxisField","aggregateFunctionResult","aggregateFunctionType","chartType","chartOptions","chartSeries","isChartColor","GetChartColorCode","style","GetChartColorData","previewgroupdata","showdata","previewcolumn","column","noRecord","data","sitem","sindex","gitem","gindex","totalRecord","DateFormat","showcoldata","SaveAllReport","CancelAll","GraphData","CloseGraphOptions","onSubmit","scopedSlots","_u","fn","chartTypes","id","selectedChartTypeID","chart_Type","onChangeChart","error","Data","ViewReportGraph","PreviewChart","selectedChartType","chartseries","resultMsg","GetNumberChartStyle","NumberChartValue","ApplyGraph","components","VueApexCharts","props","type","Object","Number","reportTitle","selectedChartXAxis","selectedChartYAxis","colourList","chartOptionXAxisData","chartSeriesData","GroupingGraphData","BindGraph","isChartData","graphParams","layoutType","astype","label","placeholder","config","showAddIcon","validationRules","disabled","visibility","onChange","onChangeXYAxisDropdown","GetRadioValue","created","vm","GetChartTypes","GetColumnList","chartTypeID","AggregateFuncField","ChartColorCode","CheckFieldType","watch","newval","oldval","methods","forEach","$refs","refGraphForm","UpdateKeyValue","modal","removeClass","remove","validateForm","reset","$parent","GraphServices","then","response","dataset","ResetGraph","GraphDataValue","AggregateFunction","requiedFieldfordrawGraph","findvaluefromcolumnlistxaxis","find","parseInt","findvaluefromcolumnlistyaxis","PreviewJson","ListingData","toLowerCase","GData","chartoptions","MetaData","IsGrouping","SetGroupingGraphData","SetGraphValues","FilterColumnlist","CustomFieldName","CalculatingAggregateFuncResult","DrawGraph","ShowAlert","setGraphArray","XaxisField","yAxisField","keys","mainindex","pushitem","validate","valid","CharColorData","isHorizontal","chart","toolbar","export","svg","filename","png","csv","headerCategory","tooltip","enabled","formatter","xaxis","categories","title","text","offsetY","offsetX","labels","trim","yaxis","toLocaleString","plotOptions","bar","borderRadius","horizontal","dataLabels","colors","legend","width","screen","availWidth","functionType","tempval","sum","toFixed","aggregatecount","total","count","min","apply","ColumnFieldType","CheckFieldTypeX","entries","XFieldName","YFieldName","items","BindXYFields","replaceXCurrencySymbol","GenrateRandomColorCode","randomColor","random","GenrateRandomColorList","color","IsExist","formfields","component","pdfMake","vfs","pdfFonts","modalGraphOptions","String","SortingData","Boolean","showmulitGrouping","DynamicFillValue","GroupValue","isGraph","YAxisfield","watchvalue","allReocrdsList","ExcelData","SavedGraphData","allReocrdsData","TableBody","TableHeader","pdfContent","ExcelJsonData","isPreviewForPdfExcel","EditSortingData","RenderList","mounted","_vm$$refs$modalGraph","modalGraph","SORTTYPE","RefreshReport","tempdata","defaultdatecheck","moment","isValid","splice","assign","_vm$$refs$modalGraph2","ResetPreview","graphArray","Info","GROUP","GRAPH","jsonData","JSON","stringify","ReportPreviewService","SaveAllDynamicReport","Value","$router","catch","err","console","log","sortindex","findIndex","setTimeout","SetBootstraptoolTip","CheckColumnExistInGraph","GetAllRecordsForPDF","excelvalue","temp","ReportID","Modulename","Submodulecode","submoduleid","PageSize","PageNumber","FIELDS","FILTERS","SORTING","EXPRESSION","jsondata","graphURI","GetGraphImageURI","allRecordslisting","pdfDetails","pageType","pageOrientation","GraphWidth","BindPDFDataForGroup","BindPDFData","image","imgURI","alignment","pageSize","content","table","headerRows","body","styles","SetPDFStyle","defaultStyle","createPdf","download","TableHeader2","ColumnList","currentData","heading","pdfdata","columnList","groupingindex","tableData","headerelement","headerindex","pdfgroupdata","groupColumn","rowSpan","pdfwithoutgroupdata","tempitem","subheader","fontSize","bold","margin","_vm$$refs$chart","URI","dataURI","uri","params","GetExcelReport","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","current","date","getDate","getMonth","getFullYear","fileName","split","join","click","buttons","SubmitExpression","FunctionsName","FuncType","Functionskey","Keys","AddFunctionsfields","modelconditionexpression","Functionkey","ShowDescriptionForFunction","AddConditionExpression","InputValueExpression","deleteuserinput","GetCursorPoint","UserInputSelection","AddSpace","Addplussign","Addsubtractsign","Addmultiplysign","Adddividesign","Addopenbracketsign","Addclosebracketsign","verifiedvaluedata","closed","VerifyExpression","ResetExpression","JsonColumns","SearchNoRecord","typeL","ResponseColumnData","ResponseFunctionData","FieldsValue","FunctionValue","AddBracketValue","SubtractBracketValue","MultplyBracketValue","DivideBracketValue","OpenBracketExpValue","CloseBracketExpValue","FieldData","fieldatavalue","reqFrom","verifiedvalue","modelfieldname","substringvalue","verifyErrorMsg","InputValueArray","InputValueExpressionByID","FunctionValueArray","selecteduserinput","selecteduserinputbyid","ExpressionIDvalue","updateexpresion","fieldadded","FieldTableNameValue","GetCommaSeparatedValue","countbyfield","conditionexpression","checkbycondition","GetSelectedValue","onChangeDropdown","onClick","CancelExpressionUI","ExpresssionDataValue","GetFunctionList","backdrop","keyboard","addClass","$emit","ExpressionDataService","GetListFields","AVAILABLE_FIELDS","CustomFields","sort","FirstValue","SecondValue","localeCompare","res","Functions","event","cursorpos","getdata","SetValueOnCursorPosition","checkindex","FieldValueData","MatchIndex","SameName","convertarr","firstindex","secondindex","substring","includes","substringarr","IsSystemGenerated","TableName","updatingvalue","updatevaluebyid","DescriptionForFunction","closest","openbracketexpsign","openbracket","closebracketexpsign","closebracket","addbracketexpsign","Addsign","subtractbracketexpsign","subtractsign","multiplybracketexpsign","multiplysign","dividebracketexpsign","dividesign","spaceaddingexp","addedspace","addedspacefordb","elem","convertarrid","substringarrid","convertstr","code","keyCode","cursorposition","assignindex","getindexofexp","getfieldindex","userinput","selectionStart","fieldsdata","dataitem","ExpressionID","ExpressionName","ExpressionDisplay","Expression","ColumnIndex","encodeURIComponent","jsonvalue","VerifyExpressionFromDB","Result","InavalidExpression","checkeditfieldexist","FieldValue","VerifiedExpression","ExpressionFieldArray","IsEdit","IsExpExist","e","cursorpos1","getElementById","focus","returndata","getSelection","filterinput","searchcol","searchfilter","indexitem","searchitem","displayMainColname","filteritem","draggable","ReportPreview","CalculatedUI","isFieldCollapsed","submodulecode","modulename","expandcollapsediv","fielddata","viewId","tempreportid","Showsettingsview","showdiv1","dateformate","customField","dragcount","ReportPreviewListing","submodulename","test1","PAGESIZE","selectvalue","selecteddatatype","savedOperatorName","FilterCount","displayvalue2","selectedvalue","RequestFilterJosn","CurrentOperatorSelected","operator_id","mode","dropdwonvalues","searchable","createOption","SelectedoperatorMappedDatatype","commaSepratedSelectedValues","valueKey","valuekey2","FirstOperand","FirstOperandValue1","SecondOperand","SecondOperandValue1","Datatype","operator","CheckExpressionFeild","ExpressionArray","ExpressionFieldsArray","setvalue","ChartGroupingArray","GroupingArray","FilterActiveForMandatory","IsMandatoryforFilterAfterReset","ArrayforFilterpopup","selctRuleForFilter","IsForPreview","IsDDLValueInFilter","GetSubModuleList","sortingresetvalue","ColumnlistArray","GrouplistIndex","$route","storeParameters","GetStoredParameters","GetList","GetReportDetailsByReportId","computed","displayname","searchColumn","GetSubModuleName","displaycolname","SearchItem","localStorage","setItem","getItem","Getddldata","DataReportService","GetFilterDDLselectvalue","ddlitem","GetDateRangeFilterDDL","GetReportDetailsbyId","checkfields","JSON_To_Create_ReportListing","BindFeilds","BindFilters","BindGROUP","EXPRESSIONFIELDSARRAY","ReportListing","CheckIsMandartoryForFilter","mitem","indexFound","bindpouupvaluefordatetime","operator_display_name","bindfilterdata","GetDDLValueinEdit","GetDDLTempVal","PickListOption","GetDDLValueinEditArr","OperatorExpression","GetDDLValueinEditMulti","Value1","DDLEditItem","_GetDDLValueinEdit","moduleIndex","moduleItem","field","returnObject","ModuleIndex","ActualDataType","FilterTypeAndorOr","Value2","CheckforIncludeDataMatchesForFilter","GetFilterSelectDDL","checkforvalue","temparr","checkexpfieldvalue","_vm$$refs$Calculated","Calculated","DecimalPlace","IsUseSeprator","IsCurrencySymbol","GetDateFromDetail","css","CheckFeildOrFilter","isFieldsActive","active","NewReportInserted","SetScrolbar","removed","Fields","Fieldsitem","CheckFields","DataTypeCode","subtract","format","Editdyanmicreport","Folder_Id","Module_Id","Sub_Module_Id","Version","AddDynamicreport","Status","CheckSameNameExist","MatchIfSameNameExist","CheckValidSorting","CheckForValidSorting","arritem","XCustomFieldId","YCustomFieldId","AggregateFunctionType","checkdata","reportdata","isFieldActive","ColumnDisplayOrder","getlastarrayvalue","Display_Order","hasOwnProperty","checkAlredyExist","object","SaveSelectedData","OrginalDisplayName","GetChangedNameID","mindex","iitem","IsGraphColumn","tagIndex","tagIndex1","calctagIndex","_vm$$refs$reportdata","getsortvalue","_vm$$refs$reportdata2","isFilterActive","Filters","picklist_options","getCountValue","FilterType","tagIndex2","GetOperatordata","each","html","inneritem","validindex","GetDateDetails","resetoldvalueinfilteroperator","IsBinding","operatorname","operatorid","FillFiltervalue","checksameoperator","GetDataOperator","DATA","BindOperatorValues","checkIfExists","isBinding","popupvaluebind","Index","GetFilterddlvalue","FilterJosnRquest","Commaseprated","operatoerExpressionResult","ConvertOperatorToExpression","filtervalueexist","multiddl","fillmultiselect","dditem","ifexist","j","fillvalues","isBetweenTrue","multiitem","_GetDDLValue","_vm$dropdwonvalues","Multiddlvalue","ddlvalues","isddlvalueexist","GetDDLValue","valueTypeText2","valArray","commsplitedVal","CommaSepratedStringValues","_vm$$refs$Calculated2","checkFieldVlaueExist","ExpressionDisplayOrder","colelem","DateFormatId","verifyelem","vobject","REPORTID","FunctionKeys","Arrayitem","fieldexp","fobject","checkExpExist","indexvalue","CheckItem","checkExpvalue","dataele","getindex","related","dragged","draggedContext","relatedContext","list","checkforvalueIndex","Colitem","Colindex","GetAddedFieldFromDrag","AddedField","GetAddedFieldFromModuleListing","ModuleListField","Fitem","RFitem","sortitem","ekey","len","convertstring","__esModule","default","locals","add","anObject","that","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky"],"mappings":"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","file":"js/chunk-64a25ba8.js","sourcesContent":["'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=1&id=76f31a9b&prod&scoped=true&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ChartNumberClass{text-align:center}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=style&index=0&id=7a09bc57&prod&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".multiselect__tags input.multiselect__input{width:100px!important}.multiselect__tags .multiselect__strong{margin-right:10px}.multiselect__tags-wrap{display:flex;flex-wrap:wrap}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\nvar isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) === 'RegExp');\n};\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".mCSB_inside>.mCSB_container[data-v-76f31a9b]{margin-right:30px}.width80[data-v-76f31a9b]{width:80px}.width120[data-v-76f31a9b]{width:110px}.invalid-feedback[data-v-76f31a9b]{white-space:normal;font-size:110%}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"page-action\"},[_c('div',{staticClass:\"left-menu-tab datareport\"},[_c('div',{class:_vm.maindiv},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx\",\"role\":\"tablist\",\"aria-multiselectable\":\"true\"}},[_c('div',{class:_vm.editclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 px-2\"},[_vm._v(_vm._s(_vm.ReportName)+\" \"),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('EditReportName'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.editreport()}}},[_c('em',{staticClass:\"fa fa-pencil\",staticStyle:{\"font-size\":\"20px\"},attrs:{\"aria-hidden\":\"true\"}})])]),_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Collapse\",\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.collapsedclick()}}},[_c('em',{staticClass:\"fa fa-angle-double-left mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{class:_vm.saveclass},[_c('div',{staticClass:\"card-header filter-head p-0\",attrs:{\"role\":\"tab\",\"id\":\"headingOne1\"}},[_c('h5',{staticClass:\"mb-0 pl-2 mt-1\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.savereportname),expression:\"savereportname\"}],class:{'form-control p-1':true,'is-invalid': _vm.savereportname.length >100},staticStyle:{\"width\":\"83%\"},attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.savereportname)},on:{\"input\":function($event){if($event.target.composing)return;_vm.savereportname=$event.target.value}}}),_c('span',{staticClass:\"expand_all_filters\"},[_c('span',{attrs:{\"id\":\"SearchData\"}},[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":_vm.$t('Save'),\"data-toggle-tooltip\":\"tooltip\"},on:{\"click\":function($event){return _vm.savereport()}}},[_c('em',{staticClass:\"fa fa-floppy-o mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])])])]),_c('div',{staticClass:\"card-panel\"},[_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":_vm.ListFiltering,\"keyup\":_vm.ListFiltering,\"mouseup\":_vm.SelectAllSearch,\"mouseleave\":_vm.SelectAllSearch,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_vm._m(0)])]),_vm._l((_vm.submodulecodename),function(name,index){return _c('div',{key:_vm.submodulecodefieldkey,staticClass:\"card\",staticStyle:{\"border-bottom\":\"1px solid #929292\"}},[_c('div',{staticClass:\"card-header pl-0\",attrs:{\"role\":\"tab\",\"id\":'headingOnee' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx\",\"href\":\"javascript:;\",\"aria-expanded\":index == 0 ? true : false,\"data-target\":'#collapseOne' + index,\"aria-controls\":'collapseOne' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o ml-2\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})]),_vm._m(1,true)])]),_c('div',{class:_vm.modulelisting.length == 0 ? 'd-none' : _vm.modulelisting[index].length == 0 && !_vm.showModuleListForFilter ||\n                        _vm.modulelistingforfilter[index].length == 0 && _vm.showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoFieldAvailable\")))]),_c('div',{class:index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse',attrs:{\"id\":'collapseOne' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'headingOnee' + index,\"data-parent\":\"#accordionEx\"}},[_c('PerfectScrollbar',[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"},[(_vm.showModuleListForField)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFields\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index, name.SubModule)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l(((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index])),function(element,elementIndex){return _c('li',{key:elementIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left mt-1' : \n                                                        (element.dttype != undefined && element.dttype[0].icon != null) ? element.dttype[0].icon + ' ' + 'float-left mt-1' : 'float-left mt-1',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName),\"title\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index, name.SubModule)}}})])])])}),0):_vm._e(),(_vm.showModuleListForFilter)?_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index],\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.onDragEnd,\"change\":function($event){return _vm.GetDraggedItem($event, index)}},model:{value:(_vm.modulelistingmodel),callback:function ($$v) {_vm.modulelistingmodel=$$v},expression:\"modulelistingmodel\"}},_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelistingforfilter[index] : _vm.searchColumnfilter[index]),function(element,elemIndex){return _c('li',{key:elemIndex,staticClass:\"nav-item parent-element\",attrs:{\"id\":\"StopDragfield\"}},[_c('span',{staticClass:\"nav-link left-menu px-3\"},[_c('em',{class:element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \n                                                            element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName),\"title\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-sliders float-right mt-1 text-primary pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFilter(element, index,$event)}}})])])])}),0):_vm._e()],1)])])])],1)])}),(_vm.SearchNoRecordForField && !_vm.showModuleListForFilter || _vm.SearchNoRecordForFilter && _vm.showModuleListForFilter)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()],2)])],1),_c('div',{class:_vm.showdiv,staticStyle:{\"float\":\"left\",\"width\":\"50px\"},on:{\"click\":function($event){return _vm.expandclick()}}},[_vm._m(2)]),_c('div',{class:_vm.fieldpan},[_c('div',{staticClass:\"tab-style w-100\"},[_c('div',{staticClass:\"tab_container\",attrs:{\"role\":\"tabpanel\"}},[_c('div',{staticClass:\"tab-content\"},[_c('b-tabs',{attrs:{\"pills\":\"\"}},[_c('b-tab',{ref:\"FIELDS\",staticClass:\"fields\",attrs:{\"title\":\"FIELDS\",\"active\":_vm.showModuleListForField},on:{\"click\":_vm.FieldTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('Groups')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.Groupsearchmodel),expression:\"Groupsearchmodel\"}],class:_vm.Grouplist.length == 0 ? 'form-control' : 'form-control disabled',attrs:{\"placeholder\":\"Add Group\"},domProps:{\"value\":(_vm.Groupsearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.Groupsearchmodel=$event.target.value}}}),(_vm.Groupsearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass},[_vm._l((_vm.filtergroup),function(item,i){return _c('div',{key:i},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfiltervalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(item.MainFieldname)+\" \")])])])}),(_vm.filtergroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('br'),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Grouplist,\"group\":\"my-groupGrouplist\",\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":function($event){_vm.drag = false}},model:{value:(_vm.Grouplist),callback:function ($$v) {_vm.Grouplist=$$v},expression:\"Grouplist\"}},_vm._l((_vm.Grouplist),function(element,index){return _c('div',{key:index,staticClass:\"list-item\"},[_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.DisplayName),\"title\":_vm.GetLocalizedValue(element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \")]),_c('a',[_c('em',{staticClass:\"fa fa-trash-o text-danger\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteGroupFields(element, $event, index)}}})])])}),0)],1),_c('hr'),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',{staticClass:\"mb-1\"},[_vm._v(_vm._s(_vm.$t('COLUMNS')))]),_c('div',{staticClass:\"verticle-action\",staticStyle:{\"top\":\"-3px\"}},[_c('em',{class:_vm.CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled',attrs:{\"id\":\"btnpopup\",\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openActionIcon($event)}}}),(_vm.showRowLevelFunction)?_c('span',{staticClass:\"action-list-box\",staticStyle:{\"width\":\"240px\",\"display\":\"block\"}},[_c('span',{staticClass:\"list-actions fsm-list\",staticStyle:{\"padding-left\":\"0\"},attrs:{\"id\":\"action-list\"}},[_c('a',{staticClass:\"update actions-onclick\",on:{\"click\":_vm.OpenCalculatedUI}},[_c('span',{staticClass:\"text\"},[_vm._v(_vm._s(_vm.$t('CalcultedUIName')))])]),_c('em',{staticClass:\"fa fa-times close close-action\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.closeActionIcon($event)}}})])]):_vm._e()]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ColumnSearchmodel),expression:\"ColumnSearchmodel\"}],staticClass:\"form-control\",attrs:{\"placeholder\":\"Add Column\"},domProps:{\"value\":(_vm.ColumnSearchmodel)},on:{\"keypress\":_vm.GroupSearching,\"input\":function($event){if($event.target.composing)return;_vm.ColumnSearchmodel=$event.target.value}}}),(_vm.ColumnSearchmodel != '')?_c('div',{staticClass:\"autosuggestion\",class:_vm.itemclass,staticStyle:{\"z-index\":\"9999\"}},[_vm._l((_vm.filterColumngroup),function(item,indx){return _c('div',{key:indx},[_c('div',[_c('div',{on:{\"click\":function($event){return _vm.selectfilterColumnvalue(item)}}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(item.FieldName, item.DisplayName))+\" : \"+_vm._s(_vm.GetLocalizedValue(item.MainFieldname))+\" \")])])])}),(_vm.filterColumngroup.length == 0)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\"))+\" \")]):_vm._e()],2):_vm._e(),_c('div',{staticClass:\"dashed_bod_drag text-center mt-2\"},[_c('h6',{staticClass:\"p-2 m-0\"},[_vm._v(\"Drag Fields Here \")]),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Columnlist,\"group\":\"my-groupForFields\",\"id\":\"TargetDivID\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder},model:{value:(_vm.Columnlist),callback:function ($$v) {_vm.Columnlist=$$v},expression:\"Columnlist\"}},_vm._l((_vm.Columnlist),function(element,indx){return _c('div',{key:indx,staticClass:\"list-item parent-element\",attrs:{\"id\":\"TargetDivID\"}},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"200px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+\" \"+_vm._s(element.ExpresssionFieldName)+\" \")]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteColumnFields(element, $event)}}},[_c('em',{staticClass:\"fa fa-trash-o text-danger\"})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openSetting(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502 onlyone\"},[_c('span',{staticClass:\"action-list-box small setting-div-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3 position-relative\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('DisplayName')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldisplayname),expression:\"modeldisplayname\"}],staticClass:\"form-control\",attrs:{\"maxlength\":\"20\"},domProps:{\"value\":(_vm.modeldisplayname)},on:{\"paste\":function($event){$event.preventDefault();},\"keydown\":function($event){return _vm.PreventDecimal($event)},\"input\":function($event){if($event.target.composing)return;_vm.modeldisplayname=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DateFormat'))+\":\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldateformat),expression:\"modeldateformat\"}],staticClass:\"form-control textnormal\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldateformat=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\"},domProps:{\"selected\":_vm.modeldateformat === ''}},[_vm._v(\"Select\")]),_vm._l((_vm.GetDateFromDB),function(dateformat,dateIndex){return _c('option',{key:dateIndex},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(dateformat.dateFormat))+\" \")])})],2)])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('label',[_vm._v(_vm._s(_vm.$t('DecimalPlaces')))]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldecimalplaces),expression:\"modeldecimalplaces\"}],staticClass:\"form-control\",attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.modeldecimalplaces)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modeldecimalplaces=$event.target.value}}})])]),_c('div',{staticClass:\"col-12 p-0 float-left\",staticStyle:{\"margin-top\":\"10px\"}},[_c('div',{class:element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeluseseparator),expression:\"modeluseseparator\"}],attrs:{\"type\":\"checkbox\",\"id\":\"useseparator\"},domProps:{\"checked\":Array.isArray(_vm.modeluseseparator)?_vm._i(_vm.modeluseseparator,null)>-1:(_vm.modeluseseparator)},on:{\"change\":function($event){var $$a=_vm.modeluseseparator,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modeluseseparator=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modeluseseparator=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modeluseseparator=$$c}}}}),_vm._v(\"  \"),_c('label',{attrs:{\"for\":\"User\"}},[_vm._v(_vm._s(_vm.$t('UseSeparator')))]),_c('br'),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelusecurrency),expression:\"modelusecurrency\"}],attrs:{\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.modelusecurrency)?_vm._i(_vm.modelusecurrency,null)>-1:(_vm.modelusecurrency)},on:{\"change\":function($event){var $$a=_vm.modelusecurrency,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.modelusecurrency=$$a.concat([$$v]))}else{$$i>-1&&(_vm.modelusecurrency=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.modelusecurrency=$$c}}}}),_c('label',{staticStyle:{\"padding\":\"6px\"},attrs:{\"for\":\"Role\"}},[_vm._v(_vm._s(_vm.$t('UseCurrency')))])])]),_c('div',{staticClass:\"col-12 p-0 float-left mb-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket text-white\",attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.ApplySaveSelectedData(element, $event)}}},[_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.CloseSetting($event)}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])]),_c('div',{staticClass:\"float-left text-left w-100 font-12\"},[_vm._v(_vm._s(element.MainFieldname))])])}),0)],1)])]),_c('b-tab',{ref:\"Filters\",attrs:{\"title\":\"Filters\",\"active\":_vm.showModuleListForFilter},on:{\"click\":_vm.FilterTabClicked}},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('h6',[_vm._v(\"include data if it matches\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.category),expression:\"category\"}],staticClass:\"form-control\",attrs:{\"name\":\"template\"},on:{\"change\":[function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.category=$event.target.multiple ? $$selectedVal : $$selectedVal[0]},_vm.filterRulechange]}},_vm._l((_vm.templates),function(template,tempIndex){return _c('option',{key:tempIndex,domProps:{\"selected\":template == _vm.category ? 'selected' : '',\"value\":template}},[_vm._v(\" \"+_vm._s(template)+\" \")])}),0),_c('h6',{staticClass:\"mt-3\"},[_vm._v(\"Filter rules\")]),_c('div',{staticClass:\"form-control\"},[_vm._l((_vm.Filterlist),function(item,itmIndex){return (_vm.category == 'Match All Value')?_c('span',{key:itmIndex,attrs:{\"ml-1\":\"\"}},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(\" \"+_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()}),_vm._l((_vm.Filterlist),function(item,itemIndex){return (_vm.category != 'Match All Value')?_c('span',{key:itemIndex},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(item) + 1))+\" \"),(_vm.Filterlist.length > (_vm.Filterlist.indexOf(item) + 1))?_c('span',{staticStyle:{\"margin-right\":\"3px\"}},[_vm._v(_vm._s(_vm.filtertype))]):_vm._e()]):_vm._e()})],2),_c('draggable',{staticClass:\"draggable-list\",attrs:{\"list\":_vm.Filterlist,\"group\":\"my-groupForFilter\",\"move\":_vm.checkMove,\"item-key\":\"CustomFieldId\",\"id\":\"TargetDivID\"},on:{\"start\":function($event){_vm.drag = true},\"end\":_vm.ColumnListDisplayOrder,\"dragenter\":function($event){return _vm.dragover($event)},\"dragleave\":function($event){return _vm.dragover($event)},\"drop\":function($event){return _vm.dragover($event)}},model:{value:(_vm.Filterlist),callback:function ($$v) {_vm.Filterlist=$$v},expression:\"Filterlist\"}},_vm._l((_vm.Filterlist),function(element,eleIndex){return _c('div',{key:_vm.maincomponentkey,staticClass:\"list-item row filter-div\",attrs:{\"id\":\"TargetDivID\"},on:{\"dragover\":function($event){return _vm.dragover($event)}}},[_c('div',{staticClass:\"counter_num px-1 py-2 filter-count-div\"},[_vm._v(\" \"+_vm._s((_vm.Filterlist.indexOf(element) + 1))+\" \")]),_c('div',{staticStyle:{\"width\":\"77%\"}},[_c('div',{staticClass:\"px-1 py-0 width120 text-truncate float-left font-14\"},[(element.Calculated_Field == true)?_c('span',{staticStyle:{\"font-size\":\"22px\",\"float\":\"left\",\"margin-right\":\"10px\"}},[_vm._v(\"f\"),_c('sub',{staticStyle:{\"font-size\":\"12px\"}},[_vm._v(\"x\")])]):_vm._e(),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"110px\"},attrs:{\"data-toggle-tooltip\":element.FieldName,\"title\":_vm.GetLocalizedValue(element.FieldName, element.DisplayName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(element.FieldName, element.DisplayName))+_vm._s(element.ExpresssionFieldName)+\" \")])]),_c('div',{staticClass:\"px-1 py-0 text-primary width80 text-truncate float-left font-14\"},[_vm._v(\" \"+_vm._s(element.OperatorDisplayName)+\" \")]),_c('div',{staticClass:\"px-1 py-0 hh text-truncate float-left font-12 w-100\"},[_vm._v(\" \"+_vm._s(element.valueTypeText)+\" \"+_vm._s(element.valueTypeNumber)+\" \"+_vm._s(element.valueTypeNumber2)+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeFirstdate))+\" \"+_vm._s(_vm.$options.filters.formatDate(element.valueTypeSeconddate))+\" \"+_vm._s(element.ValueDisplayFirstTime)+\" \"+_vm._s(element.ValueDisplaySecondTime)+\" \"+_vm._s(element.Displaymultiplevalue)+\" \"+_vm._s(element.DropDownValue)+\" \"+_vm._s(_vm.$t(element.DateRangeValue))+\" \")])]),_c('div',{staticClass:\"parentdiv datarepfix filters\"},[_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.DeleteFilterFields(element, $event)}}},[_c('em',{class:!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'})]),_c('a',{attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.openrulespop(element, $event)}}},[_c('em',{staticClass:\"fa fa-cog action_icon_cv\"})]),_c('div',[_c('div',{staticClass:\"verticle-action rt25 rt502\"},[_c('span',{staticClass:\"action-list-box small filter-list-box\"},[_c('span',{staticClass:\"list-actions text-left p-0 datarep ml-3 position-relative\",staticStyle:{\"width\":\"480px\"},attrs:{\"id\":\"action-list\"}},[_c('div',{staticClass:\"float-left col-12 p-0\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[_c('div',{staticClass:\"theme-primary partition-full\"},[_c('span',{staticClass:\"p-name text-white mt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t('Setting'))+\" \")])])])])]),_c('div',{staticClass:\"col-12 float-left\"},[_c('div',{staticClass:\"col-12 p-0 float-left\",staticStyle:{\"max-height\":\"210px\",\"overflow-y\":\"auto\"}},[_vm._l((_vm.GetOperator),function(item,itmInx){return _c('div',{key:_vm.componentkey,staticClass:\"form-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(element.selectedOPValue),expression:\"element.selectedOPValue\"}],staticClass:\"radio\",attrs:{\"type\":\"radio\",\"id\":'radiobtn' + item.OPERATOR_ID,\"name\":'radiobtn' + (_vm.Filterlist.indexOf(element) + 1)},domProps:{\"value\":item.OPERATOR_ID,\"checked\":_vm._q(element.selectedOPValue,item.OPERATOR_ID)},on:{\"click\":function($event){return _vm.checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)},\"change\":function($event){return _vm.$set(element, \"selectedOPValue\", item.OPERATOR_ID)}}}),_c('label',{staticClass:\"ml-2\",attrs:{\"for\":'radiobtn' + item.OPERATOR_ID}},[_vm._v(\" \"+_vm._s(item.OPERATOR_DISPLAY_NAME)+\" \")]),_c('br')])}),(_vm.texttypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext),expression:\"ValueDisplaytext\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt\"},domProps:{\"value\":(_vm.ValueDisplaytext)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext=$event.target.value}}}):_vm._e(),(_vm.texttypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaytext2),expression:\"ValueDisplaytext2\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inpttxt2\"},domProps:{\"value\":(_vm.ValueDisplaytext2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaytext2=$event.target.value}}}):_vm._e(),(_vm.numbertypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber),expression:\"ValueDisplaynumber\"}],class:{'form-control':true,'is-invalid':\n                                                                                    element.ColumnFieldDataCode == 'int' ? _vm.ValueDisplaynumber.length > 9 : _vm.ValueDisplaynumber.length > 15},attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'},domProps:{\"value\":(_vm.ValueDisplaynumber)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber=$event.target.value}}}):_vm._e(),_c('br'),(_vm.numbertypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaynumber2),expression:\"ValueDisplaynumber2\"}],class:{ 'form-control': true, 'is-invalid': element.ColumnFieldDataCode == 'int' ? ((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || _vm.ValueDisplaynumber2.length > 9) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) :\n                                                                                    ((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) || \n                                                                                    _vm.ValueDisplaynumber2.length > 15) && (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')) },attrs:{\"type\":\"number\",\"id\":\"inpttxtbtw\",\"onKeyPress\":element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'},domProps:{\"value\":(_vm.ValueDisplaynumber2)},on:{\"keydown\":function($event){return _vm.PreventValues($event)},\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaynumber2=$event.target.value}}}):_vm._e(),(((parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber)) && \n                                                                                    (_vm.ValueDisplaynumber2 != '' || _vm.ValueDisplaynumber2 == '0')))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(element.ColumnFieldDataCode != 'int')?_c('span',{class:_vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'},[_vm._v(\"Can not add more than 15 digits\")]):_vm._e(),(element.ColumnFieldDataCode == 'int')?_c('span',{class:_vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 ? 'invalid-feedback':'d-none'},[_vm._v(\"Can not add more than 09 digits\")]):_vm._e(),(_vm.datetypevalue1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate),expression:\"ValueDisplaydate\"}],staticClass:\"form-control\",attrs:{\"type\":\"date\",\"id\":\"inpttxtdate1\",\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate=$event.target.value}}}):_vm._e(),(_vm.datetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplaydate2),expression:\"ValueDisplaydate2\"}],class:{ 'form-control mt-2': true, 'disabled': _vm.ValueDisplaydate == '','is-invalid': ((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != '') },attrs:{\"type\":\"date\",\"id\":\"inpttxtdate2\",\"min\":_vm.ValueDisplaydate,\"max\":\"9999-12-31\"},domProps:{\"value\":(_vm.ValueDisplaydate2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplaydate2=$event.target.value}}}):_vm._e(),(((Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) \n                                                                                    || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate)) && _vm.ValueDisplaydate2 != ''))?_c('span',{staticClass:\"invalid-feedback\"},[_vm._v(\"Second value should be greater than first value.\")]):_vm._e(),(_vm.DDLForDateRange)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modeldaterange),expression:\"modeldaterange\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modeldaterange=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"selected\":\"\",\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.DateRangeData),function(DDLitem){return _c('option',{key:DDLitem.date_range_name,attrs:{\"title\":DDLitem.date_range_value},domProps:{\"value\":DDLitem.date_range_name}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.date_range_value, 50)))])})],2):_vm._e(),(_vm.timetypevalue)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime),expression:\"ValueDisplayTime\"}],staticClass:\"form-control\",attrs:{\"type\":\"time\",\"id\":\"inpttxttime1\",\"Title\":_vm.ValueDisplayTime,\"step\":\"2\"},domProps:{\"value\":(_vm.ValueDisplayTime)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime=$event.target.value}}}):_vm._e(),(_vm.timetypevalue2)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.ValueDisplayTime2),expression:\"ValueDisplayTime2\"}],class:{ 'form-control': true, 'disabled': _vm.ValueDisplayTime == '' },attrs:{\"type\":\"time\",\"id\":\"inpttxttime2\",\"min\":_vm.ValueDisplayTime,\"Title\":_vm.ValueDisplayTime2,\"step\":\"2\"},domProps:{\"value\":(_vm.ValueDisplayTime2)},on:{\"input\":function($event){if($event.target.composing)return;_vm.ValueDisplayTime2=$event.target.value}}}):_vm._e(),(_vm.DDLForFilter)?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelFilterDDLValue),expression:\"modelFilterDDLValue\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.modelFilterDDLValue=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\"}},[_vm._v(\"Select \")]),_vm._l((_vm.options),function(DDLitem){return _c('option',{key:DDLitem.value,attrs:{\"title\":DDLitem.name},domProps:{\"value\":DDLitem.value}},[_vm._v(\" \"+_vm._s(_vm.TruncateStr(DDLitem.name, 50)))])})],2):_vm._e(),(_vm.multiselectvalue)?_c('div',[_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema}})],1):_vm._e()],2),_c('div',{staticClass:\"col-12 p-0 float-left mb-3 mt-3\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('a',{class:{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \n                                                                                            ? (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                            || _vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 && _vm.numbertypevalue2)\n                                                                                            : (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                            || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2))\n                                                                                            || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2) },attrs:{\"id\":\"btnSaveTicket\",\"title\":\"\",\"data-toggle-tooltip\":\"tooltip\",\"data-original-title\":\"Click here to submit ticket\"},on:{\"click\":function($event){return _vm.applySetting(element.CustomFieldId)}}},[_c('em',{class:{ 'fa fa-save text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \n                                                                                                ? (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                                || _vm.ValueDisplaynumber.length > 9 || _vm.ValueDisplaynumber2.length > 9 && _vm.numbertypevalue2)\n                                                                                                : (parseFloat(_vm.ValueDisplaynumber2) < parseFloat(_vm.ValueDisplaynumber) || parseFloat(_vm.ValueDisplaynumber2) == parseFloat(_vm.ValueDisplaynumber) \n                                                                                                || _vm.ValueDisplaynumber.length > 15 || _vm.ValueDisplaynumber2.length > 15 && _vm.numbertypevalue2))\n                                                                                                || (Date.parse(_vm.ValueDisplaydate2) < Date.parse(_vm.ValueDisplaydate) || Date.parse(_vm.ValueDisplaydate2) == Date.parse(_vm.ValueDisplaydate) && _vm.datetypevalue2)}}),_vm._v(\"Apply\")])])])])])]),_c('em',{staticClass:\"fa fa-times close close-action_cv\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.ClosePopFilter()}}}),_c('div',{staticClass:\"va_rt25\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-dark\",staticStyle:{\"font-size\":\"20pt\"}})])])])])])])])}),0)],1),_c('hr')])],1),_vm._m(3)],1)])])])]),(_vm.showReportPreview)?_c('ReportPreview',{ref:\"reportdata\",attrs:{\"previewdata\":_vm.previewdata,\"customreportparameters\":_vm.customreportparameters,\"modeldateformat\":_vm.savedateformat,\"Columnlist\":_vm.Columnlist,\"Grouplist\":_vm.Grouplist,\"saveJsonReport\":_vm.saveJsonReport,\"PdfJsonReport\":_vm.PdfJsonReport,\"editjsondata\":_vm.editjsondata,\"ReportName\":_vm.ReportName,\"GraphData\":_vm.graphData,\"SortingData\":_vm.sortingArray,\"GraphJson\":_vm.GraphJson,\"LevelOfGrouping\":_vm.LevelOfGrouping,\"getchangedinlist\":_vm.getchangedinlist}}):_vm._e(),(_vm.showcalculatedUI)?_c('CalculatedUI',{ref:\"Calculated\",attrs:{\"customreportparameters\":_vm.customreportparameters,\"Columnlist\":_vm.Columnlist,\"ExpFieldDataArray\":_vm.ExpFieldDataArray,\"editexpressionvalue\":_vm.editexpressionvalue,\"ExpDataArray\":_vm.ExpDataArray,\"AlreadyExistExpression\":_vm.AlreadyExistExpression},on:{\"close\":function($event){_vm.showcalculatedUI = false},\"VerifiedExpressionData\":_vm.VerifiedExpressionColumnValue}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('a',{staticClass:\"tab-Search-btn\"},[_c('em',{staticClass:\"fa fa-search\",attrs:{\"aria-hidden\":\"true\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"expand_all_filters\",staticStyle:{\"position\":\"absolute\",\"left\":\"0\"}},[_c('span',[_c('a',{staticClass:\"collapsed\",attrs:{\"title\":\"Expand\",\"data-toggle-tooltip\":\"tooltip\"}},[_c('em',{staticClass:\"fa fa-angle-double-right mt-1\",attrs:{\"aria-hidden\":\"true\"}})])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"tab-pane\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-em-groups\"}},[_c('div',{staticClass:\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\"},[_c('div',{staticClass:\"listing\"},[_c('div',{staticClass:\"table-responsive\"})])])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"right-content datareport hr_jobpost\"},[_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"theme-primary partition p-actions-expand overflow-visible\"},[_c('loader',{attrs:{\"isVisible\":_vm.isLoading}}),_c('span',{staticClass:\"p-name text-white\"},[_vm._v(_vm._s(_vm.$t('ReportPreview')))]),_c('span',{staticClass:\"p-actions float-right mydbsize\"},[_c('a',{class:_vm.Columnlist.length > 0 ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash disabled',attrs:{\"data-original-title\":\"REPORT PREVIEW\"},on:{\"click\":_vm.PreviewReport}},[_c('em',{staticClass:\"fa fa-play\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ReportPreview'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"RESET\"},on:{\"click\":_vm.ResetData}},[_c('em',{staticClass:\"fa fa-repeat\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Reset'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"PDF\"},on:{\"click\":_vm.ExportToPDF}},[_c('em',{staticClass:\"fa fa-file-pdf-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToPdf'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"Excel\"},on:{\"click\":_vm.ExportToExcel}},[_c('em',{staticClass:\"fa fa-file-excel-o\"}),_c('br'),_vm._v(_vm._s(_vm.$t('ExportToExcel'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"SORT\"},on:{\"click\":_vm.OpenSortingPopup}},[_c('em',{staticClass:\"fa fa-sort-amount-asc\"}),_c('br'),_vm._v(_vm._s(_vm.$t('SORT'))+\" \")]),_c('a',{staticClass:\"p-action-btn text-white dash\",attrs:{\"data-original-title\":\"GRAPH\"},on:{\"click\":_vm.OpenGraph}},[_c('em',{staticClass:\"fa fa-pie-chart\"}),_c('br'),_vm._v(_vm._s(_vm.$t('Graph'))+\" \")]),_c('div',{staticClass:\"parentdiv datarepfix2\"},[_c('div',{staticClass:\"verticle-action lft75 rt30\"},[_c('span',{staticClass:\"action-list-box small\",staticStyle:{\"width\":\"400px\"}},[(_vm.isSortPopup)?_c('span',{staticClass:\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\",attrs:{\"id\":\"action-list1\"}},[_c('div',{staticClass:\"float-left col-12\"},[_c('div',{staticClass:\"container-fluid p-0 mb-3\"}),_vm._l((_vm.sortColummnarray),function(input,index){return _c('div',{key:`phoneInput-${index}`,staticClass:\"row px-3 pb-0\"},[_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('SortBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.sortcolummnId),expression:\"input.sortcolummnId\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"sortcolummnId\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"\",\"selected\":\"\",\"disabled\":\"\"}},[_vm._v(\"Select Field\")]),_vm._l((_vm.Columnlist.filter(x => x.Calculated_Field == false)),function(item){return _c('option',{key:item.CustomFieldId,attrs:{\"disabled\":(_vm.sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0},domProps:{\"value\":item.CustomFieldId}},[_vm._v(\" \"+_vm._s(item.DisplayName ? _vm.GetLocalizedValue(item.DisplayName) : _vm.GetLocalizedValue(item.FieldName))+\" \")])})],2)])]),_c('div',{staticClass:\"col-lg-5 pl-0 pr-3\"},[_c('div',{staticClass:\"form-group\"},[_c('label',[_vm._v(_vm._s(_vm.$t('OrderBy')))]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(input.columnOrders),expression:\"input.columnOrders\"}],staticClass:\"form-control\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(input, \"columnOrders\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"\",\"selected\":\"\",\"disabled\":\"\"}},[_vm._v(\"Select Order\")]),_c('option',[_vm._v(_vm._s(_vm.$t('ASC')))]),_c('option',[_vm._v(_vm._s(_vm.$t('DESC')))])])])]),_c('div',{staticClass:\"col-lg-2\"},[_c('div',{staticClass:\"form-group\"},[_c('a',{on:{\"click\":function($event){return _vm.AddSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-plus-circle font-24 text-success mt-3\"})]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.sortColummnarray[0].sortcolummnId != '' || _vm.isValueExistInSort),expression:\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"}],on:{\"click\":function($event){return _vm.RemoveSortingForm(input)}}},[_c('em',{staticClass:\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"})])])])])})],2),_vm._m(0),_c('button',{staticClass:\"close closebtnsmall\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})])]):_vm._e()])])])]),_vm._m(1)],1)]),_c('div',{staticClass:\"col-md-12 p-0 mb-2\"},[_c('div',{staticClass:\"tab-pane mb-0\"},[_c('div',{staticClass:\"tab-content fsmtabcontrolMobileView\",attrs:{\"id\":\"myTabContent\"}},[_vm._m(2),(_vm.showGraphOptions)?_c('div',{staticClass:\"card mb-3 probx\"},[_c('div',{staticClass:\"card-header\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('Graph')))]),_c('a',{staticClass:\"btn btn-primary\",on:{\"click\":_vm.OpenGraphOptions}},[_vm._v(_vm._s(_vm.$t('GraphOptions'))+\" \"),_c('em',{staticClass:\"fa fa-cogs\"})])]),(_vm.showChart)?_c('div',{staticClass:\"card-body\",staticStyle:{\"min-height\":\"245px\"},attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"text-center text-danger\",on:{\"click\":function($event){return _vm.ResetGraphData()}}},[_c('span',{staticClass:\"fa fa-trash-o text-danger\",staticStyle:{\"font-size\":\"25px\"}})])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center p-0\"},[_c('div',{staticClass:\"border bg-light float-left text-left p-0 graphinfo_base_lft\"},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"X-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.XAxisField))))]),_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.YAxisField))))]),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.aggregateFunctionResult != 0),expression:\"aggregateFunctionResult != 0\"}]},[_c('label',[_vm._v(\"# \"+_vm._s(_vm.aggregateFunctionType)+\":\")]),_vm._v(\" \"+_vm._s(_vm.aggregateFunctionResult)+\" \")])])]),(_vm.chartType == 'line' || _vm.chartType == 'bar')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e(),(_vm.chartType == 'pie' || _vm.chartType == 'donut')?_c('div',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('VueApexCharts',{ref:\"chart\",attrs:{\"type\":_vm.chartType,\"height\":\"auto\",\"options\":_vm.chartOptions,\"series\":_vm.chartSeries}})],1):_vm._e()])])]):_vm._e(),(_vm.isChartColor)?_c('div',{staticClass:\"card-body\",staticStyle:{\"min-height\":\"245px\"},attrs:{\"id\":\"Reportpdf\"}},[_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"text-center text-danger\",on:{\"click\":function($event){return _vm.ResetGraphData()}}},[_c('span',{staticClass:\"fa fa-trash-o text-danger\",staticStyle:{\"font-size\":\"25px\"}})])]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12 col-lg-12 text-center p-0\"},[_c('div',{staticClass:\"border bg-light float-left text-left p-0 graphinfo_base_lft\"},[_c('ul',{staticClass:\"graphinfo\"},[_c('li',[_c('label',[_vm._v(\"Y-axis:\")]),_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(_vm.FilterCustomFieldName(_vm.YAxisField))))]),_c('li',[_c('label',[_vm._v(\"Color-code:\")]),_vm._v(_vm._s(_vm.GetChartColorCode))])])]),_c('span',{staticClass:\"p-0 m-0 float-left graphinfo_base_rgt\"},[_c('div',{staticClass:\"col-sm-4 col-lg-4 px-0 bg-white mx-auto shadowder\",staticStyle:{\"min-height\":\"200px\",\"padding-top\":\"75px\"}},[_c('span',{staticClass:\"ChartNumberClass\"},[_c('h1',{style:('color:' + _vm.GetChartColorCode)},[_vm._v(_vm._s(_vm.GetChartColorData))])])])])])])]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"tab-pane p-0 pb-2 border-0 active\",attrs:{\"role\":\"tabpanel\",\"id\":\"tab-detail-content\",\"aria-labelledby\":\"tab-detail-content\"}},[_c('div',{staticClass:\"listing mt-3\"},[_c('div',{staticClass:\"table-responsive table-fix-header\"},[_c('table',{staticClass:\"table table-bordered mt-0\",staticStyle:{\"width\":\"100%\"},attrs:{\"id\":\"Reportpdf\",\"aria-label\":\"Report Preview Listing\"}},[_c('thead',{staticClass:\"thead-bg\"},[_c('tr',[_vm._l((_vm.previewgroupdata),function(item,index){return (_vm.showdata)?_c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ? item.DisplayName : item.FieldName)))]):_vm._e()}),_vm._l((_vm.previewcolumn),function(column,index){return _c('th',{key:index,attrs:{\"scope\":\"col\"}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((column.DisplayName != null && column.DisplayName != '') ? column.DisplayName : column.FieldName))+_vm._s(column.ExpresssionFieldName)+\" \")])})],2)]),(_vm.noRecord)?_c('tbody',[_c('tr',{staticStyle:{\"cursor\":\"initial\"}},[_c('td',{attrs:{\"colspan\":\"4\"}},[_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))])])])]):_vm._e(),_vm._l((_vm.previewdata),function(item,index){return _c('tbody',[_vm._l((_vm.previewdata[index].data),function(sitem,sindex){return (_vm.showdata)?_c('tr',[(sindex == 0)?_vm._l((_vm.previewgroupdata),function(gitem,gindex){return _c('td',{staticClass:\"breakspaces\",class:{ 'onlyrtbod': true, '': item.totalRecord == null },attrs:{\"rowspan\":item.totalRecord}},[_vm._v(\" \"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ? gitem.DateFormat == null && gitem.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(item[gitem.DisplayName]) : item[gitem.DisplayName] : gitem.DateFormat == null && gitem.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(item[gitem.FieldName]) : item[gitem.FieldName])+\" \"),_vm._v(\" (\"+_vm._s((item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' || gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord : '-')+\") \")])}):_vm._e(),_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{staticClass:\"breakspaces\",domProps:{\"innerHTML\":_vm._s((sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\n                                                    (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\n                                                    == true ? 'YES' : 'NO') ||\n                                                    (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\n                                                    (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? column.DateFormat == null && column.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(sitem[column.DisplayName]) : sitem[column.DisplayName] : '') :\n                                                    (sitem[column.FieldName] || sitem[column.FieldName] == 0 ? column.DateFormat == null && column.ColumnFieldDataCode == 'date' ? _vm.$options.filters.formatDate(sitem[column.FieldName]) : sitem[column.FieldName] : ''))}})])})],2):_vm._e()}),(_vm.showcoldata)?_c('tr',_vm._l((_vm.previewcolumn),function(column,i){return _c('td',{key:i},[_c('span',{staticClass:\"breakspaces\",domProps:{\"innerHTML\":_vm._s((item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\n                                                    (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName] == true ? 'YES' : 'NO') ||\n                                                    (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\n                                                    (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\n                                                    (item[column.FieldName] || item[column.FieldName] == 0 ?  item[column.FieldName] : ''))}}),_vm._v(\" \"+_vm._s(item[column.ExpresssionFieldName])+\" \")])}),0):_vm._e()],2)})],2)])])]),_c('div',{staticClass:\"float-right\"},[_c('a',{staticClass:\"btn btn-success my-2 my-sm-0 mr-2\",on:{\"click\":function($event){return _vm.SaveAllReport()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-floppy-o\"}),_vm._v(\" \"+_vm._s(_vm.$t('Save'))+\" \")]),_c('a',{staticClass:\"btn btn-danger\",on:{\"click\":function($event){return _vm.CancelAll()}}},[_vm._v(\"  \"),_c('span',{staticClass:\"fa fa-times\"}),_vm._v(\" \"+_vm._s(_vm.$t('Cancel'))+\" \")])])])])])]),_c('modalGraphOptions',{ref:\"modalGraph\",attrs:{\"Columnlist\":_vm.Columnlist,\"showGraphOptions\":_vm.showGraphOptions,\"customreportparameters\":_vm.customreportparameters,\"GraphData\":_vm.GraphData,\"sortColummnarray\":_vm.sortColummnarray,\"GraphJson\":_vm.GraphJson,\"getchangedinlist\":_vm.getchangedinlist}})],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"va_lft25 top4\"},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-secondary\",staticStyle:{\"font-size\":\"20pt\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('span',{staticClass:\"collapse-head-btns\"},[_c('a',{staticClass:\"collapse-btns\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-angle-up text-white\"})])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"expand-list\"},[_c('a',{staticClass:\"expand-list-btn justify-content-center align-items-center\",attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"icon-solid arrow-solid-left text-white\",staticStyle:{\"font-size\":\"9pt\"}})])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups right fade\",attrs:{\"id\":\"CustomGraphOptions\",\"role\":\"dialog\",\"data-backdrop\":\"static\",\"data-keyboard\":\"false\"}},[_c('div',{staticClass:\"modal-dialog mw-1100\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.CloseGraphOptions()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t(\"GraphSetting\")))]),_c('span',{staticClass:\"user-guide\"},[_c('a',{staticClass:\"ancuserguide\",attrs:{\"data-toggle\":\"collapse\",\"href\":\"javascript:;\",\"role\":\"button\",\"aria-expanded\":\"false\",\"aria-controls\":\"collapseExample\"}},[_vm._v(_vm._s(_vm.$t(\"GuideForUser\")))]),_c('div',{staticClass:\"divancuserguide collapse overflow-auto\",attrs:{\"id\":\"collapseReplyUG\"}},[_c('div',{staticClass:\"custom-scrollbar-js\",attrs:{\"id\":\"scrollbarreplyuserguideMangeView\"}},[_c('div',{staticClass:\"con\",domProps:{\"innerHTML\":_vm._s(_vm.$t('User_Guide_Graph_Option'))}})])])])]),_c('div',{staticClass:\"modal-body p-3\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('div',{staticClass:\"container-fluid tab-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-6\"},[_c('dynamic-form',{ref:\"refGraphForm\",attrs:{\"lang\":\"en\",\"buttons\":false,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":_vm.onSubmit},scopedSlots:_vm._u([{key:\"tgslot-chartlist\",fn:function({ data }){return [_c('div',{staticClass:\"user_type_choice coloredicons row\"},_vm._l((_vm.chartTypes),function(item,index){return _c('div',{key:index,staticClass:\"btn-group btn-group-toggle mb-2\",attrs:{\"data-toggle\":\"buttons\"}},[_c('label',{class:{ 'btn btn_cstm': true, 'active': (item.id == _vm.selectedChartTypeID) },attrs:{\"for\":'cls_usertype' + index,\"title\":_vm.$t(item.chart_Type)}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedChartTypeID),expression:\"selectedChartTypeID\"}],attrs:{\"type\":\"radio\",\"name\":\"cls_usertype\",\"id\":'cls_usertype' + index},domProps:{\"value\":item.id,\"checked\":_vm._q(_vm.selectedChartTypeID,item.id)},on:{\"change\":[function($event){_vm.selectedChartTypeID=item.id},_vm.onChangeChart]}}),_c('span',{staticClass:\"d-block pb-2\"},[_c('em',{class:[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\n                                                    item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\n                                                    item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '',\n                                                    item.chart_Type == 'Numbers_Chart' ? 'fa fa-sort-numeric-asc bg-transparent' : ''],attrs:{\"aria-hidden\":\"true\"}})])])])}),0),(data.error != '')?_c('span',{staticClass:\"invalid-feedback d-block\"},[_vm._v(_vm._s(data.error))]):_vm._e()]}}])})],1),_c('div',{staticClass:\"col-md-6\"},[_c('div',{staticClass:\"p-3 bg-light border float-left w-100\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',[_vm._v(_vm._s(_vm.$t('Preview')))])])]),_c('span',{staticClass:\"text-center my-3 w-100 float-left\"},[_vm._v(_vm._s(_vm.FormSchema[0].Data[0].value)+\" - \"),_c('button',{staticClass:\"btn btn-info mt-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ViewReportGraph}},[_vm._v(\" \"+_vm._s(_vm.$t('ViewReport'))+\" \")])]),(_vm.PreviewChart)?_c('div',{staticClass:\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\",staticStyle:{\"min-height\":\"260px\"}},[_c('VueApexCharts',{attrs:{\"type\":_vm.selectedChartType,\"options\":_vm.chartOptions,\"series\":_vm.chartseries}}),(_vm.aggregateFunctionResult != 0)?_c('div',{class:_vm.selectedChartType == 'pie' || _vm.selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'},[_c('a',{attrs:{\"href\":\"javascript:;\"}},[_vm._v(_vm._s(_vm.resultMsg)+\" : \"+_vm._s(_vm.aggregateFunctionResult))])]):_vm._e()],1):_c('div',{staticClass:\"col-sm-12 col-lg-12 px-0 float-left bg-white shadowder\",staticStyle:{\"min-height\":\"260px\",\"padding-top\":\"100px\"}},[_c('span',{staticClass:\"ChartNumberClass\"},[_c('h1',{style:('color:' + _vm.GetNumberChartStyle)},[_vm._v(_vm._s(_vm.NumberChartValue))])])])])])]),_c('div',{staticClass:\"col-12 p-0 mt-3 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-lg-6 text-right\"},[_c('button',{staticClass:\"btn btn-success ancsaveuserticket\",on:{\"click\":_vm.ApplyGraph}},[_c('em',{staticClass:\"fa fa-share pr-2\"}),_vm._v(_vm._s(_vm.$t('Apply')))])])])])])],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div id=\"CustomGraphOptions\" role=\"dialog\" class=\"modal my-popups right fade\" data-backdrop=\"static\"\r\n        data-keyboard=\"false\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog mw-1100\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"CloseGraphOptions()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t(\"GraphSetting\") }}</h4>\r\n                    <span class=\"user-guide\">\r\n                        <a class=\"ancuserguide\" data-toggle=\"collapse\" href=\"javascript:;\" role=\"button\"\r\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">{{ $t(\"GuideForUser\") }}</a>\r\n                        <div id=\"collapseReplyUG\" class=\"divancuserguide collapse overflow-auto\">\r\n                            <div id=\"scrollbarreplyuserguideMangeView\" class=\"custom-scrollbar-js\">\r\n                                <div class=\"con\" v-html=\"$t('User_Guide_Graph_Option')\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </span>\r\n                </div>\r\n                <div class=\"modal-body p-3\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <div class=\"container-fluid tab-content\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <dynamic-form lang=\"en\" ref=\"refGraphForm\" :buttons=\"false\" :schema=\"FormSchema\"\r\n                                    v-on:OnSubmit=\"onSubmit\">\r\n                                    <template v-slot:tgslot-chartlist=\"{ data }\">\r\n                                        <div class=\"user_type_choice coloredicons row\">\r\n                                            <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                <label\r\n                                                    v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                    v-bind:for=\"'cls_usertype' + index\" :title=\"$t(item.chart_Type)\">\r\n                                                    <input type=\"radio\" v-bind:value=\"item.id\" name=\"cls_usertype\"\r\n                                                        v-bind:id=\"'cls_usertype' + index\" v-model=\"selectedChartTypeID\" v-on:change=\"onChangeChart\"/>\r\n                                                    <span class=\"d-block pb-2\">\r\n                                                        <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                        item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                        item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '',\r\n                                                        item.chart_Type == 'Numbers_Chart' ? 'fa fa-sort-numeric-asc bg-transparent' : '']\"\r\n                                                            aria-hidden=\"true\"></em>\r\n                                                    </span>\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <span class=\"invalid-feedback d-block\" v-if=\"data.error != ''\">{{ data.error }}</span>\r\n                                    </template>\r\n                                </dynamic-form>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <div class=\"p-3 bg-light border float-left w-100\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ FormSchema[0].Data[0].value }} -\r\n                                        <button href=\"javascript:;\" class=\"btn btn-info mt-2\" v-on:click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\" style=\"min-height: 260px;\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"javascript:;\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div v-else class=\"col-sm-12 col-lg-12 px-0 float-left bg-white shadowder\"  style=\"min-height: 260px; padding-top: 100px;\">\r\n                                        <span class=\"ChartNumberClass\">\r\n                                            <h1 :style=\"'color:' + GetNumberChartStyle\">{{ NumberChartValue }}</h1>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        </div> -->\r\n                            <!-- <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                </div>\r\n                                <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                    <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                        {{ $t('ViewReport') }}\r\n                                    </button>\r\n                                </span>\r\n                                <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                    <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\" :series=\"chartseries\">\r\n                                    </VueApexCharts>\r\n                                    <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                        v-if=\"aggregateFunctionResult != 0\">\r\n                                        <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n\r\n                        </div>\r\n\r\n\r\n                        <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-sm-12 col-lg-6 float-left leftsideicon pl-0 py-3 border\">\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ReportTitle') }} :</label>\r\n                                            <input v-model=\"reportTitle\" placeholder=\"Report Title\" class=\"form-control\"\r\n                                                type=\"text\" maxlength=\"50\" disabled />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"ChartTypes\" :rules=\"{ 'required': true }\" label=\"Chart Type\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('ChartTypes') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"user_type_choice coloredicons row\"\r\n                                                    v-bind:class=\"{ '': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartTypeID }\">\r\n                                                    <div class=\"btn-group btn-group-toggle mb-2\" data-toggle=\"buttons\"\r\n                                                        v-for=\"(item, index) in chartTypes\" :key=\"index\">\r\n                                                        <label\r\n                                                            v-bind:class=\"{ 'btn btn_cstm': true, 'active': (item.id == selectedChartTypeID) }\"\r\n                                                            v-bind:for=\"'cls_usertype' + index\">\r\n                                                            <input v-bind=\"field\" type=\"radio\" v-bind:value=\"item.id\"\r\n                                                                name=\"cls_usertype\" v-bind:id=\"'cls_usertype' + index\"\r\n                                                                v-model=\"selectedChartTypeID\" />\r\n                                                            <span class=\"d-block pb-2\">\r\n                                                                <em :class=\"[item.chart_Type == 'Pie' ? 'fa fa-pie-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Bar' ? 'fa fa-bar-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Line' ? 'fa fa-line-chart bg-transparent' : '',\r\n                                                                item.chart_Type == 'Horizontal_Bar' ? 'fa fa-bars bg-transparent' : '',\r\n                                                                item.chart_Type == 'Donut' ? 'fa fa-circle-o-notch bg-transparent' : '']\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                            </span>\r\n                                                        </label>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                                <span name=\"ChartTypes\" v-if=\"meta.touched && !meta.valid\"\r\n                                                    class=\"invalid-feedback\">\r\n                                                    {{ errorMessage }}\r\n                                                </span>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <Field name=\"selectedChartXAxis\" :rules=\"{ 'required': true }\"\r\n                                                v-model=\"selectedChartXAxis\" label=\"X Axis\"\r\n                                                v-slot=\"{ field, errorMessage, meta }\">\r\n                                                <label>{{ $t('XAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                                <div class=\"input-group\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldTypeX(selectedChartXAxis)\"\r\n                                                        v-bind:class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartXAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option v-for=\"item in Columnlist\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartXAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">{{\r\n                                                            errorMessage\r\n                                                        }}</span>\r\n                                                </div>\r\n                                            </Field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('YAXIS') }}<span class=\"text-danger\">*</span></label>\r\n                                            <div class=\"input-group\">\r\n                                                <Field name=\"selectedChartYAxis\" :rules=\"{ 'required': true }\"\r\n                                                    v-model=\"selectedChartYAxis\" label=\"Y Axis\"\r\n                                                    v-slot=\"{ field, errorMessage, meta }\">\r\n                                                    <select v-bind=\"field\" @change=\"CheckFieldType(selectedChartYAxis)\"\r\n                                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid && !selectedChartYAxis }\">\r\n                                                        <option value=\"\" disabled>Select</option>\r\n                                                        <option\r\n                                                            v-for=\"item in Columnlist.filter(x => x.CustomFieldId != selectedChartXAxis)\"\r\n                                                            :value=\"item.CustomFieldId != '' ? item.CustomFieldId : item.FieldName\"\r\n                                                            :key=\"item.CustomFieldId\">\r\n                                                            {{ GetLocalizedValue((item.DisplayName != null &&\r\n                                                                item.DisplayName != '') ?\r\n                                                                item.DisplayName : item.FieldName) }}\r\n                                                        </option>\r\n                                                    </select>\r\n                                                    <span name=\"selectedChartYAxis\" v-if=\"meta.touched && !meta.valid\"\r\n                                                        class=\"invalid-feedback\">\r\n                                                        {{ errorMessage }}\r\n                                                    </span>\r\n                                                </Field>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>{{ $t('ViewAs') }}:</label>\r\n                                            <div v-if=\"isTypeInteger\" class=\"input-group\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Sum\" type=\"radio\"\r\n                                                    class=\"mr-2\" />{{ $t('Sum') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Avg\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Average') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Min\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Min') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Max\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Max') }}\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" type=\"radio\"\r\n                                                    class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                            <div class=\"input-group\" v-if=\"!isTypeInteger\">\r\n                                                <input name=\"sum\" v-model=\"aggregateFunctionType\" value=\"Count\" checked\r\n                                                    type=\"radio\" class=\"mr-2 ml-3\" />{{ $t('Count') }}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-lg-6 p-3 bg-light border\">\r\n                                    <div class=\"heading-border\">\r\n                                        <h5 class=\"h5\"><span>{{ $t('Preview') }}</span></h5>\r\n                                    </div>\r\n                                    <span class=\"text-center my-3 w-100 float-left\">{{ reportTitle }} -\r\n                                        <button href=\"#\" class=\"btn btn-info\" @click=\"ViewReportGraph\">\r\n                                            {{ $t('ViewReport') }}\r\n                                        </button>\r\n                                    </span>\r\n                                    <div v-if=\"PreviewChart\" class=\"col-sm-12 col-lg-12 px-0 py-4 float-left bg-white\">\r\n                                        <VueApexCharts :type=\"selectedChartType\" :options=\"chartOptions\"\r\n                                            :series=\"chartseries\">\r\n                                        </VueApexCharts>\r\n                                        <div :class=\"selectedChartType == 'pie' || selectedChartType == 'donut' ? 'text-left pl-4 ml-4' : 'text-center'\"\r\n                                            v-if=\"aggregateFunctionResult != 0\">\r\n                                            <a href=\"#\">{{ resultMsg }} : {{ aggregateFunctionResult }}</a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"col-12 p-0 mt-3 float-left\">\r\n                                <div class=\"row flex-row-reverse\">\r\n                                    <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                            <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form> -->\r\n                        <div class=\"col-12 p-0 mt-3 float-left\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                    <button class=\"btn btn-success ancsaveuserticket\" @click=\"ApplyGraph\">\r\n                                        <em class=\"fa fa-share pr-2\"></em>{{ $t('Apply') }}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport GraphServices from \"@/services/DataService\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nexport default {\r\n    components: {\r\n        VueApexCharts\r\n    },\r\n    props: {\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Array\r\n        },\r\n        sortColummnarray: {\r\n            type: Array\r\n        },\r\n        getchangedinlist:{\r\n            type:Number\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            reportTitle: '',\r\n            chartTypes: null,\r\n            // isTypeInteger: false,\r\n            // Selected Chart Properties\r\n            selectedChartTypeID: null,\r\n            selectedChartXAxis: \"\",\r\n            selectedChartYAxis: \"\",\r\n            PreviewChart: false,\r\n            aggregateFunctionType: \"Count\",\r\n            aggregateFunctionResult: 0,\r\n            //Chart Properties\r\n            chartseries: [],\r\n            chartOptions: {},\r\n            colourList: ['#8892d0', '#da9c49', '#94c5a3', '#e67d21', '#787878', '#c59e71', '#38b8df', '#f55e1a', '#207a92', '#13599c'],\r\n            // Properties for Binding the Chart Valus\r\n            chartOptionXAxisData: [],\r\n            chartSeriesData: [],\r\n            selectedChartType: \"\",\r\n            resultMsg: \"\",\r\n            GroupingGraphData: [],\r\n            BindGraph: false,\r\n            isChartData: false,\r\n            graphParams: {},\r\n            NumberChartValue:'',\r\n            GetNumberChartStyle:'',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('ReportTitle'),\r\n                            name: \"ReportTitle\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter ReportTitle\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                            disabled: true,\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: this.$t('ChartTypes'),\r\n                            name: \"chartlist\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('XAXIS'),\r\n                            name: \"XAXIS\",\r\n                            value: \"\",\r\n                            placeholder: \"Please Select X Axis\",\r\n                            visibility:true,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"SelectField\",\r\n                            label: this.$t('YAXIS'),\r\n                            name: \"YAXIS\",\r\n                            value: '',\r\n                            placeholder: \"\",\r\n                            //visibility:true,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeXYAxisDropdown\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"ColorField\",\r\n                            label: this.$t('SelectColor'),\r\n                            name: \"SelectColor\",\r\n                            value: \"\",\r\n                            visibility:false,\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"required\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            visibility: false,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Sum\",\r\n                                    name: \"Sum\"\r\n                                },\r\n                                {\r\n                                    value: \"Avg\",\r\n                                    name: \"Average\"\r\n                                },\r\n                                {\r\n                                    value: \"Min\",\r\n                                    name: \"Min\"\r\n                                }, {\r\n                                    value: \"Max\",\r\n                                    name: \"Max\"\r\n                                }, {\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false,\r\n                                onChange: this.GetRadioValue\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                        {\r\n                            astype: \"RadioField\",\r\n                            label: this.$t('ViewAs'),\r\n                            name: \"ViewAs\",\r\n                            value: \"Count\",\r\n                            placeholder: \"\",\r\n                            visibility: true,\r\n                            config: {\r\n                                options: [{\r\n                                    value: \"Count\",\r\n                                    name: \"Count\"\r\n                                }],\r\n                                showAddIcon: false\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        await vm.GetChartTypes();\r\n        vm.GetColumnList();\r\n        vm.FormSchema[0].Data[0].value = vm.customreportparameters.ReportName;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.selectedChartTypeID = vm.GraphData[0].chartTypeID;\r\n            vm.aggregateFunctionType = vm.GraphData[0].AggregateFuncField;\r\n            if(vm.GraphData[0].ChartColorCode != ''){\r\n                vm.selectedChartXAxis = '';\r\n                vm.FormSchema[0].Data[2].value = '';\r\n                vm.FormSchema[0].Data[2].visibility = false;\r\n                vm.FormSchema[0].Data[4].visibility = true;\r\n            }else{\r\n                vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n                vm.FormSchema[0].Data[2].value = vm.GraphData[0].XAxisField;\r\n                vm.FormSchema[0].Data[2].visibility = true;\r\n                vm.FormSchema[0].Data[4].visibility = false;\r\n            }\r\n            vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n            vm.FormSchema[0].Data[3].value = vm.GraphData[0].YAxisField;\r\n            vm.FormSchema[0].Data[4].value = vm.GraphData[0].ChartColorCode;\r\n            await vm.CheckFieldType(vm.selectedChartYAxis);\r\n            //await vm.ViewReportGraph();\r\n            await vm.ApplyGraph();\r\n        }\r\n    },\r\n    watch:{\r\n        Columnlist(){\r\n            var vm = this;\r\n            vm.GetColumnList();\r\n        },\r\n        getchangedinlist(newval, oldval){\r\n            if(newval != oldval){\r\n                var vm = this;\r\n                vm.GetColumnList();\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        onChangeChart(){\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[4].value = '';\r\n            vm.NumberChartValue = '';\r\n            vm.GetNumberChartStyle = '';\r\n            if(vm.selectedChartTypeID == 11){\r\n                vm.selectedChartXAxis = '';\r\n                vm.FormSchema[0].Data[2].value = '';\r\n                vm.FormSchema[0].Data[3].config.options = [];\r\n                vm.Columnlist.forEach(item => {\r\n                    if (item.CustomFieldId != vm.selectedChartXAxis) {\r\n                        vm.FormSchema[0].Data[3].config.options.push({\r\n                            value: item.CustomFieldId,\r\n                            name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                        })\r\n                    }\r\n                })\r\n                vm.$refs.refGraphForm.UpdateKeyValue();\r\n                vm.FormSchema[0].Data[2].visibility = false;\r\n                vm.FormSchema[0].Data[4].visibility = true;\r\n            }\r\n            else{\r\n                vm.FormSchema[0].Data[2].visibility = true;\r\n                vm.FormSchema[0].Data[4].visibility = false;\r\n            }\r\n        },\r\n        //Close Graph Options Model\r\n        CloseGraphOptions: function () {\r\n            var vm = this;\r\n            $(\"#CustomGraphOptions\").modal(\"hide\");\r\n            $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            if(vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && vm.graphParams.selectedChartYAxis != ''){\r\n                if(vm.graphParams.ChartColorCode != ''){\r\n                    vm.$parent.isChartColor = true;\r\n                }else if (vm.graphParams.selectedChartXAxis != ''){\r\n                vm.$parent.showChart = true;}\r\n            }\r\n            // vm.ApplyGraph();\r\n        },\r\n\r\n        // Get all Chart types\r\n        async GetChartTypes() {\r\n            var vm = this;\r\n            await GraphServices.GetChartTypes().then((response) => {\r\n                vm.chartTypes = response.data;\r\n            })\r\n        },\r\n\r\n        // Fill Values in Dropdowns\r\n        GetColumnList() {\r\n            var vm = this;\r\n            vm.FormSchema[0].Data[2].config.options = [];\r\n            vm.FormSchema[0].Data[3].config.options = [];\r\n            vm.Columnlist.filter(x=> x.Calculated_Field == false).forEach(item => {\r\n                vm.FormSchema[0].Data[2].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != null ? vm.$t(item.DisplayName) : vm.$t(item.FieldName)\r\n                })\r\n                vm.FormSchema[0].Data[3].config.options.push({\r\n                    value: item.CustomFieldId,\r\n                    name: item.DisplayName != null ? vm.$t(item.DisplayName) : vm.$t(item.FieldName)\r\n                })\r\n            })\r\n            vm.$refs.refGraphForm.UpdateKeyValue();\r\n        },\r\n\r\n        // On change X and Y Axis\r\n        onChangeXYAxisDropdown(x, data) {\r\n            var vm = this;\r\n            if (data.name == \"XAXIS\") {\r\n                vm.selectedChartXAxis = data.value;\r\n                vm.FormSchema[0].Data[3].config.options = [];\r\n                vm.Columnlist.forEach(item => {\r\n                    if (item.CustomFieldId != vm.selectedChartXAxis) {\r\n                        vm.FormSchema[0].Data[3].config.options.push({\r\n                            value: item.CustomFieldId,\r\n                            name: item.DisplayName != '' ? vm.$t(item.DisplayName) : vm.$(item.FieldName)\r\n                        })\r\n                    }\r\n                    if(vm.selectedChartXAxis === vm.selectedChartYAxis){\r\n                        vm.selectedChartYAxis = '';\r\n                        vm.FormSchema[0].Data[3].value = '';\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                vm.selectedChartYAxis = data.value;\r\n                vm.CheckFieldType(vm.selectedChartYAxis)\r\n            }\r\n        },\r\n\r\n        // Get Radio Selected Value \r\n        GetRadioValue(x, data) {\r\n            var vm = this;\r\n            vm.aggregateFunctionType = x.target.dataset.value;\r\n        },\r\n        // Reset Graph properties when click on reset button \r\n        ResetGraph() {\r\n            var vm = this;\r\n            vm.selectedChartXAxis = \"\";\r\n            vm.selectedChartYAxis = \"\";\r\n            vm.NumberChartValue = \"\";\r\n            vm.GetNumberChartStyle = \"\";\r\n            // vm.$refs.form.setFieldTouched('selectedChartXAxis', false)\r\n            // vm.$refs.form.setFieldTouched('selectedChartYAxis', false)\r\n            vm.chartseries = [];\r\n            vm.chartOptions = {};\r\n            vm.selectedChartTypeID = null;\r\n            vm.selectedChartType = \"\";\r\n            vm.aggregateFunctionResult = 0;\r\n            vm.aggregateFunctionType = \"Count\";\r\n            vm.resultMsg = \"\";\r\n            vm.graphParams = {};\r\n            vm.FormSchema[0].Data[2].value = '';\r\n            vm.FormSchema[0].Data[3].value = '';\r\n            vm.FormSchema[0].Data[4].value = '';\r\n            vm.FormSchema[0].Data[5].value = 'Count';\r\n            vm.FormSchema[0].Data[6].value = 'Count';\r\n            vm.FormSchema[0].Data[2].visibility = true;\r\n            vm.FormSchema[0].Data[4].visibility = false;\r\n            vm.FormSchema[0].Data[5].visibility = false;\r\n            vm.FormSchema[0].Data[6].visibility = true;\r\n            vm.$refs.refGraphForm.validateForm.reset();\r\n            vm.PreviewChart = false;\r\n        },\r\n\r\n        // View Graph when click on View Report\r\n        async ViewReportGraph() {\r\n            var vm = this;\r\n            vm.resultMsg = vm.aggregateFunctionType;\r\n            vm.PreviewChart = false;\r\n            vm.BindGraph = true;\r\n            var GraphDataValue = null;\r\n                if (vm.aggregateFunctionType == null || vm.aggregateFunctionType == '' && vm.GraphData != null && vm.isChartData == false) {\r\n                    if (vm.GraphData.length > 0) {\r\n                        vm.resultMsg = vm.GraphData[0].AggregateFunction\r\n                        vm.aggregateFunctionType = vm.resultMsg\r\n                        vm.selectedChartYAxis = vm.GraphData[0].YAxisField;\r\n                        vm.selectedChartXAxis = vm.GraphData[0].XAxisField;\r\n                        vm.FormSchema[0].Data[5].value = vm.GraphData[0].AggregateFunction;\r\n                    }\r\n                }\r\n                if (vm.selectedChartTypeID != null && (vm.selectedChartXAxis != '' || vm.FormSchema[0].Data[4].value != '') && vm.selectedChartYAxis != '') {\r\n                    if (vm.aggregateFunctionType == \"\") {\r\n                        vm.aggregateFunctionType = vm.FormSchema[0].Data[5].value;\r\n                        vm.resultMsg = vm.aggregateFunctionType;\r\n                    }\r\n                    var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartXAxis || x.CustomFieldId === parseInt(vm.selectedChartXAxis));\r\n                    var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.FieldName === vm.selectedChartYAxis || x.CustomFieldId === parseInt(vm.selectedChartYAxis));\r\n                    if ((findvaluefromcolumnlistxaxis != undefined || vm.FormSchema[0].Data[4].value != '') && findvaluefromcolumnlistyaxis != undefined){\r\n                        GraphDataValue = {\r\n                        \"XAxisField\": findvaluefromcolumnlistxaxis == undefined ? '' : findvaluefromcolumnlistxaxis.CustomFieldId != '' ? findvaluefromcolumnlistxaxis.CustomFieldId : findvaluefromcolumnlistxaxis.FieldName,\r\n                        \"YAxisField\": findvaluefromcolumnlistyaxis.CustomFieldId != '' ? findvaluefromcolumnlistyaxis.CustomFieldId : findvaluefromcolumnlistyaxis.FieldName,\r\n                        \"AggregateFunctionType\": vm.aggregateFunctionType,\"ChartColorCode\": vm.FormSchema[0].Data[4].value\r\n                     }\r\n                    }\r\n                    else{\r\n                        if(findvaluefromcolumnlistxaxis == undefined && findvaluefromcolumnlistyaxis == undefined ){\r\n                            vm.selectedChartXAxis='';\r\n                            vm.FormSchema[0].Data[2].value = '';\r\n                            vm.selectedChartYAxis=''\r\n                            vm.FormSchema[0].Data[3].value = '';\r\n                        }\r\n                        else if (findvaluefromcolumnlistxaxis == undefined){\r\n                            vm.selectedChartXAxis='';\r\n                            vm.FormSchema[0].Data[2].value = '';\r\n                        }\r\n                        else{\r\n                            vm.selectedChartYAxis='';\r\n                            vm.FormSchema[0].Data[3].value = ''\r\n                        }\r\n                        vm.requiedFieldfordrawGraph();\r\n                       \r\n                    }\r\n                    if((vm.selectedChartXAxis != '' || vm.FormSchema[0].Data[4].value != '') && vm.selectedChartYAxis != '' ){\r\n                        await vm.$parent.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph, GraphDataValue);\r\n                        if(vm.GraphJson.ListingData != null){\r\n                            if(vm.FormSchema[0].Data[4].value != ''){\r\n                                vm.selectedChartType = vm.chartTypes.find(x => x.id == vm.selectedChartTypeID).chart_Type.toLowerCase();\r\n                                vm.GetNumberChartStyle = vm.FormSchema[0].Data[4].value;\r\n                                vm.NumberChartValue = vm.GraphJson.ListingData[0].GData;\r\n                                vm.chartseries = [];\r\n                                vm.chartoptions = [];\r\n                                vm.PreviewChart = false;\r\n                            }\r\n                            else if(vm.GraphJson.MetaData[0].IsGrouping) {\r\n                                vm.SetGroupingGraphData();\r\n                                vm.selectedChartType = vm.chartTypes.find(x => x.id == vm.selectedChartTypeID).chart_Type.toLowerCase();\r\n                                vm.SetGraphValues(vm.GroupingGraphData, vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName, vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName);\r\n                                vm.CalculatingAggregateFuncResult(vm.aggregateFunctionType);\r\n                                vm.DrawGraph();\r\n                                vm.PreviewChart = true;\r\n                            }\r\n                            vm.isChartData = true;\r\n                        }else{\r\n                            vm.chartseries = [];\r\n                            vm.chartOptions = {};\r\n                        }\r\n                    }\r\n                }\r\n               else {\r\n                vm.requiedFieldfordrawGraph();\r\n               }    \r\n        },\r\n        requiedFieldfordrawGraph() {\r\n            var vm = this;\r\n            if(vm.selectedChartTypeID == null && vm.selectedChartXAxis=='' && vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldsNameRequired\", [vm.$t(\"ChartTypes\") + ', ' + vm.$t(\"XAXIS\") + ' and '+  vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false;\r\n                }\r\n                else if(vm.selectedChartXAxis=='' && vm.selectedChartYAxis =='' && vm.FormSchema[0].Data[4].value == ''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"XAXIS\") + ' and '+  vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartTypeID == null){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"ChartTypes\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartXAxis=='' && vm.FormSchema[0].Data[4].value == ''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"XAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n                else if(vm.selectedChartYAxis==''){\r\n                    vm.ShowAlert(vm.$t(\"FieldNameRequired\", [vm.$t(\"YAXIS\")]), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                    return false\r\n                }\r\n        },\r\n\r\n        SetGroupingGraphData() {\r\n            var vm = this;\r\n            let ListingData = vm.GraphJson.ListingData;\r\n            let setGraphArray = [];\r\n            let XaxisField = vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName;\r\n            let yAxisField = vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName;\r\n            if (Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName && Object.keys(ListingData[0])[0] == vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName && vm.GraphData.length > 0\r\n                || XaxisField == undefined && yAxisField == undefined) {\r\n                XaxisField = Object.keys(ListingData[0])[0];\r\n                yAxisField = Object.keys(ListingData[0].data[0])[0];\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction;\r\n            }\r\n            ListingData.forEach((item, mainindex) => {\r\n                if (item[XaxisField] != undefined || XaxisField != undefined) {\r\n                    if (vm.aggregateFunctionType == \"Count\" || vm.aggregateFunctionType == \"Sum\" || vm.aggregateFunctionType == \"Avg\"\r\n                        || vm.aggregateFunctionType == \"Min\" || vm.aggregateFunctionType == \"Max\") {\r\n                        var pushitem = item[XaxisField] != undefined ? item[XaxisField] : item.data[0][XaxisField] + ` (${item.totalRecord})`;\r\n                        for (var i = 0; i <= parseInt(item.totalRecord); i++) {\r\n                            if (i == 0) {\r\n                                setGraphArray.push({\r\n                                    [XaxisField]: pushitem,\r\n                                    [yAxisField]: item.GData != null && item.GData != 0 && item.GData > item.totalRecord ? item.GData : item.totalRecord\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            vm.GroupingGraphData = setGraphArray\r\n        },\r\n        // Apply  Graph Values when click on Apply adn bind the final values of graph and pass to Reportpreview \r\n        async ApplyGraph() {\r\n            var vm = this;\r\n            this.$refs.refGraphForm.validateForm.validate().then(async function (valid) {\r\n                if (valid) {\r\n                    await vm.ViewReportGraph();\r\n                    vm.graphParams = {\r\n                        \"selectedChartType\": vm.selectedChartType,\r\n                        \"selectedChartTypeID\": vm.selectedChartTypeID,\r\n                        \"chartseries\": vm.chartseries,\r\n                        \"chartoptions\": vm.chartOptions,\r\n                        \"aggregateFunctionType\": vm.aggregateFunctionType,\r\n                        \"aggregateFunctionResult\": vm.aggregateFunctionResult,\r\n                        \"selectedChartXAxis\": vm.selectedChartXAxis,\r\n                        \"selectedChartYAxis\": vm.selectedChartYAxis,\r\n                        \"ChartColorCode\": vm.GetNumberChartStyle,\r\n                        \"CharColorData\": vm.NumberChartValue\r\n                    }\r\n                    if (vm.graphParams.selectedChartTypeID != null && vm.graphParams.selectedChartType != '' && (vm.graphParams.selectedChartXAxis != '' || vm.graphParams.ChartColorCode != '') && vm.graphParams.selectedChartYAxis != ''\r\n                    && (vm.graphParams.CharColorData == '' ? vm.chartseries != null :vm.chartseries.length > 0 || vm.graphParams.CharColorData != '')) {\r\n                        vm.$parent.DrawGraph(vm.graphParams, vm.BindGraph);\r\n                        vm.CloseGraphOptions();\r\n                    }\r\n                }\r\n            });\r\n        },\r\n\r\n        // Draw Graph\r\n        DrawGraph: function () {\r\n            var vm = this;\r\n            var isHorizontal = false;\r\n            if (vm.selectedChartType == \"bar\" || vm.selectedChartType == \"line\" || vm.selectedChartType == 'horizontal_bar') {\r\n                if (vm.selectedChartType == 'horizontal_bar') {\r\n                    vm.selectedChartType = \"bar\";\r\n                    isHorizontal = true;\r\n                }\r\n                vm.chartseries = [{\r\n                    name: vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                    data: vm.chartSeriesData\r\n                }]\r\n                vm.chartOptions = {\r\n                    chart: {\r\n                        toolbar: {\r\n                            export: {\r\n                                svg: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                png: {\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                },\r\n                                csv: {\r\n                                    headerCategory: vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                                    filename: vm.FormSchema[0].Data[0].value,\r\n                                }\r\n                            }\r\n                        },\r\n                    },\r\n                    tooltip:{\r\n                        enabled:true,\r\n                        x:{\r\n                            formatter:(val) => val\r\n                        }\r\n                    },\r\n                    xaxis: {\r\n                        categories: vm.chartOptionXAxisData,\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName),\r\n                            offsetY:0,\r\n                            offsetX:0\r\n                        },\r\n                        labels: {\r\n                            trim:true,\r\n                        },\r\n                    },\r\n                    yaxis: {\r\n                        title: {\r\n                            text: isHorizontal ? vm.$t(vm.FilterColumnlist(vm.selectedChartXAxis).CustomFieldName) : vm.$t(vm.FilterColumnlist(vm.selectedChartYAxis).CustomFieldName),\r\n                        },\r\n                        labels: {\r\n                            formatter: function (val) {\r\n                                return val.toLocaleString(\"en-US\");\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: isHorizontal ? { bar: { borderRadius: 4, horizontal: true, } } : {},\r\n                    dataLabels: {\r\n                        enabled: true,\r\n                    },\r\n\r\n                }\r\n            }\r\n            if (vm.selectedChartType == \"pie\" || vm.selectedChartType == \"donut\") {\r\n                vm.chartseries = vm.chartSeriesData;\r\n                vm.chartOptions = {\r\n                    labels: vm.chartOptionXAxisData,\r\n                    colors: vm.colourList,\r\n                    legend: {\r\n                        width: screen.availWidth - screen.availWidth * 86 /100\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        // TruncateStr: function (str, len) {\r\n        //     var convertstring = '' + str;\r\n        //     if (convertstring != null)\r\n        //         if (convertstring.length <= len) return str;\r\n        //         else return convertstring.substring(0, len) + \"..\";\r\n        // },\r\n\r\n        // Calculating  Aggregate Function Result\r\n        CalculatingAggregateFuncResult: function (functionType) {\r\n            var vm = this;\r\n            var tempval = 0;\r\n            if (functionType == \"Sum\") {\r\n                var sum = 0;\r\n                vm.chartSeriesData.forEach(item => {\r\n                    sum += parseInt(item);\r\n                });\r\n                vm.aggregateFunctionResult = sum.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Count\") {\r\n                var aggregatecount = 0;\r\n                aggregatecount = vm.chartSeriesData.length;\r\n                vm.aggregateFunctionResult = aggregatecount;\r\n            }\r\n            if (functionType == \"Avg\") {\r\n                var total = 0;\r\n                var count = 0;\r\n\r\n                vm.chartSeriesData.forEach(function (item, index) {\r\n                    total += item;\r\n                    count++;\r\n                });\r\n                tempval = total / count;\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Min\") {\r\n                tempval = Math.min.apply(Math, vm.chartSeriesData.filter(Number));\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n            if (functionType == \"Max\") {\r\n                tempval = Math.max(...vm.chartSeriesData)\r\n                vm.aggregateFunctionResult = tempval.toFixed(2);\r\n                vm.aggregateFunctionResult = parseFloat(vm.aggregateFunctionResult).toLocaleString('en-US');\r\n            }\r\n        },\r\n\r\n        // Check field type for View AS checkbox \r\n        CheckFieldType: function (CustomFieldId) {\r\n            var vm = this;\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartYAxis = '';\r\n                vm.FormSchema[0].Data[3].value = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n            vm.aggregateFunctionResult = 0;\r\n            let ColumnFieldType = vm.FilterColumnlist(CustomFieldId).ColumnFieldType;\r\n            if (ColumnFieldType == \"decimal\" || ColumnFieldType == \"int\") {\r\n                vm.FormSchema[0].Data[5].visibility = true;\r\n                vm.FormSchema[0].Data[6].visibility = false;\r\n                vm.FormSchema[0].Data[5].value = 'Count'\r\n                vm.aggregateFunctionType = ''\r\n            }\r\n            else {\r\n                vm.FormSchema[0].Data[5].visibility = false;\r\n                vm.FormSchema[0].Data[6].visibility = true;\r\n                vm.FormSchema[0].Data[6].value = 'Count'\r\n                vm.aggregateFunctionType = 'Count'\r\n            }\r\n        },\r\n        CheckFieldTypeX: function (CustomFieldId) {\r\n            var vm = this;\r\n            //vm.aggregateFunctionType = ''\r\n            if (vm.selectedChartYAxis == vm.selectedChartXAxis) {\r\n                vm.selectedChartXAxis = '';\r\n                vm.FormSchema[0].Data[2].value = '';\r\n                vm.ShowAlert(\"X and Y axis values are not same\", \"warning\")\r\n                return false;\r\n            }\r\n        },\r\n        // Filter column List baesd on CustomFieldId\r\n        FilterColumnlist(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName, ColumnFieldType;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                    ColumnFieldType = vm.Columnlist[index].ColumnFieldDataCode;\r\n                }\r\n            }\r\n            return { 'CustomFieldName': CustomFieldName, 'ColumnFieldType': ColumnFieldType }\r\n        },\r\n\r\n        // Set the Chart Xaxis and Yaxis\r\n        SetGraphValues(data, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            vm.chartOptionXAxisData = [];\r\n            vm.chartSeriesData = [];\r\n            data.forEach(items => {\r\n                if (XFieldName in items) {\r\n                    if (items[XFieldName] != null && items[XFieldName] != undefined) {\r\n                        vm.chartOptionXAxisData.push(items[XFieldName])\r\n                        //set graph Values if XField  is Not Null  \r\n                        vm.BindXYFields(items, XFieldName, YFieldName);\r\n                    }\r\n                    else {\r\n                        //set graph Values if XField  is  Null\r\n                        if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                            if (typeof XFieldName == \"string\") {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, \"-\"]\r\n                            }\r\n                            else {\r\n                                vm.chartOptionXAxisData = [...vm.chartOptionXAxisData, 0]\r\n                            }\r\n                            vm.BindXYFields(items, XFieldName, YFieldName);\r\n                        }\r\n\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartOptionXAxisData.push(\" \")\r\n                    vm.BindXYFields(items, XFieldName, YFieldName);\r\n                }\r\n            });\r\n        },\r\n        //set graph Values if XField  is Not Null  \r\n        BindXYFields: function (items, XFieldName, YFieldName) {\r\n            var vm = this;\r\n            if (YFieldName in items) {\r\n                if (items[YFieldName] != null && items[YFieldName] != undefined) {\r\n                    if (typeof items[YFieldName] == \"string\") {\r\n                        var replaceXCurrencySymbol = items[YFieldName].replace(/[$€£]/g, '')\r\n                        vm.chartSeriesData.push(parseInt(replaceXCurrencySymbol))\r\n                    }\r\n                    else {\r\n                        vm.chartSeriesData.push(items[YFieldName])\r\n                    }\r\n                }\r\n                else {\r\n                    vm.chartSeriesData = [...vm.chartSeriesData, 0]\r\n                }\r\n            }\r\n        },\r\n\r\n        //Genrate Random Color Code\r\n        GenrateRandomColorCode() {\r\n            const randomColor = Math.floor(Math.random() * 16777215).toString(16);\r\n            return \"#\" + randomColor;\r\n        },\r\n\r\n        // Genrate List of random colors\r\n        GenrateRandomColorList() {\r\n            var vm = this;\r\n            while (vm.colourList.length < vm.chartSeriesData.length) {\r\n                let color;\r\n                color = vm.GenrateRandomColorCode();\r\n                let IsExist = vm.colourList.find(x => x == color)\r\n                if (!IsExist) { vm.colourList.push(color); }\r\n            }\r\n        },\r\n        onSubmit: async function (formfields, val) {\r\n            var vm = this;\r\n            await vm.ApplyGraph();\r\n            // vm.SaveDynamicreport(ReportID)            \r\n        },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.ChartNumberClass {\r\n    text-align: center; \r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalGraphOptions.vue?vue&type=template&id=7a09bc57&\"\nimport script from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\nexport * from \"./modalGraphOptions.vue?vue&type=script&lang=js&\"\nimport style0 from \"./modalGraphOptions.vue?vue&type=style&index=0&id=7a09bc57&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <div>\r\n        <div class=\"right-content datareport hr_jobpost\">\r\n            <div class=\"col-md-12 p-0 mb-2\"> \r\n                <div class=\"theme-primary partition p-actions-expand overflow-visible\">\r\n                    <loader :isVisible=\"isLoading\"></loader>\r\n                    <span class=\"p-name text-white\">{{ $t('ReportPreview') }}</span>\r\n                    <span class=\"p-actions float-right mydbsize\">\r\n                        <a :class=\"Columnlist.length > 0 ? 'p-action-btn text-white dash' : 'p-action-btn text-white dash disabled'\" data-original-title=\"REPORT PREVIEW\" v-on:click=\"PreviewReport\">\r\n                            <em class=\"fa fa-play\"></em><br>{{ $t('ReportPreview') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"RESET\" v-on:click=\"ResetData\">\r\n                            <em class=\"fa fa-repeat\"></em><br>{{ $t('Reset') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"PDF\" v-on:click=\"ExportToPDF\">\r\n                            <em class=\"fa fa-file-pdf-o\"></em><br>{{ $t('ExportToPdf') }}\r\n                        </a>\r\n                        <a class=\"p-action-btn text-white dash\" data-original-title=\"Excel\" v-on:click=\"ExportToExcel\">\r\n                            <em class=\"fa fa-file-excel-o\"></em><br>{{ $t('ExportToExcel') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenSortingPopup\" class=\"p-action-btn text-white dash\" data-original-title=\"SORT\">\r\n                            <em class=\"fa fa-sort-amount-asc\"></em><br>{{ $t('SORT') }}\r\n                        </a>\r\n                        <a v-on:click=\"OpenGraph\" class=\"p-action-btn text-white dash\" data-original-title=\"GRAPH\">\r\n                            <em class=\"fa fa-pie-chart\"></em><br>{{ $t('Graph') }}\r\n                        </a>\r\n                        <div class=\"parentdiv datarepfix2\">\r\n                    <div class=\"verticle-action lft75 rt30\">\r\n                        <span class=\"action-list-box small\" style=\"width:400px\">\r\n                            <span id=\"action-list1\" class=\"text-left p-0 datarep mt-3 w-90 float-left bg_outerdark borderbababa position-relative\" v-if=\"isSortPopup\">\r\n                                <div class=\"float-left col-12\">\r\n                                    <div class=\"container-fluid p-0 mb-3\">\r\n                                    </div>\r\n                                    <div class=\"row px-3 pb-0\" v-for=\"(input, index) in sortColummnarray\" :key=\"`phoneInput-${index}`\">\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('SortBy') }}</label>\r\n                                                <select v-model=\"input.sortcolummnId\" class=\"form-control\">\r\n                                                    <option value=\"\" selected disabled>Select Field</option>\r\n                                                    <option v-for=\"item in Columnlist.filter(x => x.Calculated_Field == false)\"\r\n                                                        :value=\"item.CustomFieldId\" :key=\"item.CustomFieldId\" :disabled=\"(sortColummnarray.filter(x => x.sortcolummnId == item.CustomFieldId)).length > 0\">\r\n                                                        {{ item.DisplayName ? GetLocalizedValue(item.DisplayName) :\r\n                                                            GetLocalizedValue(item.FieldName) }}\r\n                                                    </option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-5 pl-0 pr-3\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>{{ $t('OrderBy') }}</label>\r\n                                                <select v-model=\"input.columnOrders\" class=\"form-control\">\r\n                                                    <option value=\"\" selected disabled>Select Order</option>\r\n                                                    <option>{{ $t('ASC') }}</option>\r\n                                                    <option>{{ $t('DESC') }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-lg-2\">\r\n                                            <div class=\"form-group\">\r\n                                                <a v-on:click=\"AddSortingForm(input)\"><em\r\n                                                        class=\"fa fa-plus-circle font-24 text-success mt-3\"></em></a>\r\n                                                <a v-show=\"sortColummnarray[0].sortcolummnId != '' || isValueExistInSort\"\r\n                                                    v-on:click=\"RemoveSortingForm(input)\"><em\r\n                                                        class=\"fa fa-times-circle font-24 text-danger mt-3 ml-1\"></em></a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"va_lft25 top4\"><em class=\"icon-solid arrow-solid-left text-secondary\"\r\n                                        style=\"font-size: 20pt;\"></em>\r\n                                </div>\r\n                                <button type=\"button\" class=\"close closebtnsmall\" v-on:click=\"close()\">\r\n                                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                                </button>\r\n                            </span>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                    </span>\r\n                    <span class=\"collapse-head-btns\">\r\n                        <a href=\"javascript:;\" class=\"collapse-btns\">\r\n                            <em class=\"fa fa-angle-up text-white\"></em>\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div class=\"col-md-12 p-0 mb-2\">\r\n                <div class=\"tab-pane mb-0\">\r\n                    <div class=\"tab-content fsmtabcontrolMobileView\" id=\"myTabContent\">\r\n                        <div class=\"expand-list\">\r\n                            <a href=\"javascript:;\" class=\"expand-list-btn justify-content-center align-items-center\">\r\n                                <em class=\"icon-solid arrow-solid-left text-white\" style=\"font-size:9pt\"></em>\r\n                            </a>\r\n                        </div>\r\n                        <div v-if=\"showGraphOptions\" class=\"card mb-3 probx\">\r\n                            <div class=\"card-header\">\r\n                                <h2>{{ $t('Graph') }}</h2>\r\n                                <a class=\"btn btn-primary\" v-on:click=\"OpenGraphOptions\">{{ $t('GraphOptions') }} <em\r\n                                        class=\"fa fa-cogs\"></em></a>\r\n                            </div>\r\n                            <div v-if=\"showChart\" class=\"card-body\" id=\"Reportpdf\" style=\"min-height: 245px;\">\r\n                                <div class=\"float-right\"><a class=\"text-center text-danger\" v-on:click=\"ResetGraphData()\">\r\n                                        <span class=\"fa fa-trash-o text-danger\" style=\"font-size:25px;\"></span>\r\n                                    </a></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center p-0\">\r\n                                        <div class=\"border bg-light float-left text-left p-0  graphinfo_base_lft\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>X-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(XAxisField)) }}</li>\r\n                                                <li><label>Y-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(YAxisField)) }}</li>\r\n                                                <li v-show=\"aggregateFunctionResult != 0\">\r\n                                                    <label># {{ aggregateFunctionType }}:</label>\r\n                                                    {{ aggregateFunctionResult }}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'line' || chartType == 'bar'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                        <div class=\"p-0 m-0 float-left graphinfo_base_rgt\"\r\n                                            v-if=\"chartType == 'pie' || chartType == 'donut'\">\r\n                                            <VueApexCharts ref=\"chart\" :type=\"chartType\" height=\"auto\" :options=\"chartOptions\"\r\n                                                :series=\"chartSeries\">\r\n                                            </VueApexCharts>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-if=\"isChartColor\" class=\"card-body\" id=\"Reportpdf\" style=\"min-height: 245px;\">\r\n                                <div class=\"float-right\"><a class=\"text-center text-danger\" v-on:click=\"ResetGraphData()\">\r\n                                        <span class=\"fa fa-trash-o text-danger\" style=\"font-size:25px;\"></span>\r\n                                    </a></div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 col-lg-12 text-center p-0\">\r\n                                        <div class=\"border bg-light float-left text-left p-0  graphinfo_base_lft\">\r\n                                            <ul class=\"graphinfo\">\r\n                                                <li><label>Y-axis:</label>\r\n                                                    {{ GetLocalizedValue(FilterCustomFieldName(YAxisField)) }}</li>\r\n                                                <li><label>Color-code:</label>{{ GetChartColorCode }}</li>\r\n                                            </ul>\r\n                                        </div>\r\n                                        <span class=\"p-0 m-0 float-left graphinfo_base_rgt\">\r\n                                            <div class=\"col-sm-4 col-lg-4 px-0 bg-white mx-auto shadowder\"  style=\"min-height: 200px; padding-top: 75px;\">\r\n                                                <span class=\"ChartNumberClass\">\r\n                                                    <h1 :style=\"'color:' + GetChartColorCode\">{{ GetChartColorData }}</h1>\r\n                                                </span>\r\n                                            </div>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"tab-pane p-0 pb-2 border-0 active\" role=\"tabpanel\" id=\"tab-detail-content\"\r\n                            aria-labelledby=\"tab-detail-content\">\r\n                            <div class=\"listing mt-3\">\r\n                                <div class=\"table-responsive table-fix-header\">\r\n                                    <table class=\"table table-bordered mt-0\" style=\"width:100%\" id=\"Reportpdf\"\r\n                                        aria-label=\"Report Preview Listing\">\r\n                                        <thead class=\"thead-bg\">\r\n                                            <tr>\r\n                                                <th scope=\"col\" v-for=\"(item, index) in previewgroupdata\" :key=\"index\"\r\n                                                    v-if=\"showdata\">\r\n                                                    {{ GetLocalizedValue((item.DisplayName != null && item.DisplayName != '') ?\r\n                                                        item.DisplayName : item.FieldName) }}</th>\r\n                                                <th scope=\"col\" v-for=\"(column, index) in previewcolumn\" :key=\"index\">\r\n                                                    {{ GetLocalizedValue((column.DisplayName != null && column.DisplayName !=\r\n                                                        '') ?\r\n                                                        column.DisplayName : column.FieldName) }}{{ column.ExpresssionFieldName }}\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody v-if=\"noRecord\">\r\n                                            <tr style=\"cursor:initial;\">\r\n                                                <td colspan=\"4\">\r\n                                                    <div\r\n                                                        class=\"text-center text-danger d-flex align-items-center justify-content-center norecs\">\r\n                                                        {{ $t(\"NoRecordfound\") }}</div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                        <tbody v-for=\"(item, index) in previewdata\">\r\n                                            <tr v-for=\"(sitem, sindex) in previewdata[index].data\" v-if=\"showdata\">\r\n                                                <template v-if=\"sindex == 0\">\r\n                                                    <td class=\"breakspaces\" v-for=\"(gitem, gindex) in previewgroupdata\"\r\n                                                        :class=\"{ 'onlyrtbod': true, '': item.totalRecord == null }\"\r\n                                                        :rowspan=\"item.totalRecord\">\r\n                                                        {{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '') ? gitem.DateFormat == null && gitem.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(item[gitem.DisplayName]) : item[gitem.DisplayName] :\r\n                                                        gitem.DateFormat == null && gitem.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(item[gitem.FieldName]) : item[gitem.FieldName]  }}\r\n                                                        <!-- {{ (LevelOfGrouping == 2) ?\r\n                                                            (item.data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex][gitem.FieldName] : '-') }}  -->\r\n                                                        <!-- {{ (LevelOfGrouping == 3) ?\r\n                                                            (item.data[sindex].data[sindex][gitem.DisplayName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.DisplayName] : '') :\r\n                                                            (item.data[sindex].data[sindex][gitem.FieldName] ?\r\n                                                                item.data[sindex].data[sindex][gitem.FieldName] : '-') }} -->\r\n                                                        ({{ (item[gitem.DisplayName] != null && item[gitem.DisplayName] != '' ||\r\n                                                            gitem.FieldName != null && gitem.FieldName != '') ? item.totalRecord\r\n                                                            : '-' }})\r\n                                                    </td>\r\n                                                </template>\r\n                                                <!-- v-if=\"LevelOfGrouping < 2\" -->\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\">\r\n                                                    <span class=\"breakspaces\" v-html=\"(sitem[column.DisplayName] == true && sitem[column.DisplayName] != 1 || sitem[column.DisplayName] == false && sitem[column.DisplayName] != 0) ?\r\n                                                        (sitem[column.DisplayName] == true ? 'YES' : 'NO') : (sitem[column.FieldName]\r\n                                                        == true ? 'YES' : 'NO') ||\r\n                                                        (sitem[column.DisplayName] != null && sitem[column.DisplayName] != '') ?\r\n                                                        (sitem[column.DisplayName] || sitem[column.DisplayName] == 0 ? column.DateFormat == null && column.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(sitem[column.DisplayName]) : sitem[column.DisplayName] : '') :\r\n                                                        (sitem[column.FieldName] || sitem[column.FieldName] == 0 ? column.DateFormat == null && column.ColumnFieldDataCode == 'date' ? $options.filters.formatDate(sitem[column.FieldName]) : sitem[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                </td>\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 2\">\r\n                                                    {{ (sitem.data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0][column.DisplayName] ? sitem.data[0][column.DisplayName] :\r\n                                                            '-') :\r\n                                                        (sitem.data[0][column.FieldName] ? sitem.data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                                <!-- <td v-for=\"column in previewcolumn\" v-if=\"LevelOfGrouping == 3\">\r\n                                                    {{ (sitem.data[0].data[0][column.DisplayName] != null &&\r\n                                                        sitem.data[0].data[0][column.DisplayName] != '') ?\r\n                                                        (sitem.data[0].data[0][column.DisplayName] ?\r\n                                                            sitem.data[0].data[0][column.DisplayName] : '-') :\r\n                                                        (sitem.data[0].data[0][column.FieldName] ?\r\n                                                            sitem.data[0].data[0][column.FieldName] : '-') }}\r\n                                                </td> -->\r\n                                            </tr>\r\n                                            <tr v-if=\"showcoldata\">\r\n                                                <td v-for=\"(column,i) in previewcolumn\" :key=\"i\">\r\n                                                    <span class=\"breakspaces\" v-html=\"(item[column.DisplayName] == true && item[column.DisplayName] != 1 || item[column.DisplayName] == false && item[column.DisplayName] != 0) ?\r\n                                                        (item[column.DisplayName] == true ? 'YES' : 'NO') : (item[column.FieldName] == true ? 'YES' : 'NO') ||\r\n                                                        (item[column.DisplayName] != null && item[column.DisplayName] != '') ?\r\n                                                        (item[column.DisplayName] || item[column.DisplayName] == 0 ? item[column.DisplayName] : '') :\r\n                                                        (item[column.FieldName] || item[column.FieldName] == 0 ?  item[column.FieldName] : '')\">\r\n                                                    </span>\r\n                                                        {{ item[column.ExpresssionFieldName] }} \r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"float-right\">\r\n                            <a class=\"btn btn-success my-2 my-sm-0 mr-2\" v-on:click=\"SaveAllReport()\">&emsp13;\r\n                                <span class=\"fa fa-floppy-o\"></span> {{ $t('Save') }}\r\n                            </a>\r\n                            <a class=\"btn btn-danger\" v-on:click=\"CancelAll()\">&emsp13;\r\n                                <span class=\"fa fa-times\"></span> {{ $t('Cancel') }}\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <modalGraphOptions :Columnlist=\"Columnlist\" :showGraphOptions=\"showGraphOptions\" :customreportparameters=\"customreportparameters\" :GraphData=\"GraphData\"\r\n            :sortColummnarray=\"sortColummnarray\" :GraphJson=\"GraphJson\" :getchangedinlist=\"getchangedinlist\" ref=\"modalGraph\">\r\n        </modalGraphOptions>\r\n    </div>\r\n</template>\r\n<script>\r\nimport ReportPreviewService from \"@/services/DataService\";\r\nimport modalGraphOptions from \"@/components/Common/Modal/modalGraphOptions.vue\";\r\nimport VueApexCharts from \"vue-apexcharts\";\r\nimport moment from \"moment\";\r\nimport * as pdfFonts from \"pdfmake/build/vfs_fonts.js\"; // <-- vfs_fonts has to be imported before pdfmake\r\nimport pdfMake from 'pdfmake';\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nexport default {\r\n    components: {\r\n        VueApexCharts,\r\n        modalGraphOptions,\r\n        pdfMake\r\n\r\n    },\r\n    props: {\r\n        previewdata: {\r\n            type: Array,\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        Grouplist: {\r\n            type: Array\r\n        },\r\n        saveJsonReport: {\r\n            type: Object\r\n        },\r\n        ReportName: {\r\n            type: String\r\n        },\r\n        GraphData: {\r\n            type: Array\r\n        },\r\n        SortingData: {\r\n            type: Array\r\n        },\r\n        GraphJson: {\r\n            type: Array\r\n        },\r\n        editjsondata: {\r\n            type: Boolean\r\n        },\r\n        LevelOfGrouping: {\r\n            type: Number\r\n        },\r\n        PdfJsonReport: {\r\n            type: Object\r\n        },\r\n        modeldateformat:{\r\n            type: String\r\n        },\r\n        getchangedinlist:{\r\n            type: Number\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            previewcolumn: [],\r\n            previewgroupdata: [],\r\n            noRecord: true,\r\n            showdata: false,\r\n            showcoldata: true,\r\n            showGraphOptions: false,\r\n            showChart: false,\r\n            showmulitGrouping: false,\r\n            //Sorting PopUp\r\n            isSortPopup: false,\r\n            sortColummnarray: [{ sortcolummnId: \"\", columnOrders: \"\" }],\r\n            DynamicFillValue: [],\r\n            GroupValue: [],\r\n            isValueExistInSort: false,\r\n            isGraph:false,\r\n\r\n            //Bind Chart \r\n            chartTypeID: null,\r\n            chartType: \"\",\r\n            chartSeries: [],\r\n            chartOptions: {},\r\n            aggregateFunctionType: null,\r\n            aggregateFunctionResult: null,\r\n            XAxisField: null,\r\n            YAxisfield: null,\r\n            watchvalue: false,\r\n            allReocrdsList: null,\r\n            ExcelData: null,\r\n            BindGraph: false,\r\n            SavedGraphData:{},\r\n            GetChartColorCode:'',\r\n            GetChartColorData:'',\r\n            isChartColor:false,\r\n\r\n            //Export to PDF\r\n            allReocrdsData: null,\r\n            TableBody: [],\r\n            TableHeader: [],\r\n            pdfContent: null,\r\n            ExcelJsonData: null,\r\n            count: 0,\r\n            isPreviewForPdfExcel: 1,\r\n           \r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n        }\r\n        vm.EditSortingData();\r\n        if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n            vm.RenderList();\r\n        } if (vm.editjsondata) { vm.PreviewReport(); }\r\n    },\r\n    mounted() {\r\n        var vm = this;\r\n        if (vm.GraphData != null && vm.GraphData != undefined && vm.GraphData != '' && vm.GraphData.length > 0) {\r\n            vm.showGraphOptions = true;\r\n            if (vm.aggregateFunctionType == '') {\r\n                vm.aggregateFunctionType = vm.GraphData[0].AggregateFunction\r\n            }\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.modalGraph?.ViewReportGraph();\r\n            }\r\n        }\r\n    },\r\n    watch: {\r\n        watchvalue(newval, oldval) {\r\n            var vm = this;\r\n            if (newval != oldval) {\r\n                vm.RenderList();\r\n                vm.watchvalue = false;\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        EditSortingData: function () {\r\n            var vm = this;\r\n            if (vm.SortingData != null && vm.SortingData != undefined && vm.SortingData != '' && vm.SortingData.length > 0) {\r\n                vm.sortColummnarray = [];\r\n                vm.SortingData.forEach((item, index) => {\r\n                    vm.sortColummnarray.push({\r\n                        \"sortcolummnId\": item.CustomFieldId,\r\n                        \"columnOrders\": item.SORTTYPE\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n        },\r\n        RefreshReport: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.PreviewReport();\r\n        },\r\n        RenderList: function () {\r\n            var vm = this;\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.previewcolumn = []\r\n                var getkeys = Object.keys(vm.previewdata[0])\r\n                vm.Columnlist.forEach(x => {\r\n                    vm.previewdata.forEach(item=>{\r\n                        if(x.ColumnFieldDataCode == 'date'){\r\n                            var tempdata = item[x.DisplayName] != null ? item[x.DisplayName] : item[x.FieldName]; \r\n                            if(tempdata != undefined){\r\n                                if(x.DateFormat == null){\r\n                                    var defaultdatecheck  = moment(tempdata, \"MM/DD/YYYY\",true);\r\n                                    if(item[x.DisplayName] != null && defaultdatecheck.isValid() == false){\r\n                                        item[x.DisplayName] = vm.$options.filters.formatDate(item[x.DisplayName])\r\n                                    }else{\r\n                                        item[x.FieldName] = vm.$options.filters.formatDate(item[x.FieldName])\r\n                                    } \r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.previewcolumn.push({ ...x });\r\n                })\r\n                vm.Grouplist.forEach(item => {\r\n                    vm.previewcolumn.forEach((gitem, index) => {\r\n                        if (item.DisplayName === gitem.DisplayName || item.FieldName === gitem.FieldName) {\r\n                            vm.previewcolumn.splice(index, 1);\r\n                        }\r\n                    })\r\n                })\r\n                if (vm.previewcolumn != null && vm.previewcolumn != undefined && vm.previewcolumn.length > 0) {\r\n                    if (vm.Grouplist.length > 0) {\r\n                        vm.previewgroupdata = Object.assign([], vm.Grouplist);\r\n                        vm.showdata = true;\r\n                        // if (vm.LevelOfGrouping > 2) {\r\n                        //     vm.showmulitGrouping = true;\r\n                        // }\r\n                        vm.showcoldata = false;\r\n                    }\r\n                    else {\r\n                        vm.showcoldata = true;\r\n                        vm.previewgroupdata = [];\r\n                    }\r\n                    vm.noRecord = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.previewcolumn = [];\r\n                vm.previewgroupdata = [];\r\n                vm.noRecord = true;\r\n            }\r\n        },\r\n        PreviewReport: async function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            vm.BindGraph = false;\r\n            if(vm.SavedGraphData.selectedChartTypeID != null && vm.SavedGraphData.selectedChartTypeID != undefined){\r\n               await vm.$refs.modalGraph.ApplyGraph();\r\n               if(!vm.showGraphOptions){\r\n               vm.OpenGraph();}\r\n            }\r\n            if(vm.sortColummnarray[0].sortcolummnId == undefined || vm.sortColummnarray[0].columnOrders == undefined){\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            await vm.$parent.PreviewJson(vm.sortColummnarray, vm.BindGraph);\r\n            vm.watchvalue = true\r\n        },\r\n        ResetData: function () {\r\n            var vm = this;\r\n            vm.showdata = false;\r\n            vm.isSortPopup = false;\r\n            vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            vm.previewcolumn = [];\r\n            vm.showGraphOptions = false;\r\n            vm.showChart = false;\r\n            vm.isChartColor = false;\r\n            vm.chartType = null;\r\n            vm.chartTypeID = null;\r\n            vm.aggregateFunctionType = null;\r\n            vm.aggregateFunctionResult = null;\r\n            vm.XAxisField = null;\r\n            vm.YAxisField = null;\r\n            vm.chartSeries = [];\r\n            vm.chartOptions = {};\r\n            vm.GetChartColorCode = '';\r\n            vm.GetChartColorData = '';\r\n            vm.SavedGraphData = {};\r\n            vm.$refs.modalGraph?.ResetGraph();\r\n            vm.$parent.ResetPreview(vm.customreportparameters);\r\n            vm.noRecord = true;\r\n        },\r\n        ResetGraphData: function () {\r\n            var vm = this;\r\n            vm.showGraphOptions = false;\r\n            vm.$refs.modalGraph.ResetGraph();\r\n            // vm.$refs.modalGraph.ApplyGraph();\r\n            vm.chartType = \"\"\r\n            vm.chartTypeID = null\r\n            vm.aggregateFunctionType = null\r\n            vm.aggregateFunctionResult = null\r\n            vm.XAxisField = null\r\n            vm.YAxisField = null\r\n            vm.chartSeries = []\r\n            vm.chartOptions = {}\r\n            vm.GetChartColorCode = '';\r\n            vm.GetChartColorData = '';\r\n            vm.showChart = false;\r\n            vm.SavedGraphData= {};\r\n            vm.isChartColor = false;\r\n            vm.BindGraph = false;\r\n        },\r\n        // NoDataForGraph: function (){\r\n        //     var vm = this;\r\n        //     vm.showGraphOptions = false;\r\n        //     vm.chartType = \"\"\r\n        //     vm.chartTypeID = null\r\n        //     vm.aggregateFunctionType = null\r\n        //     vm.aggregateFunctionResult = null\r\n        //     vm.XAxisField = null\r\n        //     vm.YAxisField = null\r\n        //     vm.chartSeries = []\r\n        //     vm.chartOptions = {}\r\n        //     vm.showChart = false;\r\n        //     vm.BindGraph = false;\r\n        // },\r\n        SaveAllReport: async function () {\r\n            var vm = this;\r\n            if (vm.editjsondata) {\r\n                await vm.$parent.PreviewJson(vm.sortColummnarray);\r\n            }\r\n            var graphArray = {\r\n                \"chartTypeID\": vm.chartTypeID,\r\n                \"XAxisField\": vm.XAxisField,\r\n                \"YAxisField\": vm.YAxisField,\r\n                \"AggregateFunction\": vm.aggregateFunctionType,\r\n                \"AggregateFuncField\": vm.GetChartColorData == '' ? vm.aggregateFunctionResult : vm.GetChartColorData,\r\n                \"ChartColorCode\": vm.GetChartColorCode\r\n            }\r\n            if (graphArray.chartTypeID != null) {\r\n                if (vm.Grouplist.length <= 1) {\r\n                    vm.Grouplist.forEach(item => {\r\n                        vm.saveJsonReport.Info.GROUP.push(item);\r\n                    })\r\n                }\r\n                vm.saveJsonReport.Info.GRAPH.push(graphArray);\r\n            }\r\n            var jsonData = JSON.stringify(vm.saveJsonReport);\r\n            if (jsonData != '[]' && jsonData != undefined && vm.previewdata.length > 0) {\r\n                ReportPreviewService.SaveAllDynamicReport(jsonData).then((response) => {\r\n                    if (response.data[0].Value == 1) {\r\n                        vm.ShowAlert(vm.$t(\"AddedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                    else if (response.data[0].Value == 2) {\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"Report\")]), 'success', true, vm.$t('Alert'));\r\n                        this.$router.push({ name: 'CustomReports' });\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        OpenSortingPopup: function () {\r\n            var vm = this;\r\n            if (!vm.isSortPopup) {\r\n                vm.isSortPopup = true;\r\n            }\r\n            else {\r\n                vm.isSortPopup = false;\r\n            }\r\n        },\r\n        AddSortingForm: function (value) {\r\n            var vm = this\r\n            // Add Sorting popup dynamically.\r\n            if (vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' && vm.sortColummnarray.length < vm.Columnlist.length) {\r\n                vm.sortColummnarray.push({ sortcolummnId: \"\", columnOrders: \"\" });\r\n            } else {\r\n                vm.ShowAlert(vm.sortColummnarray[0].columnOrders != '' && vm.sortColummnarray[0].sortcolummnId != '' ? vm.$t(\"SortLimitExceed\") : vm.$t(\"AddFieldsFirst\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        RemoveSortingForm: function (index) {\r\n            var vm = this;\r\n            if (vm.sortColummnarray.length == 1) {\r\n                vm.sortColummnarray = [{ sortcolummnId: \"\", columnOrders: \"\" }]\r\n            }\r\n            else {\r\n                // vm.sortColummnarray.splice(vm.sortColummnarray.indexOf(index), 1);\r\n                let sortindex = vm.sortColummnarray.findIndex(x => x.sortcolummnId === index.sortcolummnId)\r\n                if(sortindex > -1){\r\n                    vm.sortColummnarray.splice(sortindex,1);\r\n                }\r\n                vm.isValueExistInSort = true;\r\n            }\r\n            if(vm.sortColummnarray.length == 1){\r\n                vm.isValueExistInSort = false}\r\n        },\r\n        OpenGraph: function () {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n            if (!vm.showGraphOptions) {\r\n                vm.showGraphOptions = true;\r\n            }\r\n            else {\r\n                vm.showGraphOptions = false;\r\n            }\r\n        },\r\n        OpenGraphOptions: function () {\r\n            var vm = this;\r\n            vm.showChart = false;\r\n            vm.isChartColor = false;\r\n            vm.isGraph = true;\r\n            $(\"#CustomGraphOptions\").modal('show');\r\n            setTimeout(function () {\r\n                $(\"#CustomGraphOptions\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        DrawGraph: function (graphParams, BindGraph) {\r\n            var vm = this;\r\n            if (graphParams.selectedChartTypeID != null && graphParams.selectedChartTypeID != undefined) {\r\n                vm.SavedGraphData = graphParams;\r\n                if(graphParams.ChartColorCode != '' && graphParams.selectedChartType == \"numbers_chart\"){\r\n                    // vm.GetChartColorCode = graphParams.ChartColorCode;\r\n                    // vm.GetChartColorData = graphParams.CharColorData;\r\n                    // vm.YAxisField = graphParams.selectedChartYAxis;\r\n                    // vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                    // vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                    vm.isChartColor = true;\r\n                    vm.showChart = false;\r\n                }else{\r\n                    // vm.chartType = graphParams.selectedChartType;\r\n                    // vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                    // vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                    // vm.aggregateFunctionResult = graphParams.aggregateFunctionResult;\r\n                    // vm.XAxisField = graphParams.selectedChartXAxis;\r\n                    // vm.YAxisField = graphParams.selectedChartYAxis;\r\n                    // vm.chartSeries = graphParams.chartseries;\r\n                    // vm.chartOptions = graphParams.chartoptions;\r\n                    vm.showChart = true;\r\n                    vm.isChartColor = false;\r\n                }\r\n                if(graphParams.chartoptions.legend != undefined){\r\n                    graphParams.chartoptions.legend.width = screen.availWidth - screen.availWidth * 69 /100\r\n                }\r\n                vm.GetChartColorCode = graphParams.ChartColorCode;\r\n                vm.GetChartColorData = graphParams.CharColorData;\r\n                vm.chartType = graphParams.selectedChartType;\r\n                vm.chartTypeID = graphParams.selectedChartTypeID;\r\n                vm.aggregateFunctionType = graphParams.aggregateFunctionType;\r\n                vm.aggregateFunctionResult = graphParams.aggregateFunctionResult;\r\n                vm.XAxisField = graphParams.selectedChartXAxis;\r\n                vm.YAxisField = graphParams.selectedChartYAxis;\r\n                vm.chartSeries = graphParams.chartseries;\r\n                vm.chartOptions = graphParams.chartoptions;\r\n                vm.BindGraph = BindGraph;\r\n            }\r\n            else {\r\n                vm.showChart = false;\r\n            }\r\n\r\n        },\r\n        FilterCustomFieldName(CustomFieldId) {\r\n            var vm = this;\r\n            let CustomFieldName;\r\n            for (let [index] of vm.Columnlist.entries()) {\r\n                if (vm.Columnlist[index].CustomFieldId == CustomFieldId || vm.Columnlist[index].FieldName == CustomFieldId) {\r\n                    if (vm.Columnlist[index].DisplayName != null && vm.Columnlist[index].DisplayName != '') {\r\n                        CustomFieldName = vm.Columnlist[index].DisplayName;\r\n                    }\r\n                    else {\r\n                        CustomFieldName = vm.Columnlist[index].FieldName;\r\n                    }\r\n                }\r\n            }\r\n            return CustomFieldName;\r\n        },\r\n        CancelAll: function () {\r\n            this.$router.push({ name: 'CustomReports' });\r\n        },\r\n        CheckColumnExistInGraph: function (CustomFieldId) {\r\n            var vm = this;\r\n            var expression = true;\r\n            if (vm.XAxisField != CustomFieldId && vm.YAxisField != CustomFieldId) {\r\n                return !expression;\r\n            }\r\n            return expression;\r\n\r\n        },\r\n        GetAllRecordsForPDF: async function (excelvalue) {\r\n            var vm = this;\r\n            vm.count = 0;\r\n            if (vm.previewdata.length > 0) {\r\n                var temp = {\r\n                    \"Info\": {\r\n                        \"REPORTID\": vm.customreportparameters.ReportID,\r\n                        \"REPORTNAME\": vm.ReportName,\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                        \"PAGESIZE\": vm.PageSize,\r\n                        \"PAGENUMBER\": parseInt(vm.PageNumber),\r\n                        \"IS_PAGED\": 1,\r\n                        \"IsForPreview\": vm.isPreviewForPdfExcel,\r\n                        \"FIELDS\": vm.saveJsonReport.Info.FIELDS.length > 0 ? vm.saveJsonReport.Info.FIELDS : vm.PdfJsonReport.Info.FIELDS,\r\n                        \"FILTERS\": vm.saveJsonReport.Info.FILTERS.length > 0 ? vm.saveJsonReport.Info.FILTERS : vm.PdfJsonReport.Info.FILTERS,\r\n                        \"GROUP\": vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport.Info.GROUP : vm.PdfJsonReport.Info.GROUP,\r\n                        \"SORTING\": vm.saveJsonReport.Info.SORTING.length > 0 ? vm.saveJsonReport.Info.SORTING : vm.PdfJsonReport.Info.SORTING,\r\n                        \"EXPRESSION\": vm.saveJsonReport.Info.EXPRESSION.length > 0 ? vm.saveJsonReport.Info.EXPRESSION : vm.PdfJsonReport.Info.EXPRESSION\r\n\r\n                    }\r\n                }\r\n                var jsondata = JSON.stringify(temp);\r\n                vm.ExcelJsonData = jsondata;\r\n                if (excelvalue == undefined) {\r\n                    await ReportPreviewService.PreviewReport(jsondata).then(async (response) => {\r\n                        if (response.data != null && response.data != undefined) {\r\n                            vm.allReocrdsData = JSON.parse(response.data[0].Value);\r\n                            vm.count = vm.count + 1;\r\n                        }\r\n                    }).catch((err) => {\r\n                        console.log(err);\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        //Export TO PDF functionality \r\n        ExportToPDF: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            await vm.GetAllRecordsForPDF();\r\n            if (vm.count != 0) {\r\n                // debugger\r\n                if(vm.chartOptions.legend != undefined){\r\n                vm.chartOptions.legend.width = screen.availWidth - screen.availWidth * 69 / 100;}\r\n                var graphURI = await vm.GetGraphImageURI();\r\n                var GraphData = {};\r\n                var allRecordslisting = vm.allReocrdsData.ListingData;\r\n                let MetaData = vm.allReocrdsData.MetaData[0];\r\n                let ReportName = vm.ReportName.replace('.','-');\r\n                let pageType = 'A2';\r\n                let pdfDetails;\r\n                let pageOrientation = '';\r\n                let GraphWidth = 300;\r\n\r\n                // Create PDF with  Grouping \r\n                if (MetaData.IsGrouping) {\r\n                    await vm.BindPDFDataForGroup(allRecordslisting);\r\n                }\r\n                // Create PDF without  Grouping \r\n                else {\r\n                    await vm.BindPDFData(allRecordslisting);\r\n                }\r\n\r\n                //Set Page Type \r\n                if (vm.TableHeader.length > 5) {\r\n                    pageType = \"A1\";\r\n                    GraphWidth = 500\r\n                }\r\n                //Set Page  pageOrientation\r\n\r\n                if (vm.TableHeader.length > 10) {\r\n                    pageOrientation = 'landscape';\r\n                }\r\n                //Add graph Data\r\n                if (graphURI != null && graphURI != undefined) {\r\n                    GraphData = {\r\n                        image: graphURI.imgURI,\r\n                        width: 500,\r\n                        alignment: 'center'\r\n                    }\r\n                }\r\n\r\n                pdfDetails = {\r\n                    pageSize: pageType,\r\n                    pageOrientation: pageOrientation,\r\n                    content: [\r\n                        GraphData,\r\n                        // { text: `Report Name = ${ReportName}`, style: 'subheader' },\r\n                        {\r\n                            style: 'table',\r\n                            table: {\r\n                                headerRows: 1,\r\n                                body: vm.TableBody\r\n                            }\r\n                        },\r\n                    ],\r\n                    styles: vm.SetPDFStyle(),\r\n                    defaultStyle: {\r\n                        alignment: 'justify'\r\n                    }\r\n                }\r\n                pdfMake.createPdf(pdfDetails).download(ReportName);\r\n                vm.isLoading = false;\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n\r\n        BindPDFData: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n            var TableHeader2=[];\r\n            //Add  Column for Table header\r\n            var ColumnList = Object.keys(allRecordslisting[0])\r\n            ColumnList.forEach((item) => {\r\n                if (item != 'ROWNUMBER') {\r\n                    vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                    TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n                }\r\n            })\r\n\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            allRecordslisting.forEach((item) => {\r\n                let currentData = [];\r\n                TableHeader2.forEach((heading) => {\r\n                    let pdfdata = null;\r\n                    if(typeof item[heading.text] == 'string'){\r\n                        pdfdata = item[heading.text].replace( /(<([^>]+)>)/ig, '');\r\n                    }else{pdfdata = item[heading.text]}\r\n                    currentData.push(pdfdata);\r\n                })\r\n                vm.TableBody.push(currentData);\r\n            })\r\n        },\r\n\r\n        BindPDFDataForGroup: function (allRecordslisting) {\r\n            var vm = this;\r\n            vm.TableBody = [];\r\n            vm.TableHeader = [];\r\n             var TableHeader2=[];\r\n            //Add Grouping Column for Table header\r\n            vm.TableHeader.push({ text: vm.$t(Object.keys(allRecordslisting[0])[0]), style: 'tableHeader', alignment: 'center' })\r\n            TableHeader2.push({ text: Object.keys(allRecordslisting[0])[0], style: 'tableHeader', alignment: 'center' })\r\n            // Add all Column in Table Header \r\n            var columnList = Object.keys(allRecordslisting[0].data[0])\r\n            columnList.forEach((item) => {\r\n                vm.TableHeader.push({ text: vm.$t(item), style: 'tableHeader', alignment: 'center' })\r\n                TableHeader2.push({ text: item, style: 'tableHeader', alignment: 'center' })\r\n            })\r\n\r\n            //Add First header array into Table Body\r\n            vm.TableBody.push(vm.TableHeader);\r\n\r\n            //Create Array for PDF\r\n            allRecordslisting.forEach((item) => {\r\n                item.data.forEach((heading, groupingindex) => {\r\n                    let tableData = [];\r\n                    TableHeader2.forEach((headerelement, headerindex) => {\r\n                        if (groupingindex == 0 && headerindex == 0) {\r\n                            let pdfgroupdata = null;\r\n                            if(typeof item[headerelement.text] == 'string'){\r\n                                pdfgroupdata = item[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                            }else{pdfgroupdata = item[headerelement.text]}\r\n                            var groupColumn = `${pdfgroupdata} (${item.totalRecord})`\r\n                            tableData.push({ rowSpan: parseInt(item.totalRecord), text: groupColumn })\r\n                        }\r\n                        else if (groupingindex == 1 && headerindex == 0) {\r\n                            tableData.push(\"\")\r\n                        }\r\n                        else {\r\n                            if (heading[headerelement.text] != undefined && heading[headerelement.text] != \"\") {\r\n                                let pdfwithoutgroupdata = null;\r\n                                if(typeof heading[headerelement.text] == 'string'){\r\n                                    pdfwithoutgroupdata = heading[headerelement.text].replace( /(<([^>]+)>)/ig, '');\r\n                                }else{pdfwithoutgroupdata = heading[headerelement.text]}\r\n                                tableData.push(pdfwithoutgroupdata);\r\n                            }\r\n                            else {\r\n                                var tempitem = heading[headerelement.text] = \"-\";\r\n                                tableData.push(tempitem);\r\n                            }\r\n                        }\r\n                    })\r\n                    vm.TableBody.push(tableData)\r\n                })\r\n            })\r\n        },\r\n        SetPDFStyle: function () {\r\n            return {\r\n                subheader: {\r\n                    fontSize: 16,\r\n                    bold: true,\r\n                    margin: [0, 0, 0, 10]\r\n                },\r\n                table: {\r\n                    margin: [0, 5, 0, 15]\r\n                }\r\n            };\r\n        },\r\n        GetGraphImageURI: async function () {\r\n            var vm = this;\r\n            var URI;\r\n            await vm.$refs.chart?.chart.dataURI().then(uri => {\r\n                URI = uri;\r\n            });\r\n            return URI;\r\n        },\r\n        ExportToExcel: async function () {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            // var jsonData = JSON.stringify(vm.saveJsonReport.Info.GROUP.length > 0 ? vm.saveJsonReport : vm.PdfJsonReport);\r\n            await vm.GetAllRecordsForPDF('Excel');\r\n            if (vm.ExcelJsonData != null && vm.ExcelJsonData != undefined) {\r\n                var jsonData = vm.ExcelJsonData;\r\n                var params = `reportId=${vm.customreportparameters.ReportID}&pagetype=preview&IsPaged=1`;\r\n                ReportPreviewService.GetExcelReport(params, jsonData).then((response) => {\r\n                    var blob = new Blob([response.data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;' });\r\n                    var link = document.createElement('a');\r\n                    link.href = window.URL.createObjectURL(blob);\r\n                    const current = new Date();\r\n                    const date = `${current.getDate()}_${current.getMonth()+1}_${current.getFullYear()}`;\r\n                    var fileName = `ReportData-${vm.ReportName.replace('.', '-')}-${date}`;\r\n                    fileName = fileName.split(\" \").join(\"\");\r\n                    link.download = fileName;\r\n                    link.click();\r\n                    vm.isLoading = false\r\n                }).catch((err) => { console.log(err); vm.isLoading = false; })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        close() {\r\n            var vm = this;\r\n            vm.isSortPopup = false;\r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n\r\n\r\n\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ReportPreview.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ReportPreview.vue?vue&type=template&id=5df11b9a&scoped=true&\"\nimport script from \"./ReportPreview.vue?vue&type=script&lang=js&\"\nexport * from \"./ReportPreview.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5df11b9a\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal my-popups centre fade\",attrs:{\"id\":\"showcalculatedfield\",\"role\":\"dialog\"}},[_c('div',{staticClass:\"modal-dialog\",attrs:{\"role\":\"document\"}},[_c('div',{staticClass:\"modal-content\"},[_c('div',{staticClass:\"modal-header mheader-user\"},[_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.close()}}},[_c('em',{staticClass:\"fa fa-times\",attrs:{\"aria-hidden\":\"true\"}})]),_c('h4',{staticClass:\"modal-title\",attrs:{\"id\":\"myModalLabel\"}},[_vm._v(_vm._s(_vm.$t('customField')))])]),_c('div',{staticClass:\"modal-body\"},[_c('loader',{attrs:{\"is-visible\":_vm.isLoading}}),_c('dynamic-form',{attrs:{\"lang\":\"en\",\"buttons\":_vm.buttons,\"schema\":_vm.FormSchema},on:{\"OnSubmit\":function($event){return _vm.SubmitExpression()}},scopedSlots:_vm._u([{key:\"tgslot-CalculatedUIList\",fn:function({ data }){return [_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Functions'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx1\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.FunctionsName),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainFunction' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx1\",\"href\":'#FucntionCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'FucntionCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(name.FuncType))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse',attrs:{\"id\":'FucntionCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainFunction' + index,\"data-parent\":\"#accordionEx1\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"214px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.Functionskey[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{staticClass:\"fa fa-bullhorn float-left\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":element.Keys,\"title\":element.Keys}},[_vm._v(\" \"+_vm._s(element.Keys)+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.AddFunctionsfields(element, $event, index)}}})])])])]})],2)])])])])}),0)])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Expression'))+\" \"),_c('a',{staticClass:\"editgroupname d-none\",attrs:{\"title\":\"@Resources.Edit\",\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-pencil pl-2 text-success\"})])])])]),_c('div',{staticClass:\"border p-3 mt-4 float-left\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-11 mb-2\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelconditionexpression),expression:\"modelconditionexpression\"}],class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'form-control' : 'form-control d-none',attrs:{\"type\":\"text\",\"placeholder\":\"Enter Your Conditions\"},domProps:{\"value\":(_vm.modelconditionexpression)},on:{\"input\":function($event){if($event.target.composing)return;_vm.modelconditionexpression=$event.target.value}}}),_c('small',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If' ? 'text-danger' : 'd-none'},[_vm._v(_vm._s(_vm.ShowDescriptionForFunction))])]),_c('div',{staticClass:\"col-md-1 p-0 my-1\"},[_c('a',{class:_vm.Functionkey == 'Date diff' || _vm.Functionkey == 'Date add' || _vm.Functionkey == 'Date name' || _vm.Functionkey == 'Date part' || _vm.Functionkey == 'If'\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none',on:{\"click\":_vm.AddConditionExpression}})])]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.InputValueExpression),expression:\"InputValueExpression\"}],staticClass:\"border background-white float-left w-100 p-3\",staticStyle:{\"min-height\":\"250px\"},attrs:{\"id\":\"txtarea\"},domProps:{\"value\":(_vm.InputValueExpression)},on:{\"keydown\":function($event){return _vm.deleteuserinput($event)},\"mouseup\":function($event){return _vm.GetCursorPoint($event)},\"select\":function($event){return _vm.UserInputSelection($event)},\"input\":function($event){if($event.target.composing)return;_vm.InputValueExpression=$event.target.value}}}),_c('div',{staticClass:\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\"},[_c('a',{staticClass:\"fa fa-keyboard-o\",on:{\"click\":function($event){return _vm.AddSpace($event)}}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addplussign($event)}}},[_vm._v(\"+\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addsubtractsign($event)}}},[_vm._v(\"-\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addmultiplysign($event)}}},[_vm._v(\"*\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Adddividesign($event)}}},[_vm._v(\"/\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addopenbracketsign($event)}}},[_vm._v(\"(\")]),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.Addclosebracketsign($event)}}},[_vm._v(\")\")])]),_c('div',{staticClass:\"col-12 p-0 float-left\"},[_c('div',{staticClass:\"row flex-row-reverse\"},[_c('div',{staticClass:\"col-12 p-0 float-left\",attrs:{\"id\":\"verifiedid\"}},[(_vm.verifiedvaluedata == 0)?_c('div',{staticClass:\"alert alert-danger alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"InvalidExp\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e(),(_vm.verifiedvaluedata == 1)?_c('div',{staticClass:\"alert alert-success alert-dismissible fade show\",attrs:{\"role\":\"alert\"}},[_vm._v(\" \"+_vm._s(_vm.$t(\"ExpressionVerify\"))),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\",\"data-dismiss\":\"alert\",\"aria-label\":\"Close\"},on:{\"click\":_vm.closed}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])])]):_vm._e()]),_c('div',{staticClass:\"col-lg-12 text-right\"},[_c('a',{staticClass:\"btn btn-success ancsaveuserticket mr-2\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.VerifyExpression}},[_c('em',{staticClass:\"fa fa-check pr-2\"}),_vm._v(\"Verify\")]),_c('a',{staticClass:\"btn btn-danger ancsaveuserticket\",attrs:{\"href\":\"javascript:;\"},on:{\"click\":_vm.ResetExpression}},[_c('em',{staticClass:\"fa fa-refresh pr-2\"}),_vm._v(\"Reset\")])])])])])]),_c('div',{staticClass:\"col-lg-4 mb-0 float-left px-3\"},[_c('div',{staticClass:\"heading-border mb-4\"},[_c('h5',{staticClass:\"h5\"},[_c('span',{staticClass:\"spngropuname\"},[_vm._v(\" \"+_vm._s(_vm.$t('Columns'))+\" \"),_c('div',{staticClass:\"w3-container w3-border w3-large\"})])])]),_c('div',{staticClass:\"mb-0 d-lg-block p-2 border\"},[_c('div',{staticClass:\"input-group customsearchbox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.MainSearchmodel),expression:\"MainSearchmodel\"}],staticClass:\"form-control searchcustomfilter border-right-0\",attrs:{\"type\":\"text\",\"maxlength\":\"50\",\"id\":\"searchinput\",\"placeholder\":\"Search by Name\",\"autocomplete\":\"off\"},domProps:{\"value\":(_vm.MainSearchmodel)},on:{\"keydown\":function($event){return _vm.ListFiltering()},\"keyup\":function($event){return _vm.ListFiltering()},\"mouseup\":_vm.SelectAllSearch,\"mouseleave\":_vm.SelectAllSearch,\"input\":function($event){if($event.target.composing)return;_vm.MainSearchmodel=$event.target.value}}}),_c('div',{staticClass:\"input-group-append\"},[_c('span',{staticClass:\"input-group-text bg-transparent bg-white border-left-0\"})])])]),_c('div',{staticClass:\"accordion md-accordion left-filter\",attrs:{\"id\":\"accordionEx2\"}},[_c('div',{staticClass:\"card-panel\",staticStyle:{\"border-top\":\"1px solid #c7c7c7\"}},_vm._l((_vm.JsonColumns),function(name,index){return _c('div',{key:index,staticClass:\"card\"},[_c('div',{staticClass:\"card-header\",attrs:{\"role\":\"tab\",\"id\":'MainColumn' + index}},[_c('h5',{staticClass:\"mb-0\"},[_c('a',{class:index == 0 ? '' : 'collapsed',attrs:{\"data-toggle\":\"collapse\",\"data-parent\":\"#accordionEx2\",\"href\":'#ColumnCollapse' + index,\"aria-expanded\":index == 0 ? true : false,\"aria-controls\":'ColumnCollapse' + index}},[_c('em',{staticClass:\"fa fa fa-file-text-o\",attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue(name.SubModule)))]),_c('em',{staticClass:\"fa fa-angle-down rotate-icon\",attrs:{\"aria-hidden\":\"true\"}})])])]),_c('div',{class:index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse',attrs:{\"id\":'ColumnCollapse' + index,\"role\":\"tabpanel\",\"aria-labelledby\":'MainColumn' + index,\"data-parent\":\"#accordionEx2\"}},[_c('div',{staticClass:\"card-body p-0 customScrollForLeftBar llt\",staticStyle:{\"max-height\":\"300px\"}},[_c('div',{staticClass:\"form-group\"},[_c('ul',{staticClass:\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\",staticStyle:{\"max-height\":\"305px\",\"overflow\":\"auto\",\"display\":\"block\"}},[_vm._l((_vm.searchColumnfilter.length == 0 ? _vm.modulelisting[index] : _vm.searchColumnfilter[index]),function(element){return [_c('li',{staticClass:\"nav-item parent-element\"},[_c('span',{staticClass:\"nav-link left-menu px-4\"},[_c('em',{class:element.dttype[0].icon + ' ' + 'float-left',attrs:{\"aria-hidden\":\"true\"}}),_c('span',{staticClass:\"text-truncate float-left\",staticStyle:{\"width\":\"55%\"},attrs:{\"data-toggle-tooltip\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName),\"title\":_vm.GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)}},[_vm._v(\" \"+_vm._s(_vm.GetLocalizedValue((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))+\" \")]),_c('a',{attrs:{\"href\":\"javascript:;\"}},[_c('em',{staticClass:\"fa fa-plus float-right mt-1 text-success pr-0\",attrs:{\"aria-hidden\":\"true\"},on:{\"click\":function($event){return _vm.Addfields(element, $event, index)}}})])])])]})],2)])])])])}),0)]),(_vm.SearchNoRecord)?_c('div',{staticClass:\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"},[_vm._v(\" \"+_vm._s(_vm.$t(\"NoRecordfound\")))]):_vm._e()])])])]}}])})],1)])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\r\nimport ExpressionDataService from \"@/services/DataService\";\r\nexport default {\r\n    props: {\r\n        customreportparameters: {\r\n            type: Object\r\n        },\r\n        ExpDataArray: {\r\n            type: Array\r\n        },\r\n        editexpressionvalue: {\r\n            type: Boolean\r\n        },\r\n        ExpFieldDataArray: {\r\n            type: Array\r\n        },\r\n        Columnlist: {\r\n            type: Array\r\n        },\r\n        AlreadyExistExpression: {\r\n            typeL: Object\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            JsonColumns: [],\r\n            modulelisting: [],\r\n            FunctionsName: [],\r\n            Functionskey: [],\r\n            ResponseColumnData: [],\r\n            ResponseFunctionData: [],\r\n            watchvalue: false,\r\n            FieldsValue: '',\r\n            FunctionValue: '',\r\n            AddBracketValue: '',\r\n            SubtractBracketValue: '',\r\n            MultplyBracketValue: '',\r\n            DivideBracketValue: '',\r\n            OpenBracketExpValue: '',\r\n            CloseBracketExpValue: '',\r\n            InputValueExpression: '',\r\n            FieldData: [],\r\n            fieldatavalue: [],\r\n            reqFrom: 'Reporting',\r\n            isLoading: false,\r\n            verifiedvalue: false,\r\n            modelfieldname: '',\r\n            substringvalue: '',\r\n            verifiedvaluedata: null,\r\n            verifyErrorMsg: '',\r\n            InputValueArray: [],\r\n            InputValueExpressionByID: '',\r\n            FunctionValueArray: 'No_Value',\r\n            selecteduserinput: null,\r\n            selecteduserinputbyid: null,\r\n            ExpressionIDvalue: '',\r\n            updateexpresion: true,\r\n            fieldadded: false,\r\n            FieldTableNameValue: '',\r\n            GetCommaSeparatedValue: '',\r\n            countbyfield: 0,\r\n            modelconditionexpression: '',\r\n            conditionexpression: false,\r\n            Functionkey: null,\r\n            ShowDescriptionForFunction: null,\r\n            checkbycondition: 0,\r\n            searchColumnfilter: [],\r\n            MainSearchmodel: '',\r\n            SearchNoRecord: false,\r\n            GetSelectedValue:'',\r\n            FormSchema: [\r\n                {\r\n                    layoutType: \"single\",\r\n                    Data: [\r\n                        {\r\n                            astype: \"TextField\",\r\n                            label: this.$t('fieldName'),\r\n                            name: \"fieldName\",\r\n                            value: \"\",\r\n                            placeholder: \"Enter Field Name\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            // validationRules: \"required\",\r\n                            validationRules: { \"required\": true, max: 100 },\r\n\r\n                        },\r\n                        {\r\n                            astype: \"SlotField\",\r\n                            label: '',\r\n                            name: \"CalculatedUIList\",\r\n                            value: \"\",\r\n                            placeholder: \"\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                                onChange: this.onChangeDropdown\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ],\r\n            buttons: [\r\n                {\r\n                    type: \"submit\",\r\n                    class: \"btn btn-success mr-2 my-sm-0 disabled\",\r\n                    text: \"<i class='fa fa-save pr-2'></i>Submit\",\r\n                },\r\n                {\r\n                    type: \"button\",\r\n                    class: \"btn btn-primary delete-btn mr-2 my-sm-0\",\r\n                    text: \"<i class='fa fa-times pr-2'></i>Cancel\",\r\n                    onClick: this.CancelExpressionUI\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created() {\r\n        var vm = this;\r\n        vm.GetColumnList(vm.customreportparameters);\r\n        if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0) {\r\n            vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n        }\r\n        vm.GetFunctionList();\r\n    },\r\n    mounted: function () {\r\n        $('#showcalculatedfield').modal({\r\n            backdrop: 'static',\r\n            keyboard: false\r\n        })\r\n    },\r\n    watch: {\r\n        watchvalue(newval) {\r\n            var vm = this;\r\n            if (newval) {\r\n                vm.GetColumnList(vm.customreportparameters);\r\n                vm.GetFunctionList();\r\n                vm.watchvalue = false;\r\n                $(\"#Submitbtn\").addClass('disabled');\r\n                if (vm.editexpressionvalue == true && vm.ExpDataArray.length > 0 && vm.updateexpresion == true) {\r\n                    vm.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        close() {\r\n            $(\"#showcalculatedfield\").modal(\"hide\"); $(\"body\").removeClass(\"modal-open\");\r\n            $(\".modal-backdrop\").remove();\r\n            this.$emit('close');\r\n            // this.modelfieldname = '';\r\n            this.FormSchema[0].Data[0].value = '';\r\n            // this.FormSchema[0].Data[0].validationRules = '';\r\n            this.ExpressionIDvalue = '';\r\n            this.ResetExpression();\r\n            //this.$refs.form.setFieldTouched('modelfieldname', false);\r\n        },\r\n        GetColumnList(customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                ExpressionDataService.GetListFields(params).then(response => {\r\n                    vm.JsonColumns = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.JsonColumns.forEach((item) => {\r\n                        vm.modulelisting.push([...item.CustomFields.sort((FirstValue, SecondValue) => vm.$t(FirstValue.DisplayName).localeCompare(vm.$t(SecondValue.DisplayName)))]);\r\n                    })\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        GetFunctionList() {\r\n            var vm = this;\r\n            ExpressionDataService.GetFunctionList().then(res => {\r\n                vm.FunctionsName = res.data.AVAILABLE_FIELDS[0];\r\n                vm.FunctionsName.forEach((name) => {\r\n                    vm.Functionskey.push(name.Functions);\r\n                })\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        Addfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.modelconditionexpression == '') { vm.FieldData.push({ CustomFieldId: element.CustomFieldId, FieldName: element.FieldName }); }\r\n\r\n            if (vm.substringvalue == '') {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                            MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('')\r\n                        vm.fieldadded = true;\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName),\r\n                        MatchIndex: vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName).length, SameName: 'Field_Added' + cursorpos\r\n                    });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.fieldadded = false;\r\n                }\r\n                // $(\"#Submitbtn\").addClass('disabled');\r\n            }\r\n            else {\r\n                if (typeof vm.fieldatavalue == 'object') {\r\n                    var convertarr = String(vm.fieldatavalue.map(x => x.FieldValueData));\r\n                    vm.fieldatavalue = convertarr\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\",\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.fieldatavalue.indexOf(vm.fieldatavalue.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                else {\r\n                    var firstindex = vm.fieldatavalue.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.fieldatavalue.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.fieldatavalue.substring(firstindex, secondindex);\r\n                vm.FunctionValueArray = vm.substringvalue;\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarr = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarr;\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0],\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue[0], element)\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    // $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue,\r\n                            vm.$t((element.DisplayName != null && element.DisplayName != \"\") ? element.DisplayName : element.FieldName))\r\n                    }\r\n                    else {\r\n                        vm.FieldsValue = vm.fieldatavalue.replace(vm.substringvalue, element);\r\n                    }\r\n                    // vm.fieldatavalue = vm.FieldsValue;\r\n                    vm.fieldatavalue = [];\r\n                    vm.fieldatavalue.push({\r\n                        FieldValueData: vm.FieldsValue,\r\n                        MatchIndex: vm.FieldsValue.length, SameName: 'Field_Added' + vm.FieldsValue.length\r\n                    });\r\n                    // $(\"#Submitbtn\").addClass('disabled');\r\n\r\n                }\r\n            }\r\n            $(\"#Submitbtn\").addClass('disabled');\r\n            if (!vm.conditionexpression && vm.checkbycondition == 0) {\r\n                if (element.IsSystemGenerated) {\r\n                    vm.FieldTableNameValue = element.TableName + '.' + element.FieldName;\r\n                }\r\n                else {\r\n                    vm.FieldTableNameValue = element.TableName + '_customfield.' + element.FieldName;\r\n                }\r\n                // $(event.target).closest(\".parent-element\").remove();\r\n            } else { vm.FieldTableNameValue = element; }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid(element, checkindex, getdata, cursorpos);\r\n        },\r\n        AddFunctionsfields(element, event, index) {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == null || vm.InputValueExpression == undefined || vm.InputValueExpression == \"\") {\r\n                if (typeof vm.fieldatavalue == 'string') {\r\n                    var substringarr = vm.fieldatavalue.split(',')\r\n                    vm.fieldatavalue = substringarr;\r\n                }\r\n                vm.fieldatavalue.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: element.Value, MatchIndex: element.Value.length, SameName: 'Function_Added' });\r\n                vm.Functionkey = element.Keys;\r\n                vm.DescriptionForFunction();\r\n                if (element.Keys == \"Case\") {\r\n                    vm.substringvalue = ''\r\n                } else { vm.substringvalue = \"Function_Added\"; }\r\n                $(event.target).closest(\".parent-element\").remove();\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                if(vm.fieldatavalue[0].SameName.includes('Function_Added')){\r\n                    vm.ShowAlert(vm.$t('ErrorFunctionExpression'), \"Failure\");\r\n                }else{\r\n                    vm.ShowAlert(vm.$t('ErrorFieldExpression'), \"Failure\");}\r\n            }\r\n        },\r\n        Addopenbracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var openbracketexpsign = '('\r\n            var openbracket = openbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: openbracket, MatchIndex: openbracket.length, SameName: 'Open_BracketAdded' + cursorpos })\r\n            }\r\n            vm.substringvalue = '';\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addclosebracketsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var closebracketexpsign = ')'\r\n            var closebracket = closebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: closebracket, MatchIndex: closebracket.length, SameName: 'Close_BracketAdded' + cursorpos })\r\n            }\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addplussign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var addbracketexpsign = '+';\r\n            var Addsign = addbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: Addsign, MatchIndex: Addsign.length, SameName: 'AddedPlus' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addsubtractsign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var subtractbracketexpsign = '-';\r\n            var subtractsign = subtractbracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: subtractsign, MatchIndex: subtractsign.length, SameName: 'AddedSubtract' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Addmultiplysign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var multiplybracketexpsign = '*';\r\n            var multiplysign = multiplybracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: multiplysign, MatchIndex: multiplysign.length, SameName: 'AddedMultiply' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        Adddividesign() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var dividebracketexpsign = '/';\r\n            var dividesign = dividebracketexpsign.split('');\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 1) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos\r\n                    })\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dividesign, MatchIndex: dividesign.length, SameName: 'AddedDivide' + cursorpos })\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n            vm.updatevaluebyid();\r\n        },\r\n        AddSpace() {\r\n            var vm = this;\r\n            if (typeof vm.fieldatavalue == 'string') {\r\n                var substringarr = vm.fieldatavalue.split(',')\r\n                vm.fieldatavalue = substringarr;\r\n            }\r\n            var spaceaddingexp = ' ';\r\n            var addedspace = spaceaddingexp.split('');\r\n            var addedspacefordb = spaceaddingexp.replaceAll(' ', \"+' '+\");\r\n            var cursorpos = vm.GetCursorPoint();\r\n            var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n            if (getdata.length > 0) {\r\n                var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                if (checkindex > -1) {\r\n                    vm.fieldatavalue.splice(checkindex, 0, {\r\n                        FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.splice(checkindex, 0, {\r\n                        FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos\r\n                    })\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n                }\r\n            } else {\r\n                vm.fieldatavalue.push({ FieldValueData: addedspace, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: addedspacefordb, MatchIndex: addedspace.length, SameName: 'addedspace' + cursorpos })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('');\r\n            }\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.updatingvalue();\r\n        },\r\n        ResetExpression() {\r\n            var vm = this;\r\n            vm.FieldsValue = '';\r\n            vm.FunctionValue = '';\r\n            vm.AddBracketValue = '';\r\n            vm.SubtractBracketValue = '';\r\n            vm.MultplyBracketValue = '';\r\n            vm.DivideBracketValue = '';\r\n            vm.OpenBracketExpValue = '';\r\n            vm.CloseBracketExpValue = '';\r\n            vm.modulelisting.splice(0);\r\n            vm.Functionskey.splice(0);\r\n            vm.InputValueExpression = '';\r\n            vm.InputValueExpressionByID = '';\r\n            vm.InputValueArray = [];\r\n            vm.FieldData = [];\r\n            vm.fieldatavalue = [];\r\n            vm.watchvalue = true;\r\n            vm.updateexpresion = false;\r\n            vm.verifiedvaluedata = null;\r\n            vm.FunctionValueArray = 'No_Value';\r\n            vm.GetCommaSeparatedValue = '';\r\n            vm.countbyfield = 0;\r\n            vm.modelconditionexpression = '';\r\n            vm.Functionkey = null;\r\n            vm.ShowDescriptionForFunction = null;\r\n            vm.conditionexpression = false;\r\n            vm.checkbycondition = 0;\r\n            vm.substringvalue = '';\r\n        },\r\n        updatevaluebyid(elem, checkindex, getdata, cursorpos) {\r\n            var vm = this;\r\n            if (vm.FunctionValueArray == vm.substringvalue) {\r\n                if (typeof vm.InputValueArray == 'object') {\r\n                    var convertarrid = String(vm.InputValueArray.map(x => x.FieldValueData));\r\n                    vm.InputValueArray = convertarrid\r\n                }\r\n                if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield == 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(\",\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield = vm.countbyfield + 1 + 1;\r\n                }\r\n                else if (vm.GetCommaSeparatedValue == \"CommaSeparatedValue\" && vm.countbyfield > 0 && !vm.conditionexpression) {\r\n                    var firstindex = vm.InputValueArray.indexOf(vm.InputValueArray.split(\",\")[vm.countbyfield]);\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                    vm.countbyfield++;\r\n                }\r\n                else {\r\n                    var firstindex = vm.InputValueArray.indexOf(\"(\") + 1;\r\n                    var secondindex = vm.InputValueArray.indexOf(\")\")\r\n                }\r\n                vm.substringvalue = vm.InputValueArray.substring(firstindex, secondindex);\r\n                if (vm.substringvalue.includes(',')) {\r\n                    var substringarrid = vm.substringvalue.split(',')\r\n                    vm.substringvalue = substringarrid;\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue[0], vm.FieldTableNameValue)\r\n                    vm.InputValueArray = [];\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.GetCommaSeparatedValue = \"CommaSeparatedValue\"\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                } else {\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.replace(vm.substringvalue, vm.FieldTableNameValue)\r\n                    // vm.InputValueArray = vm.InputValueExpressionByID;\r\n                    vm.InputValueArray = [];\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.InputValueExpressionByID,\r\n                        MatchIndex: vm.InputValueExpressionByID.length,\r\n                        SameName: 'Field_Added' + vm.InputValueExpressionByID.length,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.substringvalue = '';\r\n                    $(\"#Submitbtn\").addClass('disabled');\r\n                }\r\n                vm.modelconditionexpression = '';\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = 0;\r\n            }\r\n            else if (elem != undefined) {\r\n                if (vm.fieldadded) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: vm.FieldTableNameValue,\r\n                            MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                            SameName: 'Field_Added' + cursorpos,\r\n                            CustomFieldId: elem.CustomFieldId\r\n                        }\r\n                        )\r\n                        vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                    }\r\n                }\r\n                else {\r\n                    vm.InputValueArray.push({\r\n                        FieldValueData: vm.FieldTableNameValue,\r\n                        MatchIndex: vm.$t((elem.DisplayName != null && elem.DisplayName != \"\") ? elem.DisplayName : elem.FieldName).length,\r\n                        SameName: 'Field_Added' + cursorpos,\r\n                        CustomFieldId: elem.CustomFieldId\r\n                    });\r\n                    vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                }\r\n            }\r\n            else {\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n            }\r\n        },\r\n        updatingvalue() {\r\n            var vm = this;\r\n            if (typeof vm.InputValueExpression == 'object') {\r\n                var convertstr = String(vm.InputValueExpression)\r\n                vm.InputValueExpression = convertstr;\r\n            }\r\n            else {\r\n                vm.InputValueExpression = vm.FieldsValue;\r\n            }\r\n        },\r\n        deleteuserinput(event) {\r\n            var vm = this;\r\n            const key = event.key;\r\n            if (event.code === 'Space') { vm.AddSpace(); }\r\n            else if (event.keyCode >= 9 && event.keyCode <= 45 || event.keyCode > 90 && event.keyCode <= 93 || event.keyCode >= 112 && event.keyCode <= 167) {\r\n                event.preventDefault();\r\n            }\r\n            else if (key === 'Backspace' || event.keyCode === 8 || event.keyCode === 46) {\r\n                var cursorposition = vm.GetCursorPoint();\r\n                cursorposition = cursorposition - 1;\r\n                let assignindex;\r\n                vm.fieldatavalue.forEach(item => {\r\n                    if (item.MatchIndex < cursorposition) {\r\n                        assignindex = cursorposition - item.MatchIndex;\r\n                        cursorposition = assignindex;\r\n                    }\r\n                    else {\r\n                        if (cursorposition != 0) {\r\n                            let getindexofexp = vm.fieldatavalue.findIndex(x => x.SameName === item.SameName);\r\n                            let getfieldindex = vm.FieldData.findIndex(f => f.CustomFieldId === item.CustomFieldId);\r\n                            if (getindexofexp > -1) {\r\n                                vm.fieldatavalue.splice(getindexofexp, 1);\r\n                                vm.InputValueArray.splice(getindexofexp, 1);\r\n                                if (getfieldindex > -1) {\r\n                                    vm.FieldData.splice(getfieldindex, 1);\r\n                                }\r\n                                if (vm.fieldatavalue.length > 0) {\r\n                                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                                } else {\r\n                                    vm.FieldsValue = vm.fieldatavalue.join('');\r\n                                    vm.substringvalue = '';\r\n                                }\r\n                                cursorposition = 0;\r\n                                vm.Functionkey = null;\r\n                            }\r\n                        }\r\n                    }\r\n                })\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            else {\r\n                var cursorpos = vm.GetCursorPoint();\r\n                var getdata = vm.SetValueOnCursorPosition(cursorpos);\r\n                if (getdata.length > 1) {\r\n                    var checkindex = vm.InputValueArray.findIndex(x => x.FieldValueData === getdata[0].FieldValueData);\r\n                    if (checkindex > -1) {\r\n                        vm.fieldatavalue.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                        vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                        vm.InputValueArray.splice(checkindex, 0, {\r\n                            FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos\r\n                        })\r\n                    }\r\n                } else {\r\n                    vm.fieldatavalue.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                    vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                    vm.InputValueArray.push({ FieldValueData: key, MatchIndex: key.length, SameName: 'User-input' + cursorpos });\r\n                }\r\n                vm.updatingvalue();\r\n                vm.updatevaluebyid();\r\n            }\r\n            vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0 disabled\";\r\n            event.preventDefault();\r\n        },\r\n        UserInputSelection(userinput) {\r\n            var vm = this;\r\n            vm.selecteduserinput = userinput.target.selectionStart;\r\n            vm.selecteduserinputbyid = vm.InputValueArray.length;\r\n        },\r\n        ExpresssionDataValue(data, fieldsdata) {\r\n            var vm = this;\r\n            //vm.ResetExpression();\r\n            data.forEach(dataitem => {\r\n                vm.ExpressionIDvalue = dataitem.ExpressionID;\r\n                // vm.modelfieldname = dataitem.ExpressionName;\r\n                vm.FormSchema[0].Data[0].value = dataitem.ExpressionName;\r\n                vm.fieldatavalue.push({ FieldValueData: dataitem.ExpressionDisplay, MatchIndex: dataitem.ExpressionDisplay.length, SameName: 'EditedExp' });\r\n                vm.FieldsValue = vm.fieldatavalue.map(x => x.FieldValueData).join('');\r\n                vm.InputValueArray.push({ FieldValueData: dataitem.Expression, MatchIndex: dataitem.Expression.length, SameName: 'EditedExp' })\r\n                vm.InputValueExpressionByID = vm.InputValueArray.map(x => x.FieldValueData).join('')\r\n                vm.updatingvalue();\r\n            })\r\n            fieldsdata.forEach(item => {\r\n                vm.FieldData.push({ CustomFieldId: item.CustomFieldId, FieldName: item.FieldName, ColumnIndex: item.ColumnIndex });\r\n            })\r\n        },\r\n        VerifyExpression() {\r\n            var vm = this;\r\n            if (vm.InputValueExpression == '') {\r\n                vm.ShowAlert(vm.$t(\"Expressionemmty\"), 'failure', true, vm.$t('Alert'));\r\n            } else {\r\n                var jsondata = {\r\n                    \"Info\": {\r\n                        \"Expression\": encodeURIComponent(vm.InputValueExpressionByID),\r\n                        \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                        \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                        \"FunctionExpression\": vm.Functionkey,\r\n                        \"FIELDS\": vm.FieldData\r\n                    }\r\n                }\r\n                var jsonvalue = `JsonData=${JSON.stringify(jsondata)}`;\r\n                vm.isLoading = true;\r\n                ExpressionDataService.VerifyExpressionFromDB(jsonvalue).then(res => {\r\n                    if (res.data.Result == \"True\") {\r\n                        vm.verifiedvaluedata = 1;\r\n                        vm.isLoading = false;\r\n                        vm.buttons[0].class = \"btn btn-success mr-2 my-sm-0\";\r\n                        vm.verifiedvalue = true;\r\n                    }\r\n                    else {\r\n                        vm.verifiedvaluedata = 0;\r\n                        vm.isLoading = false;\r\n                    }\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                })\r\n            }\r\n        },\r\n        SubmitExpression() {\r\n            var vm = this;\r\n            var InavalidExpression = true;\r\n            if (!vm.editexpressionvalue) {\r\n                var checkeditfieldexist = vm.Columnlist.findIndex(x => x.FieldName === vm.FormSchema[0].Data[0].value);\r\n                if (checkeditfieldexist != -1) {\r\n                    InavalidExpression = false;\r\n                    vm.ShowAlert(vm.$t(\"ExpressionExist\"), 'failure', true, vm.$t('Alert'));\r\n                } else { InavalidExpression = true }\r\n            }\r\n            if (InavalidExpression) {\r\n                if (vm.verifiedvalue && vm.FormSchema[0].Data[0].value != '') {\r\n                    this.$emit('VerifiedExpressionData', {\r\n                        ExpressionID: vm.ExpressionIDvalue,\r\n                        FieldValue: vm.FormSchema[0].Data[0].value,\r\n                        VerifiedExpression: vm.InputValueExpressionByID,\r\n                        ExpressionFieldArray: vm.FieldData,\r\n                        ExpressionDisplay: vm.InputValueExpression,\r\n                        Functionkey: vm.Functionkey,\r\n                        IsEdit: vm.editexpressionvalue,\r\n                        IsExpExist: vm.AlreadyExistExpression\r\n                    })\r\n                    vm.verifiedvalue = false;\r\n                }\r\n            }\r\n        },\r\n        CancelExpressionUI() {\r\n            var vm = this;\r\n            vm.close();\r\n        },\r\n        closed() {\r\n            var vm = this;\r\n            vm.verifiedvaluedata = null;\r\n        },\r\n        GetCursorPoint(e) {\r\n            var vm = this;\r\n            var cursorpos1 = document.getElementById(\"txtarea\");\r\n            cursorpos1.focus();\r\n            var cursorpos = document.getElementById(\"txtarea\").selectionStart;\r\n            cursorpos = cursorpos + 1;\r\n            return cursorpos;\r\n        },\r\n        SetValueOnCursorPosition(cursorpos) {\r\n            var vm = this;\r\n            var returndata = []\r\n            var assignindex;\r\n            vm.InputValueArray.forEach(item => {\r\n                if (item.MatchIndex < cursorpos) {\r\n                    assignindex = cursorpos - item.MatchIndex;\r\n                    cursorpos = assignindex;\r\n                }\r\n                else if (item.MatchIndex > cursorpos || cursorpos == 1) {\r\n                    returndata.push(item)\r\n                }\r\n            })\r\n            return returndata;\r\n        },\r\n        AddConditionExpression() {\r\n            var vm = this;\r\n            vm.conditionexpression = true;\r\n            if (vm.Functionkey == 'Date add' && vm.GetCommaSeparatedValue == 'CommaSeparatedValue') {\r\n                vm.conditionexpression = false;\r\n                vm.checkbycondition = vm.checkbycondition + 1;\r\n            }\r\n            vm.Addfields(vm.modelconditionexpression);\r\n        },\r\n        DescriptionForFunction() {\r\n            var vm = this;\r\n            if (vm.Functionkey == 'Date diff') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date add') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day) Number(1,2,3,nth.)';\r\n            }\r\n            else if (vm.Functionkey == 'Date name') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'Date part') {\r\n                vm.ShowDescriptionForFunction = 'Interval(Year,Month,Day)';\r\n            }\r\n            else if (vm.Functionkey == 'If') {\r\n                vm.ShowDescriptionForFunction = 'BooleanExpression,True Value, False Value';\r\n            }\r\n        },\r\n        SelectAllSearch(){\r\n            var vm = this;\r\n            vm.GetSelectedValue = window.getSelection().toString()\r\n        },\r\n        ListFiltering() {\r\n            var vm = this;\r\n           \r\n            var filterinput = vm.MainSearchmodel;\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".column-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".column-collapse\").removeClass(\"show\");\r\n            }\r\n            if(vm.GetSelectedValue != ''){\r\n                filterinput = filterinput.replaceAll(vm.GetSelectedValue,'')\r\n                vm.GetSelectedValue = '';\r\n            }\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchcol = searchfilter.filter(searchitem => {\r\n                        var displayMainColname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                })\r\n                vm.searchColumnfilter[index] = searchcol;\r\n                searchfilter = [];\r\n            })\r\n            let count = 0;\r\n            for (let filteritem in vm.searchColumnfilter) {\r\n                if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                    count++;\r\n                }\r\n            }\r\n            if (count > 0) {\r\n                vm.SearchNoRecord = false\r\n            } else { vm.SearchNoRecord = true; }\r\n            return vm.searchColumnfilter;\r\n        }\r\n    }\r\n}\r\n</script>\r\n<template>\r\n    <div id=\"showcalculatedfield\" role=\"dialog\" class=\"modal my-popups centre fade\" v-cloak>\r\n        <div role=\"document\" class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header mheader-user\">\r\n                    <button type=\"button\" class=\"close\" v-on:click=\"close()\">\r\n                        <em aria-hidden=\"true\" class=\"fa fa-times\"></em>\r\n                    </button>\r\n                    <h4 id=\"myModalLabel\" class=\"modal-title\">{{ $t('customField') }}</h4>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <loader :is-visible=\"isLoading\"></loader>\r\n                    <dynamic-form lang=\"en\" :buttons=\"buttons\" :schema=\"FormSchema\" v-on:OnSubmit=\"SubmitExpression()\">\r\n                        <template v-slot:tgslot-CalculatedUIList=\"{ data }\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 p-0 float-left\">\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Functions') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx1\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx1\"\r\n                                                                :href=\"'#FucntionCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'FucntionCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ name.FuncType }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'FucntionCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse show' : 'collapse multi-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                        data-parent=\"#accordionEx1\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                                    <template v-for=\"element in Functionskey[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em class=\"fa fa-bullhorn float-left\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"element.Keys\"\r\n                                                                                    :title=\"element.Keys\">\r\n                                                                                    {{ element.Keys }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Expression') }}\r\n                                                    <a title=\"@Resources.Edit\" href=\"javascript:;\"\r\n                                                        class=\"editgroupname d-none\"><em\r\n                                                            class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"border p-3 mt-4 float-left\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col-md-11 mb-2\">\r\n                                                    <input :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                        v-model=\"modelconditionexpression\"\r\n                                                        placeholder=\"Enter Your Conditions\" />\r\n                                                    <small\r\n                                                        :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If' ? 'text-danger' : 'd-none'\">{{\r\n                                                            ShowDescriptionForFunction }}</small>\r\n                                                </div>\r\n                                                <div class=\"col-md-1 p-0 my-1\">\r\n                                                    <a :class=\"Functionkey == 'Date diff' || Functionkey == 'Date add' || Functionkey == 'Date name' || Functionkey == 'Date part' || Functionkey == 'If'\r\n                                                        ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                        @click=\"AddConditionExpression\"></a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                                style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                                @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                                v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                            <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                                <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                                <a href=\"javascript:;\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                            </div>\r\n\r\n                                            <div class=\"col-12 p-0 float-left\">\r\n                                                <div class=\"row flex-row-reverse\">\r\n                                                    <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                        <div class=\"alert alert-danger alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 0\">\r\n                                                            {{ $t(\"InvalidExp\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div class=\"alert alert-success alert-dismissible fade show\"\r\n                                                            role=\"alert\" v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                            {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                                data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                                <span aria-hidden=\"true\">×</span>\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"col-lg-12 text-right\">\r\n                                                        <a href=\"javascript:;\"\r\n                                                            class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                            v-on:click=\"VerifyExpression\">\r\n                                                            <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                        <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                            v-on:click=\"ResetExpression\">\r\n                                                            <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                        <div class=\"heading-border mb-4\">\r\n                                            <h5 class=\"h5\">\r\n                                                <span class=\"spngropuname\">\r\n                                                    {{ $t('Columns') }}\r\n                                                    <div class=\"w3-container w3-border w3-large\"></div>\r\n                                                </span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                            <div class=\"input-group customsearchbox\">\r\n                                                <input type=\"text\" maxlength=\"50\" v-on:keydown=\"ListFiltering()\" \r\n                                                    v-on:keyup=\"ListFiltering()\" v-on:mouseup=\"SelectAllSearch\" v-on:mouseleave=\"SelectAllSearch\"\r\n                                                    id=\"searchinput\" v-model=\"MainSearchmodel\"\r\n                                                    placeholder=\"Search by Name\"\r\n                                                    class=\"form-control searchcustomfilter border-right-0\"\r\n                                                    autocomplete=\"off\">\r\n                                                <div class=\"input-group-append\">\r\n                                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"accordion md-accordion left-filter\" id=\"accordionEx2\">\r\n                                            <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                                <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                                    <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                        <h5 class=\"mb-0\"><a data-toggle=\"collapse\"\r\n                                                                data-parent=\"#accordionEx2\"\r\n                                                                :href=\"'#ColumnCollapse' + index\"\r\n                                                                :aria-expanded=\"index == 0 ? true : false\"\r\n                                                                :aria-controls=\"'ColumnCollapse' + index\"\r\n                                                                :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                                                    class=\"fa fa fa-file-text-o\"\r\n                                                                    aria-hidden=\"true\"></em><span class=\"font-weight-bold\">\r\n                                                                    {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                                    class=\"fa fa-angle-down rotate-icon\"\r\n                                                                    aria-hidden=\"true\"></em></a>\r\n                                                        </h5>\r\n                                                    </div>\r\n                                                    <div :id=\"'ColumnCollapse' + index\"\r\n                                                        :class=\"index == 0 ? 'collapse multi-collapse column-collapse show' : 'collapse multi-collapse column-collapse'\"\r\n                                                        role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                        data-parent=\"#accordionEx2\">\r\n                                                        <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                            style=\"max-height:300px;\">\r\n                                                            <div class=\"form-group\">\r\n                                                                <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                                    style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                                    <template\r\n                                                                        v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\">\r\n                                                                        <li class=\"nav-item parent-element\">\r\n                                                                            <span class=\"nav-link left-menu px-4 \">\r\n                                                                                <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                                    aria-hidden=\"true\"></em>\r\n                                                                                <span class=\"text-truncate float-left\"\r\n                                                                                    style=\"width: 55%;\"\r\n                                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\"\r\n                                                                                    :title=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\">\r\n                                                                                    {{\r\n                                                                                        GetLocalizedValue((element.DisplayName\r\n                                                                                            !=\r\n                                                                                            null &&\r\n                                                                                            element.DisplayName != \"\") ?\r\n                                                                                            element.DisplayName : element.FieldName)\r\n                                                                                    }}\r\n                                                                                </span>\r\n                                                                                <a href=\"javascript:;\"><em\r\n                                                                                        class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                        aria-hidden=\"true\"\r\n                                                                                        @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                            </span>\r\n                                                                        </li>\r\n                                                                    </template>\r\n                                                                </ul>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div v-if=\"SearchNoRecord\"\r\n                                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                            {{\r\n                                                $t(\"NoRecordfound\") }}</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <!-- <Form v-slot=\"{ values, meta }\" ref=\"form\">\r\n                        <div class=\"col-12 mt-0 mb-4 p-0\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{ $t('fieldName') }}<span class=\"text-danger\">*</span></label>\r\n                                <Field name=\"modelfieldname\" :rules=\"{ 'required': true }\" label=\"Field Name\"\r\n                                    v-slot=\"{ field, errorMessage, meta }\" v-model=\"modelfieldname\">\r\n                                    <input v-bind=\"field\" placeholder=\"Enter Field Name\"\r\n                                        :class=\"{ 'form-control': true, 'is-invalid': meta.touched && !meta.valid }\"\r\n                                        type=\"text\" maxlength=\"50\" />\r\n                                    <span name=\"modelfieldname\" v-if=\"meta.touched && !meta.valid\"\r\n                                        class=\"invalid-feedback d-block\">{{\r\n                                            errorMessage\r\n                                        }}</span>\r\n                                </Field>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </Form> -->\r\n                            <!-- <div class=\"row\">\r\n                        <div class=\"col-12 p-0 float-left\">\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Functions') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in FunctionsName\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainFunction' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#FucntionCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'FucntionCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ name.FuncType }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'FucntionCollapse' + index\" class=\"collapse multi-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainFunction' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 214px; overflow: auto; display: block;\">\r\n                                                            <template v-for=\"element in Functionskey[index]\">\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em class=\"fa fa-bullhorn float-left\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.Keys\"\r\n                                                                            :title=\"element.Keys\">\r\n                                                                            {{ element.Keys }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"AddFunctionsfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Expression') }}\r\n                                            <a title=\"@Resources.Edit\" href=\"javascript:;\" class=\"editgroupname d-none\"><em\r\n                                                    class=\"fa fa-pencil pl-2 text-success\"></em></a>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"border p-3 mt-4 float-left\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-11 mb-2\">\r\n                                            <input :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'form-control' : 'form-control d-none'\" type=\"text\"\r\n                                                v-model=\"modelconditionexpression\" placeholder=\"Enter Your Conditions\" />\r\n                                            <small :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If' ? 'text-danger': 'd-none'\">{{ ShowDescriptionForFunction }}</small>\r\n                                        </div>\r\n                                        <div class=\"col-md-1 p-0 my-1\">\r\n                                            <a :class=\"Functionkey == 'Datediff' || Functionkey == 'Dateadd' || Functionkey == 'Datename' || Functionkey == 'Datepart' || Functionkey == 'If'\r\n                                                ? 'fa fa-play text-success' : 'fa fa-play text-success d-none'\"\r\n                                                @click=\"AddConditionExpression\"></a>\r\n                                        </div>\r\n                                    </div>\r\n                                    <textarea class=\"border background-white float-left w-100 p-3\" id=\"txtarea\"\r\n                                        style=\"min-height: 250px;\" v-model=\"InputValueExpression\"\r\n                                        @keydown=\"deleteuserinput($event)\" @mouseup=\"GetCursorPoint($event)\"\r\n                                        v-on:select=\"UserInputSelection($event)\"></textarea>\r\n                                    <div class=\"expressionbx mb-4 bg-grey text-right float-left w-100 py-2 border\">\r\n                                        <a class=\"fa fa-keyboard-o\" v-on:click=\"AddSpace($event)\"></a>\r\n                                        <a href=\"#\" v-on:click=\"Addplussign($event)\">+</a>\r\n                                        <a href=\"#\" v-on:click=\"Addsubtractsign($event)\">-</a>\r\n                                        <a href=\"#\" v-on:click=\"Addmultiplysign($event)\">*</a>\r\n                                        <a href=\"#\" v-on:click=\"Adddividesign($event)\">/</a>\r\n                                        <a href=\"#\" v-on:click=\"Addopenbracketsign($event)\">(</a>\r\n                                        <a href=\"#\" v-on:click=\"Addclosebracketsign($event)\">)</a>\r\n                                    </div>\r\n\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <div class=\"row flex-row-reverse\">\r\n                                            <div class=\"col-12 p-0 float-left\" id=\"verifiedid\">\r\n                                                <div class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 0\">\r\n                                                    {{ verifyErrorMsg }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\r\n                                                    v-if=\"verifiedvaluedata == 1\">\r\n\r\n                                                    {{ $t(\"ExpressionVerify\") }}<button type=\"button\" class=\"close\"\r\n                                                        data-dismiss=\"alert\" @click=\"closed\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">×</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-lg-12 text-right\">\r\n                                                <a href=\"javascript:;\" class=\"btn btn-success ancsaveuserticket mr-2\"\r\n                                                    v-on:click=\"VerifyExpression\">\r\n                                                    <em class=\"fa fa-check pr-2\"></em>Verify</a>\r\n                                                <a href=\"javascript:;\" class=\"btn btn-danger ancsaveuserticket\"\r\n                                                    v-on:click=\"ResetExpression\">\r\n                                                    <em class=\"fa fa-refresh pr-2\"></em>Reset</a>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-lg-4 mb-0 float-left px-3\">\r\n                                <div class=\"heading-border mb-4\">\r\n                                    <h5 class=\"h5\">\r\n                                        <span class=\"spngropuname\">\r\n                                            {{ $t('Columns') }}\r\n                                            <div class=\"w3-container w3-border w3-large\"></div>\r\n                                        </span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class=\"mb-0 d-lg-block p-2 border\">\r\n                                    <div class=\"input-group customsearchbox\">\r\n                                        <input type=\"text\" maxlength=\"50\" v-on:keyup=\"ListFiltering\" id=\"searchinput\"\r\n                                            v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                            class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\">\r\n                                    <div class=\"card-panel\" style=\"border-top:1px solid #c7c7c7;\">\r\n                                        <div class=\"card\" v-for=\"(name, index) in JsonColumns\" :key=\"index\">\r\n                                            <div class=\"card-header\" role=\"tab\" :id=\"'MainColumn' + index\">\r\n                                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                                        :href=\"'#ColumnCollapse' + index\" aria-expanded=\"false\"\r\n                                                        :aria-controls=\"'ColumnCollapse' + index\" class=\"\"><em\r\n                                                            class=\"fa fa fa-file-text-o\" aria-hidden=\"true\"></em><span\r\n                                                            class=\"font-weight-bold\">\r\n                                                            {{ GetLocalizedValue(name.SubModule) }}</span><em\r\n                                                            class=\"fa fa-angle-down rotate-icon\"\r\n                                                            aria-hidden=\"true\"></em></a>\r\n                                                </h5>\r\n                                            </div>\r\n                                            <div :id=\"'ColumnCollapse' + index\" class=\"collapse multi-collapse column-collapse\"\r\n                                                role=\"tabpanel\" :aria-labelledby=\"'MainColumn' + index\"\r\n                                                data-parent=\"#accordionEx\">\r\n                                                <div class=\"card-body p-0 customScrollForLeftBar llt\"\r\n                                                    style=\"max-height:300px;\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\"\r\n                                                            style=\"max-height: 305px; overflow: auto; display: block;\">\r\n                                                            <template\r\n                                                                v-for=\"element in searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\" >\r\n                                                                <li class=\"nav-item parent-element\">\r\n                                                                    <span class=\"nav-link left-menu px-4 \">\r\n                                                                        <em :class=\"element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                            aria-hidden=\"true\"></em>\r\n                                                                        <span class=\"text-truncate float-left\"\r\n                                                                            style=\"width: 55%;\"\r\n                                                                            :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                            :title=\"element.FieldName\">\r\n                                                                            {{ GetLocalizedValue((element.DisplayName !=\r\n                                                                                null &&\r\n                                                                                element.DisplayName != \"\") ?\r\n                                                                                element.DisplayName : element.FieldName) }}\r\n                                                                        </span>\r\n                                                                        <a href=\"#\"><em\r\n                                                                                class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                                aria-hidden=\"true\"\r\n                                                                                @click=\"Addfields(element, $event, index)\"></em></a>\r\n                                                                    </span>\r\n                                                                </li>\r\n                                                            </template>\r\n                                                        </ul>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div v-if=\"SearchNoRecord\"\r\n                                    class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                    {{\r\n                                        $t(\"NoRecordfound\") }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div> -->\r\n                            <!-- <div class=\"col-12 mt-3\">\r\n                            <div class=\"row flex-row-reverse\">\r\n                                <div class=\"col-lg-6 text-right\">\r\n                                        <button class=\"btn btn-success mr-2 my-sm-0 disabled\" id=\"Submitbtn\"\r\n                                            v-on:click=\"SubmitExpression\">\r\n                                            <span class=\"fa fa-floppy-o pl-2 pr-2\"></span>{{ $t(\"Submit\") }}\r\n                                        </button>\r\n                                        <button class=\"btn btn-primary delete-btn mr-2 my-sm-0\" v-on:click=\"CancelExpressionUI\">\r\n                                        <span class=\"fa fa-times pl-2 pr-2\"></span>{{ $t(\"Cancel\") }}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                    </template>\r\n                </dynamic-form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div></template>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./modalCalculatedFieldUI.vue?vue&type=template&id=8d4e06ca&\"\nimport script from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\nexport * from \"./modalCalculatedFieldUI.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\r\nimport DataReportService from \"@/services/DataService\";\r\nimport draggable from \"vuedraggable\";\r\nimport ReportPreview from '../Add_Report/ReportPreview.vue';\r\nimport CalculatedUI from \"../../../components/Common/Modal/modalCalculatedFieldUI.vue\";\r\nimport moment from 'moment'\r\n\r\nexport default {\r\n    components: {\r\n        draggable, ReportPreview, CalculatedUI\r\n    },\r\n    data() {\r\n        return {\r\n            isLoading: false,\r\n            componentkey:0,\r\n            maincomponentkey:0,\r\n            getchangedinlist:0,\r\n            submodulecodefieldkey:0,\r\n            isFieldCollapsed:false,\r\n            savedateformat:'',\r\n            modulelisting: [],\r\n            modulelistingforfilter: [],\r\n            showModuleListForField: true,\r\n            showModuleListForFilter: false,\r\n            reqFrom: 'Reporting',\r\n            submodulecode: null,\r\n            modulename: null,\r\n            maindiv: \"col-6 pl-0 float-left\",\r\n            expandcollapsediv: \"bottom_filter_button\",\r\n            showdiv: \"mb-0 d-none\",\r\n            fielddata: [],\r\n            Grouplist: [],\r\n            Columnlist: [],\r\n            Filterlist: [],\r\n            viewId: null,\r\n            ReportName: null,\r\n            fieldpan: 'col-6 p-0 float-left',\r\n            modulelistingmodel: null,\r\n            customreportparameters: null,\r\n            tempreportid: null,\r\n            saveclass: \"card d-none\",\r\n            editclass: \"card\",\r\n            savereportname: '',\r\n            Showsettingsview: false,\r\n            showdiv1: false,\r\n            dateformate: [],\r\n            GetOperator: [],\r\n            customField: null,\r\n            dragcount: 1,\r\n            templates: ['Match Any Value', 'Match All Value'],\r\n            category: 'Match All Value',\r\n            ReportPreviewListing: [],\r\n            previewdata: [],\r\n            itemclass: 'd-none',\r\n            Groupsearchmodel: '',\r\n            ColumnSearchmodel: '',\r\n            MainSearchmodel: '',\r\n            //filtergroup: [],\r\n            submodulename: [],\r\n            submodulecodename: [],\r\n            test1: [],\r\n            PageNumber: 1,\r\n            PAGESIZE: 10,\r\n            selectvalue: '',\r\n            selecteddatatype: '',\r\n            texttypevalue1: false,\r\n            numbertypevalue1: false,\r\n            datetypevalue1: false,\r\n            datetypevalue2: false,\r\n            timetypevalue: false,\r\n            timetypevalue2: false,\r\n            multiselectvalue: false,\r\n            numbertypevalue2: false,\r\n            texttypevalue2: false,\r\n            savedOperatorName: null,\r\n            drag: false,\r\n            GetDateFromDB: [],\r\n            modeldisplayname: null,\r\n            modeldateformat: '',\r\n            modeldecimalplaces: null,\r\n            modeluseseparator: null,\r\n            modelusecurrency: null,\r\n            FilterCount: 1,\r\n            valueTypeText: '',\r\n            valueTypeNumber: '',\r\n            valueTypeNumber2: '',\r\n            valueTypeFirstdate: '',\r\n            valueTypeSeconddate: '',\r\n            Displaymultiplevalue: '',\r\n            displayvalue2: '',\r\n            ValueDisplaytext: '',\r\n            ValueDisplaytext2: '',\r\n            ValueDisplaynumber: '',\r\n            ValueDisplaynumber2: '',\r\n            ValueDisplaydate: '',\r\n            ValueDisplaydate2: '',\r\n            modeldaterange: '',\r\n            ValueDisplayTime: '',\r\n            ValueDisplayTime2: '',\r\n            selectedvalue: '',\r\n            RequestFilterJosn: [],\r\n            CurrentOperatorSelected: null,\r\n            filtertype: null,\r\n            operator_id: null,\r\n            mode: 'tags',\r\n            dropdwonvalues: [],\r\n            options: [],\r\n            searchable: true,\r\n            createOption: true,\r\n            SelectedoperatorMappedDatatype: '',\r\n            commaSepratedSelectedValues: '',\r\n            selectedOPValue: '',\r\n            GraphJson: [],\r\n            sortingArray: null,\r\n            graphData: null,\r\n            showReportPreview: false,\r\n            editjsondata: false,\r\n            valueKey: '',\r\n            valuekey2: '',\r\n            FirstOperand: '',\r\n            FirstOperandValue1: '',\r\n            SecondOperand: '',\r\n            SecondOperandValue1: '',\r\n            Datatype: '',\r\n            operator: '',\r\n            DisplayName: '',\r\n            showcalculatedUI: false,\r\n            CheckExpressionFeild: false,\r\n            ExpressionArray: [],\r\n            ExpressionFieldsArray: [],\r\n            saveJsonReport: [],\r\n            editexpressionvalue: false,\r\n            CalculatedUIEnabled: false,\r\n            searchColumnfilter: [],\r\n            LevelOfGrouping: null,\r\n            ExpFieldDataArray: [],\r\n            ExpDataArray: [],\r\n            setvalue: 0,\r\n            ChartGroupingArray: [],\r\n            GroupingArray: [],\r\n            PdfJsonReport: [],\r\n            FilterActiveForMandatory: false,\r\n            SearchNoRecordForField: false,\r\n            SearchNoRecordForFilter: false,\r\n            IsMandatoryforFilterAfterReset: false,\r\n            ArrayforFilterpopup: [],\r\n            modelFilterDDLValue: '',\r\n            DDLForFilter: false,\r\n            DDLForDateRange: false,\r\n            selctRuleForFilter: '',\r\n            IsForPreview: 1,\r\n            IsDDLValueInFilter: false,\r\n            GetSubModuleList: [],\r\n            showRowLevelFunction:false,\r\n            sortingresetvalue:false,\r\n            AlreadyExistExpression:{},\r\n            ColumnlistArray:[],\r\n            DateRangeData:[],\r\n            GetSelectedValue:'',\r\n            GrouplistIndex:null,\r\n            FormSchema:[\r\n                {\r\n                layoutType: \"single\",\r\n                Data: [ \r\n                        {\r\n                            astype: \"MultiSelectField\",\r\n                            label: '',\r\n                            name: \"Select\",\r\n                            value: \"\",\r\n                            mode:\"tag\",\r\n                            placeholder: \"Select\",\r\n                            config: {\r\n                                options: [],\r\n                                showAddIcon: false,\r\n                            },\r\n                            validationRules: \"\",\r\n                        },\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    created: async function () {\r\n        var vm = this;\r\n        $(\".fade\").addClass(\"show\");\r\n        if (this.$route.params.Modulename != undefined) {\r\n            vm.customreportparameters = this.$route.params;\r\n            vm.storeParameters();\r\n        } else { vm.GetStoredParameters(); }\r\n        await vm.GetList(vm.customreportparameters);\r\n        if (vm.customreportparameters.ReportID != null || vm.customreportparameters.ReportID != undefined) {\r\n            await vm.GetReportDetailsByReportId();\r\n            if (vm.IsDDLValueInFilter) {\r\n                setTimeout(function () {\r\n                    vm.showReportPreview = true;\r\n                }, 1000)\r\n            } else { vm.showReportPreview = true; }\r\n        }\r\n        vm.filterRulechange();\r\n    },\r\n    computed: {\r\n        filtergroup() {\r\n            var vm = this;\r\n            return vm.Columnlist.filter(item => {\r\n                var displayname = (vm.$t(item.DisplayName != null)) ? vm.$t(item.DisplayName) : vm.$t(item.FieldName);\r\n                return displayname.replace(/\\W/g, \"\").toLowerCase().includes(vm.Groupsearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n            })\r\n        },\r\n        filterColumngroup() {\r\n            var vm = this;\r\n            var searchColumn = [];\r\n            var searchfilter = [];\r\n            var GetSubModuleName = null;\r\n            vm.modulelisting.forEach((item, index) => {\r\n                vm.modulelisting[index].forEach((indexitem) => {\r\n                    searchfilter.push(indexitem);\r\n                    searchColumn = searchfilter.filter(searchitem => {\r\n                        var displaycolname = (vm.$t(searchitem.DisplayName != null)) ? vm.$t(searchitem.DisplayName) : vm.$t(searchitem.FieldName);\r\n                        // var displaycolname = (searchitem.DisplayName != null) ? searchitem.DisplayName : searchitem.FieldName;\r\n                        return displaycolname.replace(/\\W/g, \"\").toLowerCase().includes(vm.ColumnSearchmodel.replace(/\\W/g, \"\").toLowerCase());\r\n                    })\r\n                    searchColumn.forEach(SearchItem => {\r\n                        GetSubModuleName = vm.modulelisting[index].find(x => x.CustomFieldId === SearchItem.CustomFieldId)\r\n                        if (GetSubModuleName != undefined) {\r\n                            GetSubModuleName.MainFieldname = vm.submodulename[index];\r\n                        }\r\n                    })\r\n                })\r\n            })\r\n            return searchColumn;\r\n        }\r\n    },\r\n    methods: {\r\n        storeParameters() {\r\n            var vm = this;\r\n            localStorage.setItem(\"SavedParameters\", JSON.stringify(vm.customreportparameters));\r\n        },\r\n        GetStoredParameters() {\r\n            var vm = this;\r\n            vm.customreportparameters = JSON.parse(localStorage.getItem(\"SavedParameters\"));\r\n        },\r\n        async GetFilterSelectDDL(CustomFieldId) {\r\n            var vm = this;\r\n            vm.options = [];\r\n            var Getddldata = [];\r\n            // vm.isLoading = false;\r\n            // if (vm.operator_id == 10 || vm.operator_id == 27) {\r\n            //     vm.isLoading = true;\r\n            // }\r\n            vm.isLoading = true;\r\n            await DataReportService.GetFilterDDLselectvalue(CustomFieldId).then(response => {\r\n                if (response.data.length > 0) {\r\n                    // vm.options = response.data.map(item => {\r\n                    //     return item.name != undefined ? item.name : item[FieldName]\r\n                    // });\r\n                    vm.FormSchema[0].Data[0].config.options = [];\r\n                    Getddldata = response.data;\r\n                    Getddldata.forEach(ddlitem => {\r\n                        vm.options.push({\r\n                            value: ddlitem.value,\r\n                            name: ddlitem.name\r\n                        })\r\n                    })\r\n                    vm.FormSchema[0].Data[0].config.options = vm.options;\r\n                    vm.isLoading = false;\r\n                } else { vm.isLoading = false; }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        },\r\n        async GetDateRangeFilterDDL(){\r\n            var vm = this;\r\n            await DataReportService.GetDateRangeFilterDDL().then(response=>{\r\n                vm.DateRangeData = JSON.parse(response.data[0].Value).Data;\r\n            })\r\n        },\r\n        async GetReportDetailsByReportId() {\r\n            var vm = this;\r\n            vm.isLoading = true;\r\n            var params = `ReportId=${vm.customreportparameters.ReportID}&IsPaged=1`;\r\n            await DataReportService.GetReportDetailsbyId(params).then(async response => {\r\n                var checkfields = [];\r\n                if (response.data != null && response.data != undefined && response.data != '') {\r\n                    checkfields = response.data.JSON_To_Create_ReportListing[0].Info.FIELDS;\r\n                }\r\n                if (response.data != null && response.data != undefined && response.data != '' && checkfields.length != 0) {\r\n                    vm.BindFeilds(response.data.JSON_To_Create_ReportListing[0].Info.FIELDS);\r\n                    await vm.BindFilters(response.data.JSON_To_Create_ReportListing[0].Info.FILTERS);\r\n                    vm.BindGROUP(response.data.JSON_To_Create_ReportListing[0].Info.GROUP);\r\n                    vm.sortingArray = response.data.JSON_To_Create_ReportListing[0].Info.SORTING\r\n                    vm.graphData = response.data.JSON_To_Create_ReportListing[0].Info.GRAPH;\r\n                    vm.ExpressionArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSION;\r\n                    vm.ExpressionFieldsArray = response.data.JSON_To_Create_ReportListing[0].Info.EXPRESSIONFIELDSARRAY;\r\n                    vm.editexpressionvalue = true;\r\n                    if (response.data.ReportListing == 1) {\r\n                        vm.editjsondata = true;\r\n                        vm.saveJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                        vm.PdfJsonReport = response.data.JSON_To_Create_ReportListing[0];\r\n                    }\r\n                } else {\r\n                    if (checkfields.length == 0) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    vm.isLoading = false;\r\n                }\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        BindFeilds(FIELDS) {\r\n            var vm = this;\r\n            FIELDS.forEach((item) => {\r\n                vm.Columnlist.push(item);\r\n                vm.modulelisting.forEach((mitem, index) => {\r\n                    let indexFound = vm.modulelisting[index].findIndex(element => { return element.CustomFieldId === item.CustomFieldId })\r\n                    if (indexFound != -1) {\r\n                        vm.modulelisting[index].splice(indexFound, 1);\r\n                    }\r\n                })\r\n            })\r\n            if (vm.Columnlist.length > 0) {\r\n                vm.CalculatedUIEnabled = true;\r\n            }\r\n        },\r\n        bindpouupvaluefordatetime(item) {\r\n            var vm = this;\r\n            if (item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                    vm.valuekey2 = 'valueTypeSeconddate'\r\n                }\r\n                else if(item.operator_display_name == 'Date Range'){\r\n                    vm.valueKey = 'DateRangeValue'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'valueTypeFirstdate'\r\n                }\r\n            }\r\n            if (item.ColumnFieldDataCode == 'time') {\r\n                if (item.operator_display_name == 'Between') {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                    vm.valuekey2 = 'ValueDisplaySecondTime'\r\n                }\r\n                else {\r\n                    vm.valueKey = 'ValueDisplayFirstTime'\r\n                }\r\n            }\r\n        },\r\n        bindfilterdata(FILTERS) {\r\n            var vm = this;\r\n            vm.Filterlist = FILTERS.map((item, index) => {\r\n                var GetDDLValueinEdit = '';\r\n                var GetDDLTempVal = '';\r\n                if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                    var GetDDLValueinEditArr = [];\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        var GetDDLValueinEditMulti = [];\r\n                        GetDDLValueinEditArr = item.Value1.split(',');\r\n                        GetDDLValueinEditArr.forEach(DDLEditItem => {\r\n                            GetDDLValueinEdit = vm.options.find(i => i.value === DDLEditItem.replace(/\"|'/g, ''))\r\n                            GetDDLValueinEditMulti.push(GetDDLValueinEdit.name);\r\n                        })\r\n                        GetDDLTempVal = GetDDLValueinEditMulti?.join();\r\n                        vm.valueKey = 'Displaymultiplevalue';\r\n                    }\r\n                    else {\r\n                        GetDDLValueinEdit = vm.options.find(i => i.value === item.Value1);\r\n                        GetDDLTempVal = GetDDLValueinEdit?.name;\r\n                        vm.valueKey = 'DropDownValue';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'decimal' || item.ColumnFieldDataCode == 'bigint' || item.ColumnFieldDataCode == 'int') {\r\n                    if (item.operator_display_name == 'Between') {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                        vm.valuekey2 = 'valueTypeNumber2';\r\n                    }\r\n                    else {\r\n                        vm.valueKey = 'valueTypeNumber';\r\n                    }\r\n                }\r\n                else if (item.ColumnFieldDataCode == 'string') {\r\n                    if (item.OperatorExpression.includes('IN') || item.OperatorExpression.includes('NOT IN')) {\r\n                        vm.valueKey = 'valueTypeText';\r\n                        vm.valuekey2 = 'valueTypeText2';\r\n                    } else { vm.valueKey = 'valueTypeText' };\r\n                }\r\n                vm.bindpouupvaluefordatetime(item);\r\n                let moduleIndex = vm.modulelistingforfilter.findIndex(moduleItem => {\r\n                    return moduleItem.find(field => {\r\n                        return field.CustomFieldId == item.CustomFieldId\r\n                    })\r\n                })\r\n                let indexFound = vm.modulelistingforfilter[moduleIndex].findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                let returnObject = {}\r\n                if (indexFound != -1) {\r\n                    returnObject = {\r\n                        FieldName: vm.modulelistingforfilter[moduleIndex][indexFound].FieldName,\r\n                        CustomFieldId: item.CustomFieldId,\r\n                        ModuleIndex: moduleIndex,\r\n                        ActualDataType: item.ActualDataType,\r\n                        FilterCount: index + 1,\r\n                        FilterTypeAndorOr: vm.filtertype,\r\n                        OPERATOR_ID: item.OPERATOR_ID,\r\n                        OperatorDisplayName: item.operator_display_name,\r\n                        IsMandatoryforFilter: item.IsMandatoryforFilter,\r\n                        FieldIcons: item.FieldIcons,\r\n                        DisplayName: item.DisplayName,\r\n                        ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                        PickListOption: item.PickListOption,\r\n                        Calculated_Field: false\r\n                    }\r\n                    returnObject[vm.valuekey2] = item.Value2;\r\n                    // returnObject[vm.valueKey] = GetDDLTempVal == '' ? item.Value1.replace(/\"|'/g, '') : GetDDLTempVal;  //Apostrophe Fixed\r\n                    returnObject[vm.valueKey] = GetDDLTempVal == '' ? item.Value1 : GetDDLTempVal;\r\n                    vm.modulelistingforfilter[moduleIndex].splice(indexFound, 1);\r\n                }\r\n                return returnObject;\r\n            })\r\n        },\r\n        CheckforIncludeDataMatchesForFilter() {\r\n            var vm = this;\r\n            if (vm.filtertype == 'AND') {\r\n                vm.category = 'Match All Value';\r\n            } else {\r\n                vm.category = 'Match Any Value'\r\n            }\r\n        },\r\n        BindFilters: async function (FILTERS) {\r\n            var vm = this;\r\n            if (FILTERS.length > 0) {\r\n                FILTERS.map(async (item, index) => {\r\n                    if (item.ColumnFieldDataCode == 'select' && item.PickListOption == 'Lookup') {\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetFilterSelectDDL(item.CustomFieldId);\r\n                    }\r\n                    else if((item.ColumnFieldDataCode == 'datetime' || item.ColumnFieldDataCode == 'date') && item.operator_display_name == 'Date Range'){\r\n                        vm.IsDDLValueInFilter = true;\r\n                        await vm.GetDateRangeFilterDDL();\r\n                    }\r\n                })\r\n                if (vm.IsDDLValueInFilter) {\r\n                    setTimeout(function () {\r\n                        vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                        vm.CheckforIncludeDataMatchesForFilter();\r\n                        vm.bindfilterdata(FILTERS);\r\n                        vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                            let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                            let returnObject = {}\r\n                            if (indexFound != -1) {\r\n                                returnObject = {\r\n                                    CustomFieldId: item.CustomFieldId,\r\n                                    FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                    ActualDataType: item.ActualDataType,\r\n                                    FilterCount: index + 1,\r\n                                    OperatorExpression: item.OperatorExpression,\r\n                                    FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                    OPERATOR_ID: item.OPERATOR_ID,\r\n                                    Value1: item.Value1,\r\n                                    Value2: item.Value2,\r\n                                    ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                    FieldIcons: item.FieldIcons,\r\n                                    PickListOption: item.PickListOption\r\n                                }\r\n                            }\r\n                            return returnObject;\r\n                        })\r\n                    }, 1000)\r\n                }\r\n                else {\r\n                    vm.filtertype = FILTERS[0].FilterTypeAndorOr;\r\n                    vm.CheckforIncludeDataMatchesForFilter();\r\n                    vm.bindfilterdata(FILTERS);\r\n                    vm.RequestFilterJosn = FILTERS.map((item, index) => {\r\n                        let indexFound = vm.Filterlist.findIndex(field => { return field.CustomFieldId == item.CustomFieldId })\r\n                        let returnObject = {}\r\n                        if (indexFound != -1) {\r\n                            returnObject = {\r\n                                CustomFieldId: item.CustomFieldId,\r\n                                FieldName: vm.Filterlist[indexFound].FieldName,\r\n                                ActualDataType: item.ActualDataType,\r\n                                FilterCount: index + 1,\r\n                                OperatorExpression: item.OperatorExpression,\r\n                                FilterTypeAndorOr: item.FilterTypeAndorOr,\r\n                                OPERATOR_ID: item.OPERATOR_ID,\r\n                                Value1: item.Value1,\r\n                                Value2: item.Value2,\r\n                                ColumnFieldDataCode: item.ColumnFieldDataCode,\r\n                                FieldIcons: item.FieldIcons,\r\n                                PickListOption: item.PickListOption\r\n                            }\r\n                        }\r\n                        return returnObject;\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        BindGROUP(GROUP) {\r\n            var vm = this;\r\n            vm.Grouplist = [];\r\n            GROUP.forEach((item) => {\r\n                var checkforvalue = vm.Columnlist.find(x=> x.CustomFieldId === item.CustomFieldId);\r\n                item.ColumnFieldDataCode = checkforvalue.ColumnFieldDataCode;\r\n                vm.Grouplist.push(item);\r\n            })\r\n        },\r\n        openSetting: function (element, event) {\r\n            var vm = this;\r\n            if (element.Calculated_Field) {\r\n                vm.showcalculatedUI = true;\r\n                vm.editexpressionvalue = true;\r\n                vm.AlreadyExistExpression = {};\r\n                if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                    let expIndex = -1;\r\n                    vm.ExpDataArray = [];\r\n                    vm.ExpFieldDataArray = [];\r\n                    for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                        if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                            vm.ExpDataArray.push(vm.ExpressionArray.find(x => x.ColumnIndex === element.ModuleIndex))\r\n                            break;\r\n                        }\r\n                    }\r\n                    vm.ExpressionFieldsArray.forEach(item => {\r\n                        var temparr = [];\r\n                        temparr.push(item);\r\n                        var checkexpfieldvalue = temparr.find(x => x.ColumnIndex === element.ModuleIndex);\r\n                        if (checkexpfieldvalue != undefined) {\r\n                            vm.ExpFieldDataArray.push(checkexpfieldvalue);\r\n                        }\r\n                    })\r\n                }\r\n                $(\"#showcalculatedfield\").modal(\"show\");\r\n                setTimeout(function () {\r\n                    $(\"#showcalculatedfield\").modal('show');\r\n                    setTimeout(function () {\r\n                        vm.SetBootstraptoolTip();\r\n                    }, 200);\r\n                }, 1000);\r\n                if (vm.editexpressionvalue) {\r\n                    vm.AlreadyExistExpression = element;\r\n                    vm.$refs.Calculated?.ExpresssionDataValue(vm.ExpDataArray, vm.ExpFieldDataArray);\r\n                }\r\n            } else {\r\n                vm.modeldisplayname = vm.GetLocalizedValue(element.DisplayName != null && element.DisplayName != '' ? element.DisplayName : element.FieldName);\r\n                vm.modeldateformat = element.DateFormat;\r\n                vm.modeldecimalplaces = element.DecimalPlace;\r\n                vm.modeluseseparator = element.IsUseSeprator;\r\n                vm.modelusecurrency = element.IsCurrencySymbol;\r\n                $(\".setting-div-box\").width('0px');\r\n                $(event.target).closest(\".parentdiv\").find(\".setting-div-box\").width('500px');\r\n                if(element.ColumnFieldDataCode == 'date'){\r\n                vm.GetDateFromDetail();}\r\n            }\r\n         \r\n        },\r\n        CloseSetting: function (event) {\r\n            var vm = this;\r\n            vm.modeldisplayname = null;\r\n            vm.modeldateformat = '';\r\n            vm.modeldecimalplaces = null;\r\n            vm.modeluseseparator = null;\r\n            vm.modelusecurrency = null;\r\n            $(event.target).closest(\".setting-div-box\").width('0px');\r\n        },\r\n        ClosePopFilter: function () {\r\n            var vm = this;\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.DDLForDateRange = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.modeldaterange = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= [];\r\n            vm.modelFilterDDLValue = '';\r\n            vm.SecondOperand = '';\r\n            vm.SecondOperandValue1 = '';\r\n        },\r\n        CheckFeildOrFilter() {\r\n            var vm = this;\r\n            let isFieldsActive = vm.$refs.FIELDS.active\r\n            if (isFieldsActive) {\r\n                return 'FIELD'\r\n            }\r\n            else {\r\n                return 'Filters';\r\n            }\r\n        },\r\n        GetList: async function (customreportparameters) {\r\n            var vm = this;\r\n            if (customreportparameters.Modulename != undefined && customreportparameters.Submodulecode != undefined && customreportparameters.ReportName != null) {\r\n                var params = `moduleName=${customreportparameters.Modulename}&subModuleCode=${customreportparameters.Submodulecode}&viewId&reqFrom=${vm.reqFrom}`;\r\n                await DataReportService.GetListFields(params).then(response => {\r\n                    vm.submodulecodename = response.data.AVAILABLE_FIELDS[0];\r\n                    vm.submodulecodename.forEach((item) => {\r\n                        vm.submodulename.push(item.SubModule);\r\n                        vm.modulelisting.push([...item.CustomFields.sort((FirstValue, SecondValue) => vm.$t(FirstValue.DisplayName).localeCompare(vm.$t(SecondValue.DisplayName)))]);\r\n                        vm.modulelistingforfilter.push([...item.CustomFields.sort((FirstValue, SecondValue) => vm.$t(FirstValue.DisplayName).localeCompare(vm.$t(SecondValue.DisplayName)))]);\r\n                        vm.GetSubModuleList.push([...item.CustomFields]);\r\n                    })\r\n                    if (customreportparameters.NewReportInserted == \"Save\" && customreportparameters.ReportID != undefined || vm.IsMandatoryforFilterAfterReset) {\r\n                        vm.CheckIsMandartoryForFilter();\r\n                    }\r\n                    setTimeout(function () {\r\n                        vm.SetScrolbar('dark-thick', '', 'customScrollForLeftBar')\r\n                    }, 1000);\r\n                }).catch(err => { console.log(err); })\r\n                vm.submodulecode = customreportparameters.Submodulecode;\r\n                vm.ReportName = customreportparameters.ReportName;\r\n            }\r\n        },\r\n        CheckIsMandartoryForFilter: function () {\r\n            var vm = this;\r\n            var event = {removed:undefined}\r\n            vm.modulelisting.forEach((Fields, index) => {\r\n                vm.modulelisting[index].forEach(Fieldsitem => {\r\n                    if (Fieldsitem.IsMandatoryforFilter) {\r\n                        var CheckFields = vm.modulelisting[index].find(x => x.CustomFieldId === Fieldsitem.CustomFieldId)\r\n                        if (CheckFields.ActualDataType == \"datetime\") {\r\n                            vm.FilterActiveForMandatory = true;\r\n                            vm.SelectedoperatorMappedDatatype = CheckFields.dttype[0].DataTypeCode;\r\n                            vm.ValueDisplaydate = moment(moment().subtract(30, 'days')).format(\"YYYY-MM-DD\");\r\n                            // var date = new Date(); // Now\r\n                            // date.setDate(date.getDate() - 30); // Set now - 30 days as the new date\r\n                            // vm.ValueDisplaydate = date;\r\n                            vm.savedOperatorName = \"Greater Than\";\r\n                            vm.CurrentOperatorSelected = '>';\r\n                            vm.operator_id = 1;\r\n                            vm.AddFilter(CheckFields, index,event);\r\n                            vm.applySetting(CheckFields.CustomFieldId);\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        collapsedclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left d-none\";\r\n            vm.showdiv = \"mb-0\";\r\n            vm.fieldpan = 'col-6 p-0 float-left leftpancollapse col-11'\r\n        },\r\n        expandclick: function () {\r\n            var vm = this\r\n            vm.maindiv = \"col-6 pl-0 float-left \";\r\n            vm.showdiv = \"mb-0 d-none\";\r\n            vm.fieldpan = 'col-6 p-0 float-left';\r\n        },\r\n        editreport: function () {\r\n            var vm = this;\r\n            vm.editclass = \"card d-none\";\r\n            vm.saveclass = \"card\";\r\n            var params = `&Report_id=${vm.customreportparameters.ReportID}`;\r\n            DataReportService.Editdyanmicreport(params).then(response => {\r\n                vm.savereportname = response.data.ReportName;\r\n            }).catch(err => { console.log(err); })\r\n        },\r\n        savereport: function () {\r\n            var vm = this;\r\n            if(vm.savereportname.length > 100){\r\n                vm.ShowAlert(vm.$t(\"You can not enter more than 100 characters.\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            vm.editclass = \"card\";\r\n            vm.saveclass = \"card d-none\";\r\n            if(vm.savereportname.trim() != ''){\r\n                var params = `ReportName=${vm.savereportname.trim()}&Report_Id=${vm.customreportparameters.ReportID}&Folder_Id=${vm.customreportparameters.Folder_Id}&Module_Id=${vm.customreportparameters.Module_Id}&Sub_Module_Id=${vm.customreportparameters.Sub_Module_Id}&Ref_Code=${vm.customreportparameters.Submodulecode}&Version=${vm.customreportparameters.Version}`;\r\n                DataReportService.AddDynamicreport(params).then(response => {\r\n                    if (response.data[0].Status == 'Update') {\r\n                        vm.ShowAlert(vm.$t(\"UpdatedSuccess\", [vm.$t(\"ReportName\")]), 'success', true, vm.$t('Alert'));\r\n                        vm.ReportName = vm.savereportname.trim();\r\n                    } else if (response.data[0].Status == 'Exists') {\r\n                        vm.savereportname = '';\r\n                        vm.ShowAlert(vm.$t(\"AlreadyExists\", [vm.$t(\"ReportName\")]), 'failure', true, vm.$t('Alert'));\r\n                    }\r\n                }).catch(err => { console.log(err); })\r\n            }else{\r\n                vm.ShowAlert(vm.$t(\"ValidInput\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        PreviewJson: async function (sortColummnarray, BindGraph, GraphDataValue) {\r\n            var vm = this;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist();\r\n            if(CheckSameNameExist){\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            vm.sortingArray = [];\r\n            vm.sortingresetvalue=true;\r\n            vm.isLoading = true;\r\n            let CheckValidSorting = vm.CheckForValidSorting(sortColummnarray);\r\n            if (CheckValidSorting == 0) {\r\n                for (var i in sortColummnarray) {\r\n                    if (sortColummnarray[i].sortcolummnId != undefined && sortColummnarray[i].sortcolummnId != \"\") {\r\n                        vm.sortingArray.push(\r\n                            { \"CustomFieldId\": sortColummnarray[i].sortcolummnId, \"SORTTYPE\": sortColummnarray[i].columnOrders, \"SortIndex\": parseInt(i), \"Calculated_Field\": \"\" }\r\n                        )\r\n                        vm.Columnlist.forEach(arritem => {\r\n                            var elem = vm.sortingArray.find(x => x.CustomFieldId === arritem.CustomFieldId || x.CustomFieldId === arritem.FieldName)\r\n                            if (elem != undefined) {\r\n                                elem.Calculated_Field = arritem.Calculated_Field;\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                var temp;\r\n                if (BindGraph) {\r\n                    vm.ChartGroupingArray = [];\r\n                    vm.GroupingArray = [];\r\n                    if (GraphDataValue != undefined && GraphDataValue != '') {\r\n                        var findvaluefromcolumnlistxaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.XAxisField || x.FieldName === GraphDataValue.XAxisField);\r\n                        var findvaluefromcolumnlistyaxis = vm.Columnlist.find(x => x.CustomFieldId === GraphDataValue.YAxisField || x.FieldName === GraphDataValue.YAxisField);\r\n                        vm.ChartGroupingArray.push({\r\n                            XCustomFieldId: GraphDataValue.ChartColorCode == '' ? findvaluefromcolumnlistxaxis.CustomFieldId : '', \r\n                            XFieldName: GraphDataValue.ChartColorCode == '' ? findvaluefromcolumnlistxaxis.FieldName : '',\r\n                            YCustomFieldId: findvaluefromcolumnlistyaxis.CustomFieldId, YFieldName: findvaluefromcolumnlistyaxis.FieldName, AggregateFunctionType: GraphDataValue.AggregateFunctionType,\r\n                            ChartColorCode : GraphDataValue.ChartColorCode\r\n                        });\r\n                    }\r\n                    temp = {\r\n                        \"Info\": {\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"REPORTNAME\": vm.ReportName,\r\n                            \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                            \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                            \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                            \"PAGESIZE\": 10,\r\n                            \"PAGENUMBER\": 1,\r\n                            \"IS_PAGED\": 1,\r\n                            \"IsForPreview\": vm.IsForPreview,\r\n                            \"FIELDS\": vm.Columnlist,\r\n                            \"FILTERS\": vm.RequestFilterJosn,\r\n                            \"GROUP\": [],\r\n                            \"CHARTGROUPARRAY\": vm.ChartGroupingArray,\r\n                            \"SORTING\": vm.sortingArray,\r\n                            \"GRAPH\": [],\r\n                            \"EXPRESSION\": vm.ExpressionArray,\r\n                            \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    temp = {\r\n                        \"Info\": {\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"REPORTNAME\": vm.ReportName,\r\n                            \"MODULENAME\": vm.customreportparameters.Modulename,\r\n                            \"SUBMODULECODE\": vm.customreportparameters.Submodulecode,\r\n                            \"SUBMODULEID\": vm.customreportparameters.submoduleid,\r\n                            \"PAGESIZE\": 10,\r\n                            \"PAGENUMBER\": 1,\r\n                            \"IS_PAGED\": 1,\r\n                            \"IsForPreview\": vm.IsForPreview,\r\n                            \"FIELDS\": vm.Columnlist,\r\n                            \"FILTERS\": vm.RequestFilterJosn,\r\n                            \"GROUP\": vm.Grouplist,\r\n                            \"CHARTGROUPARRAY\": [],\r\n                            \"SORTING\": vm.sortingArray,\r\n                            \"GRAPH\": [],\r\n                            \"EXPRESSION\": vm.ExpressionArray,\r\n                            \"EXPRESSIONFIELDSARRAY\": vm.ExpressionFieldsArray\r\n                        }\r\n                    }\r\n                }\r\n                vm.showReportPreview = true;\r\n                vm.saveJsonReport = temp;\r\n                var jsondata = JSON.stringify(temp);\r\n                await DataReportService.PreviewReport(jsondata).then((response) => {\r\n                    var checkdata = [];\r\n                    checkdata = JSON.parse(response.data[0].Value).ListingData;\r\n                    if (checkdata != null && checkdata != undefined && checkdata.length > 0) {\r\n                        if (BindGraph) {\r\n                            vm.GraphJson = JSON.parse(response.data[0].Value);\r\n                            if (!BindGraph) {\r\n                                vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                            }\r\n                        }\r\n                        else {\r\n                            vm.PdfJsonReport = temp;\r\n                            vm.previewdata = JSON.parse(response.data[0].Value).ListingData;\r\n                            vm.LevelOfGrouping = JSON.parse(response.data[0].Value).MetaData[0].LevelOfGrouping;\r\n                        }\r\n                        vm.isLoading = false;\r\n                    } else {\r\n                        vm.isLoading = false;\r\n                        vm.previewdata = [];\r\n                        if(BindGraph){\r\n                            vm.GraphJson = JSON.parse(response.data[0].Value);\r\n                            vm.$refs.reportdata.ResetGraphData();\r\n                        }\r\n                        vm.ShowAlert(vm.$t(\"No_Record_Found\"), 'failure', true, vm.$t('Alert'));\r\n                    }\r\n                }).catch((err) => {\r\n                    console.log(\"Data not Found\");\r\n                    vm.previewdata = [];\r\n                    vm.ShowAlert(vm.$t(\"InsertUpdateError\"), 'failure', true, vm.$t('Alert'));\r\n                    vm.isLoading = false;\r\n                })\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"InvalidSorting\"), 'failure', true, vm.$t('Alert'));\r\n                vm.isLoading = false;\r\n            }\r\n        },\r\n        Addfields: function (element, event, index, MainFieldname) {\r\n            var vm = this;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            var ColumnDisplayOrder;\r\n            if (vm.Columnlist.length < 20) {\r\n                if (isFieldActive) {\r\n                    if (vm.Columnlist.length < 1) {\r\n                        ColumnDisplayOrder = vm.Columnlist.length\r\n                    }\r\n                    else {\r\n                        const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                        ColumnDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                    }\r\n                    if (element.hasOwnProperty(\"dttype\")) {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.dttype[0].DataTypeCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.dttype[0].icon\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId == element.CustomFieldId);\r\n                        if (checkAlredyExist === -1) {\r\n                            vm.Columnlist.push({\r\n                                CustomFieldId: element.CustomFieldId, DisplayName: element.DisplayName, FieldName: element.FieldName, ModuleIndex: index, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: ColumnDisplayOrder, Calculated_Field: false, MainFieldname: MainFieldname\r\n                                , FieldIcons: element.FieldIcons\r\n                            });\r\n                            if (event.removed == undefined) {\r\n                                vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(element), 1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.CalculatedUIEnabled = true;\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n            if(vm.isFieldCollapsed){vm.submodulecodefieldkey += 1; vm.isFieldCollapsed = false;}\r\n        },\r\n        ApplySaveSelectedData : function(element, event){\r\n           var vm = this;\r\n           if(vm.modeldisplayname != ''){\r\n            vm.SaveSelectedData(element, event);\r\n           }\r\n           else{\r\n            vm.ShowAlert(\"Display Name is required\", 'failure', true, vm.$t('Alert'));\r\n           }\r\n        },\r\n        SaveSelectedData: function (element, event) {\r\n            var vm = this;\r\n            var elem = vm.Columnlist.find(x => x.CustomFieldId == element.CustomFieldId);\r\n            elem.OrginalDisplayName = elem.DisplayName\r\n            elem.DisplayName = vm.modeldisplayname;\r\n            elem.DateFormat = vm.modeldateformat;\r\n            elem.DecimalPlace = vm.modeldecimalplaces;\r\n            elem.IsUseSeprator = vm.modeluseseparator;\r\n            elem.IsCurrencySymbol = vm.modelusecurrency;\r\n            vm.savedateformat = vm.modeldateformat;\r\n            vm.getchangedinlist += 1;\r\n            let CheckSameNameExist = vm.MatchIfSameNameExist(undefined,element);\r\n            if (!CheckSameNameExist) {\r\n                if (vm.Grouplist.find(x => x.CustomFieldId === elem.CustomFieldId)) {\r\n                    vm.Grouplist = [];\r\n                    vm.Grouplist.push(elem);\r\n                }\r\n                vm.CloseSetting(event);\r\n            } else {\r\n                let GetChangedNameID = vm.MatchIfSameNameExist('GetChangedNameID',element);\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.GetSubModuleList[mindex].forEach(iitem => {\r\n                        if (iitem.CustomFieldId === GetChangedNameID) {\r\n                            var elem = vm.Columnlist.find(x => x.CustomFieldId == iitem.CustomFieldId);\r\n                            elem.DisplayName = iitem.DisplayName;\r\n                            elem.DateFormat = iitem.DateFormat;\r\n                            elem.DecimalPlace = iitem.DecimalPlace;\r\n                            elem.IsUseSeprator = iitem.IsUseSeprator;\r\n                            elem.IsCurrencySymbol = iitem.IsCurrencySymbol;\r\n                            if (vm.Grouplist.find(x => x.CustomFieldId === iitem.CustomFieldId)) {\r\n                                vm.Grouplist = [];\r\n                                vm.Grouplist.push(elem);\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n                vm.ShowAlert('Same Display Name ' + ' \"' + CheckSameNameExist + '\" ' + ' is Exist Mutiple Times Please Change', 'failure', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteColumnFields: function (element, event) {\r\n            var vm = this;\r\n            let IsGraphColumn = vm.$refs.reportdata.CheckColumnExistInGraph(element.CustomFieldId)\r\n            if (!IsGraphColumn) {\r\n                if (!element.Calculated_Field) {\r\n                    let tagIndex = vm.Columnlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                    if (tagIndex > -1) {\r\n                        vm.Columnlist.splice(tagIndex, 1);\r\n                        vm.searchColumnfilter = [];\r\n                        $(\".setting-div-box\").width('0px');\r\n                    }\r\n                }\r\n                let tagIndex1 = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Grouplist.splice(tagIndex1, 1);\r\n                }\r\n                if (vm.Columnlist.length == 0) {\r\n                    vm.previewdata = [];\r\n                    vm.CalculatedUIEnabled = false;\r\n                }\r\n                if (!element.Calculated_Field) {\r\n                    vm.modulelisting[element.ModuleIndex].push({\r\n                        CustomFieldId: element.CustomFieldId, DisplayName: element.OrginalDisplayName != undefined ? element.OrginalDisplayName : element.DisplayName, FieldName: element.FieldName, ColumnFieldDataCode: element.ColumnFieldDataCode, Display_Order: element.Display_Order, Calculated_Field: false, MainFieldname: element.MainFieldname,\r\n                        FieldIcons: element.FieldIcons\r\n                    });\r\n                }\r\n                vm.Groupsearchmodel = '';\r\n                if (element.Calculated_Field) {\r\n                    if (vm.ExpressionFieldsArray.length > 0 || vm.ExpressionArray.length > 0) {\r\n                        let expIndex = -1;\r\n                        let calctagIndex = vm.Columnlist.findIndex(x => x.ModuleIndex == element.ModuleIndex);\r\n                        if (calctagIndex > -1) {\r\n                            vm.Columnlist.splice(calctagIndex, 1);\r\n                            vm.searchColumnfilter = [];\r\n                        }\r\n                        for (var i = 0; i <= vm.ExpressionArray.length; i++) {\r\n                            if (vm.ExpressionArray[i].ColumnIndex === element.ModuleIndex) {\r\n                                vm.ExpressionArray.splice(i, 1);\r\n                                break;\r\n                            }\r\n                        }\r\n                        vm.ExpressionFieldsArray.forEach(item => {\r\n                            var checkindex = vm.ExpressionFieldsArray.findIndex(x => x.ColumnIndex === element.ModuleIndex)\r\n                            if (checkindex > -1) {\r\n                                vm.ExpressionFieldsArray.splice(checkindex, 1);\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n                if (vm.sortingArray != null && vm.sortingArray.length > 0) {\r\n                    let sortindex = vm.sortingArray.findIndex(x => x.CustomFieldId === element.CustomFieldId)\r\n                    let getsortvalue = vm.sortingArray.find(x => x.CustomFieldId === element.CustomFieldId);\r\n                    if (sortindex > -1 && getsortvalue != undefined) {\r\n                        vm.sortingArray.splice(sortindex, 1);\r\n                    }\r\n                    vm.$refs.reportdata?.RemoveSortingForm({sortcolummnId:element.CustomFieldId});\r\n                }\r\n            }else{\r\n                vm.ShowAlert(vm.$t(\"GraphFields\"), 'warning', true, vm.$t('Alert'));\r\n            }\r\n        },\r\n        DeleteGroupFields: function (element, event) {\r\n            var vm = this;\r\n            let tagIndex = vm.Grouplist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n            if (tagIndex > -1) {\r\n                vm.Grouplist.splice(tagIndex, 1);\r\n            }\r\n            vm.Groupsearchmodel = '';\r\n            if (vm.previewdata != null && vm.previewdata != undefined && vm.previewdata.length > 0) {\r\n                vm.$refs.reportdata?.RefreshReport();\r\n            }\r\n        },\r\n        AddFilter: function (element, index,event) {\r\n            var vm = this;\r\n            vm.filterRulechange();\r\n            let isFilterActive = vm.$refs.Filters.active != false ? vm.$refs.Filters.active : vm.FilterActiveForMandatory;\r\n            if (vm.Filterlist.length < 20) {\r\n                if (isFilterActive) {\r\n                    const checkAlredyExist = vm.Filterlist.findIndex(object => object.CustomFieldId === element.CustomFieldId);\r\n                    if (checkAlredyExist === -1) {\r\n                        if (vm.category == 'Match All Value') {\r\n                            vm.filtertype = 'AND'\r\n                        }\r\n                        else {\r\n                            vm.filtertype = 'OR'\r\n                        }\r\n                        vm.Filterlist.push({\r\n                            CustomFieldId: element.CustomFieldId,\r\n                            ModuleIndex: index,\r\n                            FieldName: element.FieldName,\r\n                            DisplayName: element.DisplayName,\r\n                            ActualDataType: element.ActualDataType,\r\n                            ColumnFieldDataCode: element.ColumnFieldDataCode != undefined ? element.ColumnFieldDataCode : element.dttype[0].DataTypeCode,\r\n                            PickListOption: element.PickListOption != undefined ? element.PickListOption : element.picklist_options,\r\n                            FilterCount: vm.getCountValue(),\r\n                            FilterTypeAndorOr: vm.filtertype,\r\n                            IsMandatoryforFilter: element.IsMandatoryforFilter,\r\n                            FieldIcons: element.FieldIcons != undefined ? element.FieldIcons : element.dttype[0].icon,\r\n                            // OPERATOR_ID: ((typeof (element.OPERATOR_ID) === 'undefined') ? null : element.OPERATOR_ID),\r\n                            // valueTypeText: ((typeof (element.result) === 'undefined') ? null : element.result),\r\n                            Calculated_Field: false\r\n                        });\r\n                    }\r\n                    if (event.removed == undefined) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(element), 1);\r\n                    }\r\n                    vm.FilterActiveForMandatory = false;\r\n                }\r\n            }\r\n            else {\r\n                vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n            }\r\n            vm.searchColumnfilter = []\r\n            vm.MainSearchmodel = '';\r\n            if(vm.isFieldCollapsed){vm.submodulecodefieldkey += 1; vm.isFieldCollapsed = false;}\r\n            // vm.ClosePopFilter();\r\n        },\r\n        DeleteFilterFields: function (element, event) {\r\n            var vm = this;\r\n            if (!element.IsMandatoryforFilter) {\r\n                let tagIndex = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex > -1) {\r\n                    vm.Filterlist.splice(tagIndex, 1);\r\n                }\r\n                let tagIndex1 = vm.Filterlist.findIndex(x => x.CustomFieldId == element.CustomFieldId);\r\n                if (tagIndex1 > -1) {\r\n                    vm.Filterlist.splice(tagIndex1, 1);\r\n                }\r\n                vm.dragcount = vm.dragcount - 1\r\n                vm.modulelistingforfilter[element.ModuleIndex].push({\r\n                    CustomFieldId: element.CustomFieldId, FieldName: element.FieldName, DisplayName: element.DisplayName, ActualDataType: element.ActualDataType,\r\n                    FieldIcons: element.FieldIcons, ColumnFieldDataCode: element.ColumnFieldDataCode, PickListOption: element.PickListOption, FilterType: element.filtertype\r\n                });\r\n                let tagIndex2 = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === element.CustomFieldId);\r\n                if (tagIndex2 != -1) {\r\n                    vm.RequestFilterJosn.splice(tagIndex, 1);\r\n                }\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        openrulespop: function (element, event) {\r\n            var vm = this;\r\n            // if(element.selectedOPValue == undefined){\r\n            //     element.OPERATOR_ID = '';\r\n            // }\r\n            element.selectedOPValue = '';\r\n            $(\".filter-list-box\").width('0px').css(\"overflow\", \"hidden\");\r\n            $(event.target).closest(\".parentdiv\").find(\".filter-list-box\").width('500px').css(\"overflow\", \"visible\");\r\n            vm.GetOperatordata(element);\r\n            vm.texttypevalue1 = false;\r\n            vm.numbertypevalue1 = false;\r\n            vm.datetypevalue1 = false;\r\n            vm.datetypevalue2 = false;\r\n            vm.multiselectvalue = false;\r\n            vm.numbertypevalue2 = false;\r\n            vm.texttypevalue2 = false;\r\n            vm.DDLForFilter = false;\r\n            vm.DDLForDateRange = false;\r\n            vm.timetypevalue = false;\r\n            vm.timetypevalue2 = false;\r\n            vm.dropdwonvalues = [];\r\n            vm.FormSchema[0].Data[0].value= []\r\n            vm.ValueDisplaytext = '';\r\n            vm.ValueDisplaytext2 = '';\r\n            vm.ValueDisplaynumber = '';\r\n            vm.ValueDisplaynumber2 = '';\r\n            vm.ValueDisplaydate = '';\r\n            vm.modeldaterange = '';\r\n            vm.ValueDisplaydate2 = '';\r\n            vm.Displaymultiplevalue = '';\r\n            vm.modelFilterDDLValue = '';\r\n            vm.ValueDisplayTime = '';\r\n            vm.ValueDisplayTime2 = '';\r\n        },\r\n        getCountValue: function () {\r\n            return this.dragcount++;\r\n        },\r\n        dragover: function (event) {\r\n            let count = 1;\r\n            $(\".draggable-list .filter-div\").each(function (index) {\r\n                count = index + 1;\r\n                $(this).find(\".filter-count-div\").html(count);\r\n            });\r\n            this.dragcount = count;\r\n        },\r\n        GroupSearching: function () {\r\n            this.itemclass = '';\r\n        },\r\n        selectfiltervalue: function (data) {\r\n            var vm = this;\r\n            if (vm.Grouplist.length < 1) {\r\n                vm.Grouplist.push(data);\r\n                vm.itemclass = 'd-none';\r\n                vm.Groupsearchmodel = '';\r\n            }\r\n        },\r\n        selectfilterColumnvalue: function (data) {\r\n            var vm = this\r\n            const index = vm.Columnlist.findIndex(object => object.CustomFieldId === data.CustomFieldId);\r\n            if (index === -1) {\r\n                vm.modulelisting.forEach((mitem, mindex) => {\r\n                    vm.modulelisting[mindex].forEach(inneritem => {\r\n                        const validindex = vm.modulelisting[mindex].findIndex(x => x.CustomFieldId === data.CustomFieldId);\r\n                        if (validindex != -1) {\r\n                            vm.Addfields(data, '', mindex, vm.submodulename[mindex]);\r\n                            vm.itemclass = 'd-none';\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            vm.ColumnSearchmodel = '';\r\n        },\r\n        ResetPreview: function (customreportparameters) {\r\n            var vm = this;\r\n            vm.modulelisting.splice(0);\r\n            vm.Columnlist.splice(0);\r\n            vm.Columnlist = [];\r\n            vm.Grouplist.splice(0);\r\n            vm.Groupsearchmodel = '';\r\n            vm.previewdata.splice(0);\r\n            vm.RequestFilterJosn = [];\r\n            vm.Filterlist = [];\r\n            vm.ExpressionArray = [];\r\n            vm.ExpressionFieldsArray = [];\r\n            vm.saveJsonReport = [];\r\n            vm.setvalue = 0;\r\n            vm.modulelistingforfilter.splice(0);\r\n            vm.CalculatedUIEnabled = false;\r\n            vm.ChartGroupingArray = [];\r\n            vm.GroupingArray = [];\r\n            vm.MainSearchmodel = '';\r\n            vm.IsMandatoryforFilterAfterReset = true;\r\n            vm.SearchNoRecordForField = false;\r\n            vm.SearchNoRecordForFilter = false;\r\n            vm.searchColumnfilter = [];\r\n            vm.GetList(customreportparameters);\r\n        },\r\n        GetDateFromDetail: function () {\r\n            var vm = this;\r\n            DataReportService.GetDateDetails().then((response) => {\r\n                vm.GetDateFromDB = response.data;\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n        },\r\n        resetoldvalueinfilteroperator(element, IsBinding) {\r\n            var vm = this;\r\n            if (element.selectedOPValue != '' && IsBinding != '') {\r\n                vm.dropdwonvalues = [];\r\n                vm.FormSchema[0].Data[0].value= []\r\n                vm.ValueDisplaytext = '';\r\n                vm.ValueDisplaytext2 = '';\r\n                vm.ValueDisplaynumber = '';\r\n                vm.ValueDisplaynumber2 = '';\r\n                vm.ValueDisplaydate = '';\r\n                vm.modeldaterange = '';\r\n                vm.ValueDisplaydate2 = '';\r\n                vm.Displaymultiplevalue = '';\r\n                vm.ValueDisplayTime = '';\r\n                vm.ValueDisplayTime2 = '';\r\n                vm.modelFilterDDLValue = '';\r\n            }\r\n        },\r\n        checkvalue:async function (operatorname, element, OperatorExpression, operatorid, IsBinding) {\r\n            var vm = this;\r\n            if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                vm.GetFilterSelectDDL(element.CustomFieldId, element.FieldName);\r\n            } else if (operatorname === 'Date Range') {\r\n                vm.GetDateRangeFilterDDL();\r\n            }\r\n            setTimeout(function () {\r\n                vm.savedOperatorName = \"\";\r\n                vm.SelectedoperatorMappedDatatype = element.ColumnFieldDataCode;\r\n                vm.CurrentOperatorSelected = OperatorExpression;\r\n                vm.savedOperatorName = operatorname;\r\n                vm.operator_id = operatorid;\r\n                vm.componentkey += 1;\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.texttypevalue1 = true;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.numbertypevalue1 = false;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty') {\r\n                        vm.DDLForFilter = false;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                    else if (OperatorExpression == 'IN' || OperatorExpression == 'NOT IN') {\r\n                        vm.multiselectvalue = true;\r\n                        vm.DDLForFilter = false;\r\n                    } else {\r\n                        vm.DDLForFilter = true;\r\n                        vm.multiselectvalue = false;\r\n                        vm.texttypevalue1 = false;\r\n                        vm.texttypevalue2 = false;\r\n                    }\r\n                }\r\n                if (element.ColumnFieldDataCode === 'date') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = true;\r\n                        vm.DDLForDateRange = false;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = false;\r\n                    }else if(operatorname == \"Date Range\"){\r\n                        vm.datetypevalue1 = false;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = true;\r\n                    }\r\n                    else {\r\n                        vm.datetypevalue1 = true;\r\n                        vm.datetypevalue2 = false;\r\n                        vm.DDLForDateRange = false;\r\n                    }\r\n                }\r\n\r\n                if (element.ColumnFieldDataCode === 'time') {\r\n                    if (operatorname == 'Between') {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = true;\r\n                    } else if (operatorname == 'Is Empty' || operatorname == 'Is Not Empty' || operatorname == 'Is Off Day' || operatorname == 'Is Week End') {\r\n                        vm.timetypevalue = false;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                    else {\r\n                        vm.timetypevalue = true;\r\n                        vm.timetypevalue2 = false;\r\n                    }\r\n                }\r\n\r\n                if (IsBinding != undefined) {\r\n                    if (operatorid != undefined && operatorname != undefined) {\r\n                        vm.dropdwonvalues = [];\r\n                        vm.FormSchema[0].Data[0].value= []\r\n                        vm.ValueDisplaytext = '';\r\n                        vm.ValueDisplaytext2 = '';\r\n                        vm.ValueDisplaynumber = '';\r\n                        vm.ValueDisplaynumber2 = '';\r\n                        vm.ValueDisplaydate = '';\r\n                        vm.modeldaterange = '';\r\n                        vm.ValueDisplaydate2 = '';\r\n                        vm.modelFilterDDLValue = '';\r\n                        vm.ValueDisplayTime = '';\r\n                        vm.ValueDisplayTime2 = '';\r\n                        if (element.OPERATOR_ID == operatorid) {\r\n                            vm.FillFiltervalue(operatorid, element);\r\n                        }\r\n                        element = [];\r\n                    }\r\n                }\r\n                else {\r\n                    var checksameoperator = vm.Filterlist.find(x => x.OPERATOR_ID === operatorid);\r\n                    if (checksameoperator != -1) {\r\n                        vm.resetoldvalueinfilteroperator(element, IsBinding)\r\n                    }\r\n                }\r\n            }, 1000);\r\n        },\r\n        GetOperatordata: function (element) {\r\n            var vm = this;\r\n            var CustomFieldId = element.CustomFieldId;\r\n            var params = `dataType=${element.ColumnFieldDataCode}&customField=${CustomFieldId}`;\r\n            DataReportService.GetDataOperator(params).then(response => {\r\n                vm.GetOperator = response.data.DATA;\r\n                vm.BindOperatorValues(CustomFieldId, element);\r\n                if (element.OPERATOR_ID > 0) {\r\n                    var checkIfExists = vm.GetOperator.filter((x) => {\r\n                        return x.OPERATOR_ID == element.OPERATOR_ID\r\n                    });\r\n                    if (checkIfExists.length > 0) {\r\n                        var IsBinding = true;\r\n                        vm.isBinding = IsBinding;\r\n                        vm.checkvalue(checkIfExists[0].OPERATOR_DISPLAY_NAME, element, checkIfExists[0].OPERATOR_EXPRESSION, element.OPERATOR_ID, checkIfExists[0].MP[0].OPERATION_DATA_TYPE, IsBinding)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        popupvaluebind(Index, data) {\r\n            var vm = this;\r\n            if (data.ColumnFieldDataCode == 'string') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText.split(',');\r\n                    //  vm.value5 = true;\r\n                    // vm.dropdwonvalues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.texttypevalue1 = true;\r\n                    vm.ValueDisplaytext = this.Filterlist[Index].valueTypeText;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'select') {\r\n                if (data.OperatorDisplayName == 'Equal to one of multiple possible values' || data.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                    vm.multiselectvalue = true;\r\n                    vm.commaSepratedSelectedValues = this.Filterlist[Index].Displaymultiplevalue.split(',');\r\n                }\r\n                else {\r\n                    vm.DDLForFilter = true;\r\n                    var GetFilterddlvalue = vm.options.find(x => x.name === data.DropDownValue);\r\n                    vm.modelFilterDDLValue = GetFilterddlvalue?.value;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'date') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.datetypevalue2 = true;\r\n                    vm.DDLForDateRange = false;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = this.Filterlist[Index].valueTypeSeconddate;\r\n                }\r\n                else if(vm.DisplayName == \"Date Range\"){\r\n                    vm.DDLForDateRange = true;\r\n                    vm.modeldaterange = this.Filterlist[Index].DateRangeValue;\r\n                }\r\n                else {\r\n                    vm.datetypevalue1 = true;\r\n                    vm.DDLForDateRange = false;\r\n                    vm.ValueDisplaydate = this.Filterlist[Index].valueTypeFirstdate;\r\n                }\r\n            }\r\n            if (data.ColumnFieldDataCode == 'time') {\r\n                if (vm.DisplayName == 'Between') {\r\n                    vm.timetypevalue = true;\r\n                    vm.timetypevalue2 = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = this.Filterlist[Index].ValueDisplaySecondTime;\r\n                }\r\n                else {\r\n                    vm.timetypevalue = true;\r\n                    vm.ValueDisplayTime = this.Filterlist[Index].ValueDisplayFirstTime;\r\n                }\r\n            }\r\n        },\r\n        BindOperatorValues(CustomFieldId, element) {\r\n            var vm = this;\r\n            vm.isBinding = false;\r\n            var Index = this.Filterlist.findIndex(element => element.CustomFieldId == CustomFieldId)\r\n            vm.DisplayName = this.Filterlist[Index].OperatorDisplayName;\r\n            if (vm.DisplayName != null && vm.DisplayName != undefined && vm.DisplayName != '') {\r\n                vm.operator = this.GetOperator.find(item => item.OPERATOR_DISPLAY_NAME == vm.DisplayName)\r\n                vm.Filterlist[Index]['selectedOPValue'] = vm.operator.OPERATOR_ID;\r\n                vm.Datatype = vm.operator.MP[0].OPERATION_DATA_TYPE;\r\n                vm.popupvaluebind(Index, element);\r\n                if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int') {\r\n                    if (vm.DisplayName == 'Between') {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.numbertypevalue2 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                        vm.ValueDisplaynumber2 = this.Filterlist[Index].valueTypeNumber2;\r\n                    }\r\n                    else {\r\n                        vm.numbertypevalue1 = true;\r\n                        vm.ValueDisplaynumber = this.Filterlist[Index].valueTypeNumber;\r\n                    }\r\n                }\r\n            } else {\r\n                vm.selectedOPValue = '';\r\n            }\r\n        },\r\n        FilterJosnRquest(elem) {\r\n            var vm = this;\r\n            if ((elem.OperatorDisplayName == 'Not Match a character pattern' || elem.OperatorDisplayName == 'Match a character pattern') && vm.ValueDisplaytext == '') {\r\n                vm.ShowAlert(vm.$t(\"Please enter some value in the text field\"), 'warning', true, vm.$t('Alert'));\r\n                return false;\r\n            }\r\n            if (vm.SelectedoperatorMappedDatatype == 'string') {\r\n                if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                    vm.FirstOperand = vm.ValueDisplaytext\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext2;\r\n\r\n                    if (elem.OperatorDisplayName == 'Equal to one of multiple possible values' || elem.OperatorDisplayName == 'Not Equal to one of multiple possible values') {\r\n                        let Commaseprated = vm.ValueDisplaytext.split(',')\r\n\r\n\r\n                        vm.FirstOperandValue1 = Commaseprated;\r\n                    }\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + vm.ValueDisplaytext + '\\'';\r\n                    vm.FirstOperandValue1 = vm.ValueDisplaytext;\r\n                }\r\n            }\r\n\r\n            else if (vm.SelectedoperatorMappedDatatype == 'decimal' || vm.SelectedoperatorMappedDatatype == 'int' || vm.SelectedoperatorMappedDatatype == 'bigint') {\r\n                if (elem.OperatorDisplayName == 'Between') {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                    vm.SecondOperand = '\\'' + elem.valueTypeNumber2 + '\\'';\r\n                    vm.SecondOperandValue1 = elem.valueTypeNumber2;\r\n                }\r\n                else {\r\n                    vm.FirstOperand = '\\'' + elem.valueTypeNumber + '\\'';\r\n                    vm.FirstOperandValue1 = elem.valueTypeNumber;\r\n                }\r\n            }\r\n            let operatoerExpressionResult = vm.ConvertOperatorToExpression(vm.CurrentOperatorSelected, vm.FirstOperand, vm.SecondOperand);\r\n            const checkAlredyExist = vm.RequestFilterJosn.findIndex(item => item.CustomFieldId === elem.CustomFieldId);\r\n            if (checkAlredyExist == -1) {\r\n                vm.RequestFilterJosn.push({\r\n                    CustomFieldId: elem.CustomFieldId,\r\n                    FieldName: elem.FieldName,\r\n                    ActualDataType: vm.SelectedoperatorMappedDatatype,\r\n                    FilterCount: elem.FilterCount,\r\n                    OperatorExpression: operatoerExpressionResult,\r\n                    OPERATOR_ID: vm.operator_id,\r\n                    Value1: vm.FirstOperandValue1,\r\n                    Value2: vm.SecondOperandValue1,\r\n                    IsMandatoryforFilter: elem.IsMandatoryforFilter,\r\n                    FieldIcons: elem.FieldIcons,\r\n                    DisplayName: elem.DisplayName,\r\n                    FilterTypeAndorOr: elem.FilterTypeAndorOr,\r\n                    PickListOption: elem.PickListOption,\r\n                    ColumnFieldDataCode: elem.ColumnFieldDataCode,\r\n                })\r\n            }\r\n            else {\r\n                let element = vm.RequestFilterJosn.find(item => item.CustomFieldId === elem.CustomFieldId);\r\n                element.OperatorExpression = operatoerExpressionResult;\r\n                element.PickListOption = elem.PickListOption;\r\n                element.ColumnFieldDataCode = elem.ColumnFieldDataCode;\r\n                element.OPERATOR_ID = vm.operator_id;\r\n                element.Value1 = vm.FirstOperandValue1;\r\n                element.Value2 = vm.SecondOperandValue1;\r\n                element.IsMandatoryforFilter = elem.IsMandatoryforFilter;\r\n                element.FieldIcons = elem.FieldIcons;\r\n            }\r\n            vm.ClosePopFilter();\r\n        },\r\n        FillFiltervalue: function (id, element) {\r\n            var vm = this;\r\n            vm.ArrayforFilterpopup.push(element);\r\n            var checkIfExists = vm.ArrayforFilterpopup.findIndex((x) => {\r\n                return x.OPERATOR_ID == id\r\n            });\r\n            if (checkIfExists > -1) {\r\n                var filtervalueexist = vm.RequestFilterJosn.find(x => x.OPERATOR_ID == id && x.CustomFieldId === element.CustomFieldId)\r\n                if (element.ColumnFieldDataCode == 'string') {\r\n                    vm.ValueDisplaytext = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaytext = element.valueTypeText\r\n                    vm.ValueDisplaytext2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode == 'decimal' || element.ColumnFieldDataCode == 'int' || element.ColumnFieldDataCode == 'bigint') {\r\n                    vm.ValueDisplaynumber = filtervalueexist?.Value1;\r\n                    vm.ValueDisplaynumber2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'date') {\r\n                    if(vm.CurrentOperatorSelected == 'DateRange'){\r\n                        vm.modeldaterange = filtervalueexist?.Value1;\r\n                    }else{\r\n                    vm.ValueDisplaydate = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplaydate = element.valueTypeFirstdate;\r\n                    vm.ValueDisplaydate2 = filtervalueexist?.Value2;}\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'time') {\r\n                    vm.ValueDisplayTime = filtervalueexist?.Value1;\r\n                    // vm.ValueDisplayTime = element.ValueDisplayFirstTime;\r\n                    vm.ValueDisplayTime2 = filtervalueexist?.Value2;\r\n                }\r\n                else if (element.ColumnFieldDataCode === 'select' && element.PickListOption === 'Lookup') {\r\n                    if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                        var multiddl = filtervalueexist?.Value1.replace(/\"|'/g, '');\r\n                        vm.dropdwonvalues = multiddl?.split(',');\r\n                        var fillmultiselect = [];\r\n                        vm.dropdwonvalues.forEach(dditem=>{\r\n                            const ifexist = vm.options.find(j => j.value === dditem)\r\n                            if (ifexist != -1 && ifexist != undefined) {\r\n                                var fillvalues = {value: ifexist.value, label: ifexist.name}\r\n                                fillmultiselect.push(fillvalues);\r\n                            }\r\n                        })\r\n                        vm.FormSchema[0].Data[0].value = fillmultiselect;\r\n                        vm.dropdwonvalues = [];\r\n                    } else {\r\n                        vm.modelFilterDDLValue = filtervalueexist?.Value1;\r\n                    }\r\n                }\r\n            }\r\n            vm.filterRulechange()\r\n        },\r\n        applySetting: function (CustomFieldId) {\r\n            var vm = this;\r\n            var isBetweenTrue = false\r\n            if(vm.FormSchema[0].Data[0].value.length > 0){\r\n                vm.FormSchema[0].Data[0].value.forEach(multiitem=>{\r\n                    vm.dropdwonvalues.push(multiitem.value)\r\n                })\r\n            }\r\n            if (vm.savedOperatorName == 'Between') {\r\n                if (vm.ValueDisplaytext != '' && vm.ValueDisplaytext2 != '' || (vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0') && vm.ValueDisplaynumber2 != ''\r\n                    || vm.ValueDisplaydate != '' && vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' && vm.ValueDisplayTime2 != '') {\r\n                    isBetweenTrue = true;\r\n                }\r\n            } else if (vm.ValueDisplaytext != '' || vm.ValueDisplaytext2 != '' || vm.ValueDisplaynumber != '' || vm.ValueDisplaynumber == '0' ||\r\n                vm.ValueDisplaynumber2 != '' || vm.ValueDisplaydate != '' || vm.ValueDisplaydate2 != '' || vm.ValueDisplayTime != '' || vm.ValueDisplayTime2 != '' ||\r\n                vm.dropdwonvalues.length > 0 || vm.modelFilterDDLValue != '' || vm.savedOperatorName == 'Is Empty' || vm.savedOperatorName == 'Is Not Empty'\r\n                || vm.savedOperatorName == 'Is Off Day' || vm.savedOperatorName == 'Is Week End' || vm.modeldaterange != '') {\r\n                isBetweenTrue = true\r\n            }\r\n            setTimeout(function () {\r\n                if (isBetweenTrue) {\r\n                    var Multiddlvalue = [];\r\n                    // if(vm.ValueDisplaytext==\"\" && vm.ValueDisplaytext2==\"\"){\r\n                    //     vm.ShowAlert(\"Please fill this value.\", \"warning\")\r\n                    //     return false;\r\n                    // }\r\n                    vm.dropdwonvalues.forEach(ddlvalues => {\r\n                        const isddlvalueexist = vm.options.find(j => j.value === ddlvalues)\r\n                        if (isddlvalueexist != -1 && isddlvalueexist != undefined) {\r\n                            Multiddlvalue.push(isddlvalueexist.name);\r\n                        }\r\n                    })\r\n                    if (vm.dropdwonvalues != '') {\r\n                        vm.commaSepratedSelectedValues = vm.dropdwonvalues?.join();\r\n                        vm.modelFilterDDLValue = '';\r\n                    }\r\n                    var GetDDLValue = '';\r\n                    if (vm.modelFilterDDLValue != '') {\r\n                        GetDDLValue = vm.options.find(i => i.value === vm.modelFilterDDLValue)\r\n                    }\r\n                    var elem = vm.Filterlist.find(x => x.CustomFieldId == CustomFieldId);\r\n                    elem.OperatorDisplayName = vm.savedOperatorName;\r\n                    elem.valueTypeText = vm.ValueDisplaytext;\r\n                    elem.valueTypeText2 = vm.ValueDisplaytext2;\r\n                    elem.valueTypeNumber = vm.ValueDisplaynumber;\r\n                    elem.valueTypeNumber2 = vm.ValueDisplaynumber2;\r\n                    elem.valueTypeFirstdate = vm.ValueDisplaydate;\r\n                    elem.valueTypeSeconddate = vm.ValueDisplaydate2;\r\n                    elem.ValueDisplayFirstTime = vm.ValueDisplayTime;\r\n                    elem.ValueDisplaySecondTime = vm.ValueDisplayTime2;\r\n                    elem.Displaymultiplevalue = Multiddlvalue?.join();\r\n                    elem.DropDownValue = GetDDLValue?.name;\r\n                    elem.DateRangeValue = vm.modeldaterange;\r\n                    // elem.DropDownValue = GetDDLValue;\r\n                    elem.OPERATOR_ID = vm.operator_id;\r\n                    vm.maincomponentkey += 1;\r\n                    if (vm.SelectedoperatorMappedDatatype == 'select') {\r\n                        if (vm.CurrentOperatorSelected == 'IN' || vm.CurrentOperatorSelected == 'NOT IN') {\r\n                            //multi select  IN(\"'1','2','3'\") in Filter Case\r\n                            let valArray = vm.commaSepratedSelectedValues.split(\".\");\r\n                            let commsplitedVal = valArray.join(\",\")\r\n                            vm.FirstOperand = '\\'' + commsplitedVal.split(',').join('\\',\\'') + '\\'';\r\n                            let CommaSepratedStringValues = vm.FirstOperand;\r\n                            vm.FirstOperandValue1 = CommaSepratedStringValues;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + vm.modelFilterDDLValue + '\\'';\r\n                            vm.FirstOperandValue1 = vm.modelFilterDDLValue;\r\n                        }\r\n                    }\r\n                    else if (vm.SelectedoperatorMappedDatatype == 'date') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                            vm.SecondOperand = '\\'' + elem.valueTypeSeconddate + '\\'';\r\n                            vm.SecondOperandValue1 = elem.valueTypeSeconddate;\r\n                        } else if(elem.OperatorDisplayName == 'Date Range'){\r\n                            vm.FirstOperand = '\\'' + elem.DateRangeValue + '\\'';\r\n                            vm.FirstOperandValue1 = elem.DateRangeValue;\r\n                        }\r\n                        else {\r\n                            vm.FirstOperand = '\\'' + elem.valueTypeFirstdate + '\\'';\r\n                            vm.FirstOperandValue1 = elem.valueTypeFirstdate;\r\n                        }\r\n                    } else if (vm.SelectedoperatorMappedDatatype == 'time') {\r\n                        if (elem.OperatorDisplayName == 'Between') {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                            vm.SecondOperand = '\\'' + elem.ValueDisplaySecondTime + '\\'';\r\n                            vm.SecondOperandValue1 = elem.ValueDisplaySecondTime;\r\n                        } else {\r\n                            vm.FirstOperand = '\\'' + elem.ValueDisplayFirstTime + '\\'';\r\n                            vm.FirstOperandValue1 = elem.ValueDisplayFirstTime;\r\n                        }\r\n                    }\r\n                    vm.FilterJosnRquest(elem);\r\n                } else {\r\n                    vm.ShowAlert(\"Cannot Add Empty Filter\", \"failure\");\r\n                }\r\n            }, 500)\r\n            //vm.ClosePopFilter();\r\n        },\r\n        FilterTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = true;\r\n            vm.showModuleListForField = false;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n            vm.SearchNoRecordForFilter = false;\r\n        },\r\n        FieldTabClicked() {\r\n            var vm = this;\r\n            vm.showModuleListForFilter = false;\r\n            vm.showModuleListForField = true;\r\n            vm.MainSearchmodel = '';\r\n            vm.searchColumnfilter = [];\r\n            vm.SearchNoRecordForField = false;\r\n        },\r\n        openActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=true;\r\n            // e.target.nextSibling.removeAttribute('style');\r\n            // e.target.nextSibling.setAttribute('style', 'width:240px;');\r\n            // e.target.nextSibling.style.display = 'block';\r\n        },\r\n        closeActionIcon: function (e) {\r\n            var vm = this;\r\n            vm.showRowLevelFunction=false;\r\n        },\r\n        OpenCalculatedUI: function () {\r\n            var vm = this;\r\n            vm.showcalculatedUI = true;\r\n            vm.editexpressionvalue = false;\r\n            vm.showRowLevelFunction=false;\r\n            vm.AlreadyExistExpression = {};\r\n            $(\"#showcalculatedfield\").modal(\"show\");\r\n            setTimeout(function () {\r\n                $(\"#showcalculatedfield\").modal('show');\r\n                setTimeout(function () {\r\n                    vm.SetBootstraptoolTip();\r\n                }, 200);\r\n            }, 1000);\r\n        },\r\n        VerifiedExpressionColumnValue({ ExpressionID, FieldValue, VerifiedExpression, ExpressionFieldArray, ExpressionDisplay, Functionkey ,IsEdit,IsExpExist}) {\r\n            var vm = this;\r\n            const checkAlredyExist = vm.Columnlist.findIndex(object => object.CustomFieldId === ExpressionID);\r\n            const checkFieldVlaueExist = vm.Columnlist.findIndex(object => object.FieldName === FieldValue);\r\n            var ExpressionDisplayOrder;\r\n            if ((checkAlredyExist === -1 || checkFieldVlaueExist === -1) && !IsEdit) {\r\n                var checkExpExist = '';\r\n                var indexvalue = '';\r\n                var count = 0;\r\n                vm.Columnlist.forEach(CheckItem => {\r\n                    if (CheckItem.Calculated_Field || count != 0) {\r\n                        vm.setvalue = 1;\r\n                        count++;\r\n                    } else { vm.setvalue = 0; }\r\n                })\r\n                if (vm.setvalue == 1) {\r\n                    vm.Columnlist.forEach(item => {\r\n                        if (item.Calculated_Field) {\r\n                            var tempdata = [];\r\n                            tempdata.push(item);\r\n                            var checkExpvalue = tempdata.find(x => x.ModuleIndex);\r\n                            checkExpExist = checkExpvalue.ModuleIndex;\r\n                        }\r\n                    })\r\n                    indexvalue = parseInt(checkExpExist) + 1;\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    indexvalue = getlastarrayvalue.ModuleIndex + 2;\r\n                    vm.setvalue = 1;\r\n                }\r\n                if (vm.Columnlist.length < 1) {\r\n                    ExpressionDisplayOrder = vm.Columnlist.length\r\n                }\r\n                else {\r\n                    const getlastarrayvalue = vm.Columnlist[vm.Columnlist.length - 1];\r\n                    ExpressionDisplayOrder = getlastarrayvalue.Display_Order + 1;\r\n                }\r\n                vm.Columnlist.push({\r\n                    CustomFieldId: '', FieldName: FieldValue, DisplayName: FieldValue, DateFormat: null,\r\n                    DateFormatId: null,\r\n                    DecimalPlace: null,\r\n                    IsUseSeprator: null,\r\n                    IsCurrencySymbol: null,\r\n                    ColumnFieldDataCode: \"string\",\r\n                    Display_Order: ExpressionDisplayOrder,\r\n                    ModuleIndex: indexvalue,\r\n                    Calculated_Field: true,\r\n                    ExpressionDisplay: ExpressionDisplay\r\n                });\r\n                if (VerifiedExpression != \"\") {\r\n                    vm.ExpressionArray.push(\r\n                        {\r\n                            \"ExpressionID\": ExpressionID, \"Expression\": VerifiedExpression, \"ExpressionName\": FieldValue, \"ExpressionDisplay\": ExpressionDisplay, \"ColumnIndex\": indexvalue,\r\n                            \"REPORTID\": vm.customreportparameters.ReportID,\r\n                            \"FunctionKeys\": Functionkey\r\n                        }\r\n                    )\r\n                    var dataele = vm.Columnlist.find(x => x.FieldName === FieldValue);\r\n                    dataele.ModuleIndex = indexvalue;\r\n                    if (vm.ExpressionFieldsArray == undefined) {\r\n                        vm.ExpressionFieldsArray = [];\r\n                    }\r\n                    ExpressionFieldArray.forEach(Arrayitem => {\r\n                        vm.ExpressionFieldsArray.push({ CustomFieldId: Arrayitem.CustomFieldId, FieldName: Arrayitem.FieldName, ColumnIndex: indexvalue });\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                var colelem = vm.Columnlist.find(x=>x.ModuleIndex === IsExpExist.ModuleIndex)\r\n                colelem.CustomFieldId = ExpressionID;\r\n                colelem.FieldName = FieldValue;\r\n                colelem.DisplayName = FieldValue;\r\n                colelem.DateFormat = null;\r\n                colelem.DateFormatId = null;\r\n                colelem.DecimalPlace = null;\r\n                colelem.IsUseSeprator = null;\r\n                colelem.IsCurrencySymbol = null;\r\n                colelem.ColumnFieldDataCode = \"string\";\r\n                colelem.Display_Order = IsExpExist.Display_Order;\r\n                colelem.ModuleIndex = IsExpExist.ModuleIndex\r\n                colelem.Calculated_Field = true,\r\n                colelem.ExpressionDisplay = ExpressionDisplay;\r\n\r\n                var verifyelem = vm.ExpressionArray.find(vobject => vobject.ColumnIndex === IsExpExist.ModuleIndex)\r\n                verifyelem.ExpressionID = ExpressionID;\r\n                verifyelem.Expression = VerifiedExpression;\r\n                verifyelem.ExpressionName = FieldValue;\r\n                verifyelem.ExpressionDisplay = ExpressionDisplay;\r\n                verifyelem.ColumnIndex = IsExpExist.ModuleIndex;\r\n                verifyelem.REPORTID = vm.customreportparameters.ReportID;\r\n                verifyelem.FunctionKeys = Functionkey;\r\n\r\n                ExpressionFieldArray.forEach(Arrayitem => {\r\n                    var fieldexp = vm.ExpressionFieldsArray.find(fobject => fobject.ColumnIndex === IsExpExist.ModuleIndex)\r\n                    fieldexp.CustomFieldId = Arrayitem.CustomFieldId;\r\n                    fieldexp.FieldName = Arrayitem.FieldName;\r\n                    fieldexp.ColumnIndex = IsExpExist.ModuleIndex;\r\n                })\r\n            }\r\n            vm.$refs.Calculated?.close();\r\n        },\r\n        SelectAllSearch(){\r\n            var vm = this;\r\n            vm.GetSelectedValue = window.getSelection().toString()\r\n        },\r\n        ListFiltering: function () {\r\n            var vm = this;\r\n            vm.isFieldCollapsed = false;\r\n            let isFieldActive = vm.$refs.FIELDS.active;\r\n            \r\n            var input = document.getElementById('searchinput');\r\n\r\n            var filterinput = input.value;\r\n            if(vm.GetSelectedValue != ''){\r\n                filterinput = filterinput.replaceAll(vm.GetSelectedValue,'')\r\n                vm.GetSelectedValue = '';\r\n            }\r\n            if (filterinput != null && filterinput != \"\") {\r\n                $(\".multi-collapse\").addClass(\"show\");\r\n            }\r\n            else {\r\n                $(\".multi-collapse\").removeClass(\"show\");\r\n            }\r\n            let count = 0;\r\n            var searchcol = [];\r\n            var searchfilter = [];\r\n            if (isFieldActive) {\r\n                vm.modulelisting.forEach((item, index) => {\r\n                    if(vm.modulelisting[index].length > 0 || filterinput != null && filterinput != \"\"){\r\n                        count = 0;\r\n                        vm.modulelisting[index].forEach((indexitem) => {\r\n                            searchfilter.push(indexitem);\r\n                            searchcol = searchfilter.filter(searchitem => {\r\n                                var displayMainColname = (vm.$t(searchitem.DisplayName != null)) ? vm.$t(searchitem.DisplayName) : vm.$t(searchitem.FieldName);\r\n                                return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                            })\r\n                        })\r\n                    }else{count++;}\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                vm.isFieldCollapsed = true;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecordForField = false\r\n                } else { vm.SearchNoRecordForField = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n            else {\r\n                let count = 0;\r\n                vm.modulelistingforfilter.forEach((item, index) => {\r\n                    if(vm.modulelistingforfilter[index].length > 0 || filterinput != null && filterinput != \"\"){\r\n                        count = 0;\r\n                        vm.modulelistingforfilter[index].forEach((indexitem) => {\r\n                            searchfilter.push(indexitem);\r\n                            searchcol = searchfilter.filter(searchitem => {\r\n                                var displayMainColname = (vm.$t(searchitem.DisplayName != null)) ? vm.$t(searchitem.DisplayName) : vm.$t(searchitem.FieldName);\r\n                                return displayMainColname.replace(/\\W/g, \"\").toLowerCase().includes(filterinput.replace(/\\W/g, \"\").toLowerCase());\r\n                            })\r\n                        })\r\n                    }else{count++;}\r\n                    vm.searchColumnfilter[index] = searchcol;\r\n                    searchfilter = [];\r\n                    searchcol = [];\r\n                })\r\n                vm.isFieldCollapsed = true;\r\n                for (let filteritem in vm.searchColumnfilter) {\r\n                    if (vm.searchColumnfilter[filteritem].length > 0) {\r\n                        count++;\r\n                    }\r\n                }\r\n                if (count > 0) {\r\n                    vm.SearchNoRecordForFilter = false\r\n                } else { vm.SearchNoRecordForFilter = true; }\r\n                return vm.searchColumnfilter;\r\n            }\r\n        },\r\n        checkMove(e) {\r\n            var vm = this;\r\n            var getindex = 0;\r\n            if (e.related.id == 'TargetDivID') {\r\n                if(!vm.showModuleListForFilter){\r\n                    if(vm.Columnlist.length < 20 || e.dragged.id === e.related.id){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFields\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n                else{\r\n                    if(vm.Filterlist.length < 20){\r\n                        return true;}\r\n                    else{\r\n                        vm.ShowAlert(vm.$t(\"AddCustomFilter\"), 'failure', true, vm.$t('Alert'));\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n            else if (!e.draggedContext.element.Calculated_Field && e.draggedContext.element.Calculated_Field != undefined) {\r\n                let IsGraphColumn = vm.$refs.reportdata.CheckColumnExistInGraph(e.draggedContext.element.CustomFieldId)\r\n                if(!IsGraphColumn){\r\n                    vm.modulelisting.forEach((i, index) => {\r\n                        vm.GetSubModuleList[index].forEach(j => {\r\n                            if (e.relatedContext.list.length == 0) {\r\n                                if (j.CustomFieldId === e.draggedContext.element.CustomFieldId) {\r\n                                    getindex = index;\r\n                                }\r\n                            }\r\n                            else if (j.CustomFieldId === e.relatedContext.element.CustomFieldId) {\r\n                                getindex = index;\r\n                            }\r\n                        })\r\n                    })\r\n                    if (getindex === e.draggedContext.element.ModuleIndex) {\r\n                        var checkforvalueIndex = vm.Grouplist.findIndex(x=>x.CustomFieldId === e.draggedContext.element.CustomFieldId);\r\n                        if(checkforvalueIndex > -1){\r\n                            vm.GrouplistIndex = checkforvalueIndex;\r\n                        }\r\n                        return true;\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                }else{\r\n                    vm.ShowAlert(vm.$t(\"GraphFields\"), 'warning', true, vm.$t('Alert'));\r\n                    return false;\r\n                }\r\n            }\r\n            else {\r\n                return false;\r\n            } \r\n        },\r\n        onDragEnd: function (e, x) {\r\n            if (e.item.id == 'StopDragfield') {\r\n                return true;\r\n            }\r\n            else {\r\n                e.preventDefault();\r\n                return false;\r\n            }\r\n        },\r\n        ColumnListDisplayOrder: function (e) {\r\n            var vm = this;\r\n            debugger\r\n            if(vm.GrouplistIndex != null){\r\n                vm.Grouplist.splice(vm.GrouplistIndex,1);\r\n                vm.GrouplistIndex = null;\r\n            }\r\n            if(!vm.showModuleListForFilter){\r\n                $(\".setting-div-box\").width('0px');\r\n                vm.Columnlist.forEach((Colitem, Colindex) => {\r\n                    Colitem.Display_Order = Colindex + 1;\r\n                })\r\n            }else{\r\n                vm.dragover();\r\n                vm.ClosePopFilter();\r\n            }\r\n        },\r\n        GetDraggedItem(event, index, MainFieldname) {\r\n            var vm = this;\r\n            if (event.removed != undefined) {\r\n                if (MainFieldname != undefined) {\r\n                    let GetAddedFieldFromDrag = vm.Columnlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelisting[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelisting[index].splice(vm.modulelisting[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Columnlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.Addfields(event.removed.element, event, index, MainFieldname);\r\n                    }\r\n                } else {\r\n                    let GetAddedFieldFromDrag = vm.Filterlist.findIndex(AddedField => AddedField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    let GetAddedFieldFromModuleListing = vm.modulelistingforfilter[index].findIndex(ModuleListField => ModuleListField.CustomFieldId === event.removed.element.CustomFieldId);\r\n                    if (GetAddedFieldFromModuleListing != -1) {\r\n                        vm.modulelistingforfilter[index].splice(vm.modulelistingforfilter[index].indexOf(event.removed.element), 1);\r\n                    }\r\n                    if (GetAddedFieldFromDrag != -1) {\r\n                        vm.Filterlist.splice(GetAddedFieldFromDrag, 1);\r\n                        vm.AddFilter(event.removed.element, index,event);\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        MatchIfSameNameExist(GetChangedNameID,element) {\r\n            var vm = this;\r\n            for (let i = 0; i < vm.Columnlist.length; i++) {\r\n                for (let j = 0; j < i; j++) {\r\n                    if(element != undefined){\r\n                        if(element.CustomFieldId != vm.Columnlist[i].CustomFieldId && element.DisplayName == vm.$t(vm.Columnlist[j].DisplayName)){\r\n                            if ((vm.Columnlist[i].CustomFieldId != vm.Columnlist[j].CustomFieldId && (vm.$t(vm.Columnlist[i].DisplayName) == vm.$t(vm.Columnlist[j].DisplayName)\r\n                            || vm.$t(vm.Columnlist[i].DisplayName).toLowerCase() == vm.$t(vm.Columnlist[j].DisplayName).toLowerCase()))&& vm.Columnlist[i].DisplayName != null && vm.Columnlist[j].DisplayName != null) {\r\n                                return GetChangedNameID == undefined ? vm.$t(vm.Columnlist[i].DisplayName) : vm.$t(vm.Columnlist[i].CustomFieldId);\r\n                            }\r\n                        }\r\n                    }else{\r\n                        if ((vm.Columnlist[i].CustomFieldId != vm.Columnlist[j].CustomFieldId && (vm.$t(vm.Columnlist[i].DisplayName) == vm.$t(vm.Columnlist[j].DisplayName)\r\n                        || vm.$t(vm.Columnlist[i].DisplayName).toLowerCase() == vm.$t(vm.Columnlist[j].DisplayName).toLowerCase())) && vm.Columnlist[i].DisplayName != null && vm.Columnlist[j].DisplayName != null) {\r\n                            return GetChangedNameID == undefined ? vm.$t(vm.Columnlist[i].DisplayName) : vm.$t(vm.Columnlist[i].CustomFieldId);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        filterRulechange() {\r\n            var vm = this;\r\n            vm.filtertype = '';\r\n            if (vm.category == 'Match All Value') {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'AND'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'AND'\r\n                    })\r\n                }\r\n                vm.filtertype = 'AND'\r\n            }\r\n            else {\r\n                vm.Filterlist.forEach(Fitem => {\r\n                    Fitem.FilterTypeAndorOr = 'OR'\r\n                })\r\n                if (vm.RequestFilterJosn.length > 0) {\r\n                    vm.RequestFilterJosn.forEach(RFitem => {\r\n                        RFitem.FilterTypeAndorOr = 'OR'\r\n                    })\r\n                }\r\n                vm.filtertype = 'OR'\r\n            }\r\n        },\r\n        CheckForValidSorting(sortColummnarray) {\r\n            var vm = this;\r\n            var count = 0;\r\n            sortColummnarray.forEach(sortitem => {\r\n                if (sortitem.sortcolummnId != '' && sortitem.columnOrders == '' || sortitem.sortcolummnId == '' && sortitem.columnOrders != '' || sortitem.sortcolummnId == undefined || sortitem.columnOrders == undefined) {\r\n                    count = 1;\r\n                }\r\n            })\r\n            return count;\r\n        },\r\n        PreventValues(event) {\r\n            var vm = this;\r\n            var ekey = event.keyCode;\r\n            if (ekey == 69 || ekey == 107 || ekey == 109) { event.preventDefault(); }\r\n        },\r\n        PreventDecimal(event) {\r\n            var ekey = event.keyCode;\r\n            if (ekey == 110 || ekey == 190) { event.preventDefault(); }\r\n        },\r\n        TruncateStr: function (str, len) {\r\n            var convertstring = '' + str;\r\n            if (convertstring != null)\r\n                if (convertstring.length <= len) return str;\r\n                else return convertstring.substring(0, len) + \"...\";\r\n        }\r\n    }\r\n}\r\n\r\n\r\n</script>\r\n<template>\r\n    <section class=\"page-action\">\r\n        <div class=\"left-menu-tab datareport\">\r\n            <div :class=\"maindiv\">\r\n                <loader :isVisible=\"isLoading\"></loader>\r\n                <div class=\"accordion md-accordion left-filter\" id=\"accordionEx\" role=\"tablist\" aria-multiselectable=\"true\">\r\n                    <div :class=\"editclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 px-2\">{{ ReportName }}\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\"><a :title=\"$t('EditReportName')\" v-on:click=\"editreport()\"\r\n                                            data-toggle-tooltip=\"tooltip\" class=\"collapsed\"> <em aria-hidden=\"true\"\r\n                                                class=\"fa fa-pencil\" style=\"font-size:20px;\"></em></a></span>\r\n                                    <span>\r\n                                        <a title=\"Collapse\" v-on:click=\"collapsedclick()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\"\r\n                                                class=\"fa fa-angle-double-left mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div :class=\"saveclass\">\r\n                        <div class=\"card-header filter-head p-0\" role=\"tab\" id=\"headingOne1\">\r\n                            <h5 class=\"mb-0 pl-2 mt-1\"><input type=\"text\" style=\"width:83%\"  v-model=\"savereportname\"\r\n                                :class=\"{'form-control p-1':true,'is-invalid': savereportname.length >100}\"/>\r\n                                <span class=\"expand_all_filters\">\r\n                                    <span id=\"SearchData\">\r\n                                        <a :title=\"$t('Save')\" v-on:click=\"savereport()\" data-toggle-tooltip=\"tooltip\"\r\n                                            class=\"collapsed\"><em aria-hidden=\"true\" class=\"fa fa-floppy-o mt-1\"></em>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"card-panel\">\r\n                        <div class=\"mb-0 d-lg-block p-2 border\">\r\n                            <div class=\"input-group customsearchbox\">\r\n                                <input type=\"text\" maxlength=\"50\" v-on:keydown=\"ListFiltering\" v-on:keyup=\"ListFiltering\" v-on:mouseup=\"SelectAllSearch\" v-on:mouseleave=\"SelectAllSearch\" id=\"searchinput\"\r\n                                    v-model=\"MainSearchmodel\" placeholder=\"Search by Name\"\r\n                                    class=\"form-control searchcustomfilter border-right-0\" autocomplete=\"off\">\r\n                                <div class=\"input-group-append\">\r\n                                    <span class=\"input-group-text bg-transparent bg-white border-left-0\">\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card\" style=\"border-bottom:1px solid #929292;\"\r\n                            v-for=\"(name, index) in submodulecodename\" :key=\"submodulecodefieldkey\">\r\n                            <div class=\"card-header pl-0\" role=\"tab\" :id=\"'headingOnee' + index\">\r\n                                <h5 class=\"mb-0\"><a data-toggle=\"collapse\" data-parent=\"#accordionEx\"\r\n                                        href=\"javascript:;\" :aria-expanded=\"index == 0 ? true : false\" :data-target=\"'#collapseOne' + index\"\r\n                                        :aria-controls=\"'collapseOne' + index\" :class=\"index == 0 ? '' : 'collapsed'\"><em\r\n                                            class=\"fa fa fa-file-text-o ml-2\" aria-hidden=\"true\"></em><span\r\n                                            class=\"font-weight-bold\">\r\n                                            {{ GetLocalizedValue(name.SubModule) }}</span><em class=\"fa fa-angle-down rotate-icon\"\r\n                                            aria-hidden=\"true\"></em></a><a class=\"tab-Search-btn\"><em class=\"fa fa-search\"\r\n                                            aria-hidden=\"true\"></em></a>\r\n                                </h5>\r\n                            </div>\r\n                            <div\r\n                            :class=\"modulelisting.length == 0 ? 'd-none' : modulelisting[index].length == 0 && !showModuleListForFilter ||\r\n                            modulelistingforfilter[index].length == 0 && showModuleListForFilter ? 'text-center text-danger d-flex align-items-center justify-content-center norecs pt-2' : 'd-none'\"> {{\r\n                                $t(\"NoFieldAvailable\") }}</div>\r\n                            <div :id=\"'collapseOne' + index\" :class=\"index == 0 ? 'collapse multi-collapse show':'collapse multi-collapse'\" role=\"tabpanel\"\r\n                                :aria-labelledby=\"'headingOnee' + index\" data-parent=\"#accordionEx\">\r\n                                <PerfectScrollbar>\r\n                                    <div class=\"card-body p-0 customScrollForLeftBar llt\" style=\"max-height:300px;\">\r\n                                        <div class=\"form-group\">\r\n                                            <ul class=\"nav nav-pills flex-column left-tab responivecustomtab lefttabiconfix\">\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForField\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFields\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    @change=\"GetDraggedItem($event, index, name.SubModule)\" :move=\"checkMove\"\r\n                                                    item-key=\"CustomFieldId\">\r\n                                                    <li class=\"nav-item parent-element\"  id=\"StopDragfield\" v-for=\"(element,elementIndex) in (searchColumnfilter.length == 0 ? modulelisting[index] : searchColumnfilter[index])\" :key=\"elementIndex\">\r\n                                                        <span class=\"nav-link left-menu px-3 \">\r\n                                                            <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left mt-1' : \r\n                                                            (element.dttype != undefined && element.dttype[0].icon != null) ? element.dttype[0].icon + ' ' + 'float-left mt-1' : 'float-left mt-1'\"\r\n                                                                aria-hidden=\"true\"></em>\r\n                                                            <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                :data-toggle-tooltip=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\"\r\n                                                                :title=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}\r\n                                                            </span>\r\n                                                            <a href=\"javascript:;\">\r\n                                                                <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                    aria-hidden=\"true\"\r\n                                                                    v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                </em>\r\n                                                            </a>\r\n                                                        </span>\r\n                                                    </li>\r\n                                                    <!-- <template #item=\"{ element }\">\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : element.dttype[0].icon + ' ' + 'float-left'\"\r\n                                                                    aria-hidden=\"true\"></em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.FieldName,\r\n                                                                        element.DisplayName)\"\r\n                                                                    :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\">\r\n                                                                    {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"#\">\r\n                                                                    <em class=\"fa fa-plus float-right mt-1 text-success pr-0\"\r\n                                                                        aria-hidden=\"true\"\r\n                                                                        v-on:click=\"Addfields(element, $event, index, name.SubModule)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    </template> -->\r\n                                                </draggable>\r\n\r\n                                                <!-- Module List for Filter -->\r\n                                                <draggable v-model=\"modulelistingmodel\" class=\"draggable-list\"\r\n                                                    v-if=\"showModuleListForFilter\"\r\n                                                    :list=\"searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\"\r\n                                                    group=\"my-groupForFilter\" @start=\"drag = true\" @end=\"onDragEnd\"\r\n                                                    :move=\"checkMove\" item-key=\"CustomFieldId\"\r\n                                                    @change=\"GetDraggedItem($event, index)\">\r\n                                                    <!-- <template #item=\"{ element }\"> -->\r\n                                                        <li class=\"nav-item parent-element\" id=\"StopDragfield\" v-for=\"(element,elemIndex) in searchColumnfilter.length == 0 ? modulelistingforfilter[index] : searchColumnfilter[index]\" :key=\"elemIndex\">\r\n                                                            <span class=\"nav-link left-menu px-3 \">\r\n                                                                <em :class=\"element.FieldIcons != undefined ? element.FieldIcons + ' ' + 'float-left' : \r\n                                                                element.dttype[0].icon != null ? element.dttype[0].icon + ' ' + 'float-left' : 'float-left'\"\r\n                                                                    aria-hidden=\"true\">\r\n                                                                </em>\r\n                                                                <span class=\"text-truncate float-left\" style=\"width: 55%;\"\r\n                                                                    :data-toggle-tooltip=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\"\r\n                                                                    :title=\"GetLocalizedValue(element.DisplayName != null ? element.DisplayName : element.FieldName)\">\r\n                                                                    {{\r\n                                                                        GetLocalizedValue(element.FieldName,\r\n                                                                            element.DisplayName)\r\n                                                                    }}\r\n                                                                </span>\r\n                                                                <a href=\"javascript:;\">\r\n                                                                    <em class=\"fa fa-sliders float-right mt-1 text-primary pr-0\"\r\n                                                                        aria-hidden=\"true\" v-on:click=\"AddFilter(element, index,$event)\">\r\n                                                                    </em>\r\n                                                                </a>\r\n                                                            </span>\r\n                                                        </li>\r\n                                                    <!-- </template> -->\r\n                                                </draggable>\r\n                                            </ul>\r\n                                        </div>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                            </div>\r\n                        </div>\r\n                        <div v-if=\"SearchNoRecordForField && !showModuleListForFilter || SearchNoRecordForFilter && showModuleListForFilter\"\r\n                            class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\"> {{\r\n                                $t(\"NoRecordfound\") }}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div :class=\"showdiv\" v-on:click=\"expandclick()\" style=\"float: left;width: 50px;\">\r\n                <span class=\"expand_all_filters\" style=\"position:absolute;left:0;\">\r\n                    <span>\r\n                        <a title=\"Expand\" data-toggle-tooltip=\"tooltip\" class=\"collapsed\">\r\n                            <em aria-hidden=\"true\" class=\"fa fa-angle-double-right mt-1\">\r\n                            </em>\r\n                        </a>\r\n                    </span>\r\n                </span>\r\n            </div>\r\n            <div :class=\"fieldpan\">\r\n                <div class=\"tab-style w-100\">\r\n                    <div class=\"tab_container\" role=\"tabpanel\">\r\n                        <div class=\"tab-content\">\r\n                            <b-tabs pills>\r\n                                <b-tab title=\"FIELDS\" class=\"fields\" :active=\"showModuleListForField\" ref=\"FIELDS\"\r\n                                    v-on:click=\"FieldTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('Groups') }}</h6>\r\n                                        <input placeholder=\"Add Group\"\r\n                                        :class=\"Grouplist.length == 0 ? 'form-control' : 'form-control disabled'\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"Groupsearchmodel\" />\r\n                                        <div v-if=\"Groupsearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\">\r\n                                            <div v-for=\"(item, i) in filtergroup\" :key=\"i\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfiltervalue(item)\" >\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            item.MainFieldname }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filtergroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <br />\r\n                                        <draggable v-model=\"Grouplist\" class=\"draggable-list \" :list=\"Grouplist\"\r\n                                             group=\"my-groupGrouplist\" @start=\"drag = true\"\r\n                                             @end=\"drag = false\" item-key=\"CustomFieldId\">\r\n                                            <!-- <template #item=\"{ element }\" > -->\r\n                                                <div class=\"list-item\" v-for=\"(element,index) in Grouplist\" :key=\"index\">\r\n                                                    <span class=\"text-truncate float-left\"\r\n                                                        :data-toggle-tooltip=\"GetLocalizedValue(element.DisplayName)\" :title=\"GetLocalizedValue(element.DisplayName)\"\r\n                                                        style=\"width:200px;\">\r\n                                                        {{ GetLocalizedValue(element.FieldName, element.DisplayName) }}\r\n                                                    </span>\r\n                                                    <a><em class=\"fa fa-trash-o text-danger\" aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteGroupFields(element, $event, index)\">\r\n                                                        </em>\r\n                                                    </a>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6 class=\"mb-1\">{{ $t('COLUMNS') }}</h6>\r\n                                        <div class=\"verticle-action\" style=\"top:-3px;\">\r\n                                            <em id=\"btnpopup\"\r\n                                                :class=\"CalculatedUIEnabled == true ? 'fa fa-ellipsis-v action_icon' : 'fa fa-ellipsis-v action_icon disabled'\"\r\n                                                v-on:click=\"openActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                            <span class=\"action-list-box\" style=\"width: 240px; display:block;\" v-if=\"showRowLevelFunction\">\r\n                                                <span class=\"list-actions fsm-list\" id=\"action-list\" style=\"padding-left:0\">\r\n                                                    <a class=\"update actions-onclick\" v-on:click=\"OpenCalculatedUI\"><span\r\n                                                            class=\"text\">{{\r\n                                                                $t('CalcultedUIName') }}</span></a>\r\n                                                    <em class=\"fa fa-times close close-action\"\r\n                                                        v-on:click=\"closeActionIcon($event)\" aria-hidden=\"true\"></em>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input placeholder=\"Add Column\" class=\"form-control\" v-on:keypress=\"GroupSearching\"\r\n                                            v-model=\"ColumnSearchmodel\" />\r\n                                        <div v-if=\"ColumnSearchmodel != ''\" v-bind:class=\"itemclass\" class=\"autosuggestion\"\r\n                                            style=\"z-index: 9999;\">\r\n                                            <div v-for=\"(item,indx) in filterColumngroup\" :key=\"indx\">\r\n                                                <div>\r\n                                                    <div v-on:click=\"selectfilterColumnvalue(item)\">\r\n                                                        {{ GetLocalizedValue(item.FieldName, item.DisplayName) }} : {{\r\n                                                            GetLocalizedValue(item.MainFieldname) }}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div v-if=\"filterColumngroup.length == 0\"\r\n                                                class=\"text-center text-danger d-flex align-items-center justify-content-center norecs pt-2\">\r\n                                                {{ $t(\"NoRecordfound\") }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"dashed_bod_drag text-center mt-2\">\r\n                                            <h6 class=\"p-2 m-0\">Drag Fields Here </h6>\r\n                                            <draggable v-model=\"Columnlist\" class=\"draggable-list\" :list=\"Columnlist\"\r\n                                                group=\"my-groupForFields\" @start=\"drag = true\" @end=\"ColumnListDisplayOrder\"\r\n                                                id=\"TargetDivID\" :move=\"checkMove\" item-key=\"CustomFieldId\" >\r\n                                                <div class=\"list-item parent-element\" id=\"TargetDivID\" v-for=\"(element,indx) in Columnlist\" :key=\"indx\">\r\n                                                    <span v-if=\"element.Calculated_Field == true\"\r\n                                                        style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                            style=\"font-size: 12px;\">x</sub></span><span\r\n                                                        class=\"text-truncate float-left\"\r\n                                                        :data-toggle-tooltip=\"element.FieldName\"\r\n                                                        :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                        style=\"width:200px;\">\r\n                                                        {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                        }} {{ element.ExpresssionFieldName }}\r\n                                                    </span>\r\n                                                    <div class=\"parentdiv datarepfix filters\">\r\n                                                        <a aria-hidden=\"true\"\r\n                                                        v-on:click=\"DeleteColumnFields(element, $event)\"><em\r\n                                                            class=\"fa fa-trash-o text-danger\"></em></a>\r\n                                                        <a aria-hidden=\"true\" v-on:click=\"openSetting(element, $event)\"><em\r\n                                                                class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                        <div>\r\n                                                            <div class=\"verticle-action rt25 rt502 onlyone\">\r\n                                                                <span class=\"action-list-box small setting-div-box\">\r\n                                                                    <span id=\"action-list\"\r\n                                                                        class=\"list-actions text-left p-0 datarep ml-3  position-relative\"\r\n                                                                        style=\"width:480px;\">\r\n                                                                        <div class=\"float-left col-12 p-0\">\r\n                                                                            <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-md-12\">\r\n                                                                                        <div\r\n                                                                                            class=\"theme-primary partition-full\">\r\n                                                                                            <span\r\n                                                                                                class=\"p-name text-white mt-2\">\r\n                                                                                                {{ $t('Setting') }}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-12 float-left\">\r\n                                                                                <div class=\"col-12 p-0 float-left\">\r\n                                                                                    <div class=\"form-group\">\r\n                                                                                        <label>{{\r\n                                                                                            $t('DisplayName')\r\n                                                                                        }}</label>\r\n                                                                                        <input class=\"form-control\"\r\n                                                                                            v-model=\"modeldisplayname\"\r\n                                                                                            maxlength=\"20\" @paste.prevent\r\n                                                                                            v-on:keydown=\"PreventDecimal($event)\"/>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 p-0 float-left\"> \r\n                                                                                    <div\r\n                                                                                        :class=\"element.ColumnFieldDataCode == 'date' ? '' : 'form-group d-none'\">\r\n                                                                                        <label>{{\r\n                                                                                            $t('DateFormat')\r\n                                                                                        }}:</label>\r\n                                                                                        <select\r\n                                                                                            class=\"form-control textnormal\"\r\n                                                                                            v-model=\"modeldateformat\">\r\n                                                                                            <option value='' :selected=\"modeldateformat === ''\" disabled>Select</option>\r\n                                                                                            <option v-for=\"(dateformat,dateIndex) in GetDateFromDB\" :key=\"dateIndex\">\r\n                                                                                                {{GetLocalizedValue(dateformat.dateFormat) }}\r\n                                                                                            </option>\r\n                                                                                        </select>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 p-0 float-left\">\r\n                                                                                    <div\r\n                                                                                        :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                        <label>{{\r\n                                                                                            $t('DecimalPlaces')\r\n                                                                                        }}</label>\r\n                                                                                        <input type=\"number\"\r\n                                                                                            class=\"form-control\"\r\n                                                                                            v-model=\"modeldecimalplaces\" />\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 p-0 float-left\"\r\n                                                                                    style=\"margin-top: 10px;\">\r\n                                                                                    <div\r\n                                                                                        :class=\"element.ColumnFieldDataCode == 'decimal' ? '' : 'form-group d-none'\">\r\n                                                                                        <input type=\"checkbox\"\r\n                                                                                            v-model=\"modeluseseparator\"\r\n                                                                                            id=\"useseparator\" />&nbsp;\r\n                                                                                        <label for=\"User\">{{\r\n                                                                                            $t('UseSeparator')\r\n                                                                                        }}</label><br>\r\n                                                                                        <input type=\"checkbox\"\r\n                                                                                            v-model=\"modelusecurrency\" />\r\n                                                                                        <label style=\"padding: 6px;\"\r\n                                                                                            for=\"Role\">{{\r\n                                                                                                $t('UseCurrency')\r\n                                                                                            }}</label>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div class=\"col-12 p-0 float-left mb-3\">\r\n                                                                                    <div class=\"row flex-row-reverse\">\r\n                                                                                        <div\r\n                                                                                            class=\"col-lg-6 text-right\">\r\n                                                                                            <a class=\"btn btn-success ancsaveuserticket text-white\"\r\n                                                                                                id=\"btnSaveTicket\"\r\n                                                                                                title=\"\"\r\n                                                                                                data-toggle-tooltip=\"tooltip\"\r\n                                                                                                data-original-title=\"Click here to submit ticket\"\r\n                                                                                                v-on:click=\"ApplySaveSelectedData(element, $event)\">\r\n                                                                                                <span\r\n                                                                                                    class=\"fa fa-floppy-o\"></span>\r\n                                                                                                {{ $t('Save') }}\r\n                                                                                            </a>\r\n                                                                                        </div>\r\n\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <em aria-hidden=\"true\"\r\n                                                                            class=\"fa fa-times close close-action_cv\"\r\n                                                                            v-on:click=\"CloseSetting($event)\"></em>\r\n                                                                        <div class=\"va_rt25\"><em\r\n                                                                                class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                style=\"font-size: 20pt;\"></em>\r\n                                                                        </div>\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"float-left text-left w-100 font-12\">{{\r\n                                                        element.MainFieldname }}</div>\r\n                                                </div>\r\n                                            </draggable>\r\n                                        </div>\r\n                                    </div>\r\n                                </b-tab>\r\n                                <b-tab title=\"Filters\" :active=\"showModuleListForFilter\" ref=\"Filters\"\r\n                                    v-on:click=\"FilterTabClicked\">\r\n                                    <div class=\"col-12 p-0 float-left\">\r\n                                        <h6>include data if it matches</h6>\r\n                                        <select class=\"form-control\" name=\"template\" v-model=\"category\"\r\n                                            v-on:change=\"filterRulechange\">\r\n                                            <option v-for=\"(template,tempIndex) in templates\" :key=\"tempIndex\"\r\n                                                :selected=\"template == category ? 'selected' : ''\" :value=\"template\">\r\n                                                {{ template }}\r\n                                            </option>\r\n                                        </select>\r\n                                        <h6 class=\"mt-3\">Filter rules</h6>\r\n                                        <div class=\"form-control\">\r\n                                            <span ml-1 v-if=\"category == 'Match All Value'\" v-for=\"(item,itmIndex) in Filterlist\" :key=\"itmIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\"> {{ filtertype }}</span>\r\n                                            </span>\r\n                                            <span v-if=\"category != 'Match All Value'\" v-for=\"(item,itemIndex) in Filterlist\" :key=\"itemIndex\">\r\n                                                {{ (Filterlist.indexOf(item) + 1) }}\r\n                                                <span v-if=\"Filterlist.length > (Filterlist.indexOf(item) + 1)\"\r\n                                                    style=\"margin-right:3px;\">{{ filtertype }}</span>\r\n                                            </span>\r\n                                        </div>\r\n                                        <draggable v-model=\"Filterlist\" class=\"draggable-list\" :list=\"Filterlist\"\r\n                                            group=\"my-groupForFilter\" @start=\"drag = true\"  @end=\"ColumnListDisplayOrder\"\r\n                                            @dragenter=\"dragover($event)\" @dragleave=\"dragover($event)\"\r\n                                            @drop=\"dragover($event)\" :move=\"checkMove\" item-key=\"CustomFieldId\" id=\"TargetDivID\">\r\n                                            <!-- <template #item=\"{ element }\"> -->\r\n                                                <div class=\"list-item row filter-div\" @dragover=\"dragover($event)\"\r\n                                                    id=\"TargetDivID\" v-for=\"(element,eleIndex) in Filterlist\" :key=\"maincomponentkey\">\r\n                                                    <div class=\"counter_num px-1 py-2 filter-count-div\">\r\n                                                        {{ (Filterlist.indexOf(element) + 1) }}\r\n                                                    </div>\r\n                                                    <div style=\"width:77%;\">\r\n                                                        <div class=\"px-1 py-0 width120 text-truncate float-left font-14\">\r\n                                                            <span v-if=\"element.Calculated_Field == true\"\r\n                                                                style=\"font-size: 22px;float:left; margin-right: 10px;\">f<sub\r\n                                                                    style=\"font-size: 12px;\">x</sub></span><span\r\n                                                                class=\"text-truncate float-left\"\r\n                                                                :data-toggle-tooltip=\"element.FieldName\"\r\n                                                                :title=\"GetLocalizedValue(element.FieldName, element.DisplayName)\"\r\n                                                                style=\"width:110px;\">\r\n                                                                {{ GetLocalizedValue(element.FieldName, element.DisplayName)\r\n                                                                }}{{ element.ExpresssionFieldName }}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                        <div\r\n                                                            class=\"px-1 py-0 text-primary width80 text-truncate float-left font-14\">\r\n                                                            {{ element.OperatorDisplayName }}\r\n                                                        </div>\r\n                                                        <div class=\"px-1 py-0 hh text-truncate float-left font-12 w-100\">\r\n                                                            {{ element.valueTypeText }}\r\n                                                            {{ element.valueTypeNumber }} \r\n                                                            {{ element.valueTypeNumber2 }}\r\n                                                            {{ $options.filters.formatDate(element.valueTypeFirstdate) }} \r\n                                                            {{ $options.filters.formatDate(element.valueTypeSeconddate) }}\r\n                                                            {{ element.ValueDisplayFirstTime }} \r\n                                                            {{ element.ValueDisplaySecondTime }}\r\n                                                            {{ element.Displaymultiplevalue }}\r\n                                                            {{ element.DropDownValue }}\r\n                                                            {{ $t(element.DateRangeValue) }}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"parentdiv datarepfix filters\">\r\n                                                        <a aria-hidden=\"true\"\r\n                                                            v-on:click=\"DeleteFilterFields(element, $event)\"><em\r\n                                                                :class=\"!element.IsMandatoryforFilter ? 'fa fa-trash-o text-danger' : 'fa fa-trash-o text-danger d-none'\"></em></a>\r\n                                                        <a aria-hidden=\"true\" v-on:click=\"openrulespop(element, $event)\"><em\r\n                                                                class=\"fa fa-cog action_icon_cv\"></em></a>\r\n                                                        <div>\r\n                                                            <div class=\"verticle-action rt25 rt502\">\r\n                                                                <span class=\"action-list-box small filter-list-box\">\r\n                                                                    <span id=\"action-list\"\r\n                                                                        class=\"list-actions text-left p-0 datarep ml-3  position-relative\"\r\n                                                                        style=\"width:480px;\">\r\n                                                                        <div class=\"float-left col-12 p-0\">\r\n                                                                            <div class=\"container-fluid p-0 mb-3\">\r\n                                                                                <div class=\"row\">\r\n                                                                                    <div class=\"col-md-12\">\r\n                                                                                        <div\r\n                                                                                            class=\"theme-primary partition-full\">\r\n                                                                                            <span\r\n                                                                                                class=\"p-name text-white mt-2\">\r\n                                                                                                {{ $t('Setting') }}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                            <div class=\"col-12 float-left\">\r\n                                                                                <div class=\"col-12 p-0 float-left\" style=\"max-height:210px; overflow-y:auto;\">\r\n                                                                                    <div class=\"form-group\"\r\n                                                                                        v-for=\"(item,itmInx) in GetOperator\" :key=\"componentkey\">\r\n                                                                                        <input type=\"radio\" class=\"radio\" :id=\"'radiobtn' + item.OPERATOR_ID\"\r\n                                                                                            v-model=\"element.selectedOPValue\"\r\n                                                                                            :name=\"'radiobtn' + (Filterlist.indexOf(element) + 1)\"\r\n                                                                                            :value=\"item.OPERATOR_ID\"\r\n                                                                                            v-on:click=\"checkvalue(item.OPERATOR_DISPLAY_NAME, element, item.OPERATOR_EXPRESSION, item.OPERATOR_ID, item.MP[0].OPERATION_DATA_TYPE)\">\r\n                                                                                        <label class=\"ml-2\" :for=\"'radiobtn' + item.OPERATOR_ID\">\r\n                                                                                            {{\r\n                                                                                                item.OPERATOR_DISPLAY_NAME\r\n                                                                                            }}\r\n                                                                                        </label>\r\n                                                                                        <br />\r\n                                                                                    </div>\r\n                                                                                    <input type=\"text\" id=\"inpttxt\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext\"\r\n                                                                                        v-if=\"texttypevalue1\" />\r\n                                                                                    <input type=\"text\" id=\"inpttxt2\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-model=\"ValueDisplaytext2\"\r\n                                                                                        v-if=\"texttypevalue2\" />\r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{'form-control':true,'is-invalid':\r\n                                                                                        element.ColumnFieldDataCode == 'int' ? ValueDisplaynumber.length > 9 : ValueDisplaynumber.length > 15}\"\r\n                                                                                        v-if=\"numbertypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaynumber\"\r\n                                                                                        :onKeyPress=\"element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <br> \r\n                                                                                    <input type=\"number\" id=\"inpttxtbtw\"\r\n                                                                                        :class=\"{ 'form-control': true, 'is-invalid': element.ColumnFieldDataCode == 'int' ? ((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || \r\n                                                                                        parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || ValueDisplaynumber2.length > 9) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) :\r\n                                                                                        ((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) || \r\n                                                                                        ValueDisplaynumber2.length > 15) && (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0')) }\"\r\n                                                                                        v-if=\"numbertypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaynumber2\"\r\n                                                                                        :onKeyPress=\"element.ColumnFieldDataCode == 'int' ? 'if(this.value.length > 9) return false;' :'if(this.value.length > 15) return false;'\"\r\n                                                                                        v-on:keydown=\"PreventValues($event)\" />\r\n                                                                                    <span\r\n                                                                                        v-if=\"((parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber)) && \r\n                                                                                        (ValueDisplaynumber2 != '' || ValueDisplaynumber2 == '0'))\"\r\n                                                                                        class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    <span v-if=\"element.ColumnFieldDataCode != 'int'\" :class=\"ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 ? 'invalid-feedback':'d-none'\">Can not add more than 15 digits</span>\r\n                                                                                    <span v-if=\"element.ColumnFieldDataCode == 'int'\" :class=\"ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 ? 'invalid-feedback':'d-none'\">Can not add more than 09 digits</span>\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate1\"\r\n                                                                                        class=\"form-control\"\r\n                                                                                        v-if=\"datetypevalue1\"\r\n                                                                                        v-model=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <input type=\"date\" id=\"inpttxtdate2\"\r\n                                                                                        :class=\"{ 'form-control mt-2': true, 'disabled': ValueDisplaydate == '','is-invalid': ((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '') }\"\r\n                                                                                        v-if=\"datetypevalue2\"\r\n                                                                                        v-model=\"ValueDisplaydate2\"\r\n                                                                                        :min=\"ValueDisplaydate\"\r\n                                                                                        max=\"9999-12-31\" />\r\n                                                                                    <span v-if=\"((Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) \r\n                                                                                        || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate)) && ValueDisplaydate2 != '')\" class=\"invalid-feedback\">Second\r\n                                                                                        value should be greater than first\r\n                                                                                        value.</span>\r\n                                                                                    \r\n                                                                                     <select class=\"form-control\"\r\n                                                                                        v-model=\"modeldaterange\"\r\n                                                                                        v-if=\"DDLForDateRange\">\r\n                                                                                        <option value=\"\" selected disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in DateRangeData\"\r\n                                                                                            :key=\"DDLitem.date_range_name\"\r\n                                                                                            :value=\"DDLitem.date_range_name\"\r\n                                                                                            :title=\"DDLitem.date_range_value\">\r\n                                                                                            {{ TruncateStr(DDLitem.date_range_value,\r\n                                                                                                50) \r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <input type=\"time\" id=\"inpttxttime1\" \r\n                                                                                        class=\"form-control\" \r\n                                                                                        v-if=\"timetypevalue\"  v-bind:Title=\"ValueDisplayTime\"\r\n                                                                                        v-model=\"ValueDisplayTime\"  step=\"2\"/>\r\n                                                                                    <input type=\"time\" id=\"inpttxttime2\"\r\n                                                                                        :class=\"{ 'form-control': true, 'disabled': ValueDisplayTime == '' }\"\r\n                                                                                        v-if=\"timetypevalue2\"\r\n                                                                                        :min=\"ValueDisplayTime\" v-bind:Title=\"ValueDisplayTime2\" \r\n                                                                                        v-model=\"ValueDisplayTime2\" step=\"2\"\r\n                                                                                       />\r\n\r\n                                                                                    <select class=\"form-control\"\r\n                                                                                        v-model=\"modelFilterDDLValue\"\r\n                                                                                        v-if=\"DDLForFilter\">\r\n                                                                                        <option value=\"\" disabled>Select </option>\r\n                                                                                        <option v-for=\"DDLitem in options\"\r\n                                                                                            :key=\"DDLitem.value\"\r\n                                                                                            :value=\"DDLitem.value\"\r\n                                                                                            :title=\"DDLitem.name\">\r\n                                                                                            {{ TruncateStr(DDLitem.name,\r\n                                                                                                50)\r\n                                                                                            }}</option>\r\n                                                                                    </select>\r\n                                                                                    <div v-if=\"multiselectvalue\">\r\n                                                                                        <dynamic-form lang=\"en\" :buttons=\"false\" :schema=\"FormSchema\" ></dynamic-form>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                                <div\r\n                                                                                    class=\"col-12 p-0 float-left mb-3 mt-3\">\r\n                                                                                    <div class=\"row flex-row-reverse\">\r\n                                                                                        <div class=\"col-lg-6 text-right\">\r\n                                                                                            <a :class=\"{ 'btn btn-primary ancsaveuserticket text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \r\n                                                                                                ? (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                || ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 && numbertypevalue2)\r\n                                                                                                : (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2))\r\n                                                                                                || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2) }\"\r\n                                                                                                id=\"btnSaveTicket\" title=\"\"\r\n                                                                                                data-toggle-tooltip=\"tooltip\"\r\n                                                                                                v-on:click=\"applySetting(element.CustomFieldId)\"\r\n                                                                                                data-original-title=\"Click here to submit ticket\"><em\r\n                                                                                                    :class=\"{ 'fa fa-save text-white': true, 'disabled': (element.ColumnFieldDataCode == 'int' \r\n                                                                                                    ? (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                    || ValueDisplaynumber.length > 9 || ValueDisplaynumber2.length > 9 && numbertypevalue2)\r\n                                                                                                    : (parseFloat(ValueDisplaynumber2) < parseFloat(ValueDisplaynumber) || parseFloat(ValueDisplaynumber2) == parseFloat(ValueDisplaynumber) \r\n                                                                                                    || ValueDisplaynumber.length > 15 || ValueDisplaynumber2.length > 15 && numbertypevalue2))\r\n                                                                                                    || (Date.parse(ValueDisplaydate2) < Date.parse(ValueDisplaydate) || Date.parse(ValueDisplaydate2) == Date.parse(ValueDisplaydate) && datetypevalue2)}\"></em>Apply</a>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                        <em aria-hidden=\"true\"\r\n                                                                            class=\"fa fa-times close close-action_cv\"\r\n                                                                            v-on:click=\"ClosePopFilter()\"></em>\r\n                                                                        <div class=\"va_rt25\"><em\r\n                                                                                class=\"icon-solid arrow-solid-left text-dark\"\r\n                                                                                style=\"font-size: 20pt;\"></em></div>\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            <!-- </template> -->\r\n                                        </draggable>\r\n                                    </div>\r\n                                    <hr />\r\n                                </b-tab>\r\n                            </b-tabs>\r\n                            <div role=\"tabpanel\" id=\"tab-em-groups\" class=\"tab-pane\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12 col-xl-12 p-0\">\r\n                                    <div class=\"listing\">\r\n                                        <div class=\"table-responsive\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ReportPreview v-if=\"showReportPreview\" :previewdata=\"previewdata\" :customreportparameters=\"customreportparameters\" :modeldateformat=\"savedateformat\"\r\n            :Columnlist=\"Columnlist\" :Grouplist=\"Grouplist\" ref=\"reportdata\" :saveJsonReport=\"saveJsonReport\"\r\n            :PdfJsonReport=\"PdfJsonReport\" :editjsondata=\"editjsondata\" :ReportName=\"ReportName\" :GraphData=\"graphData\"\r\n            :SortingData=\"sortingArray\" :GraphJson=\"GraphJson\" :LevelOfGrouping=\"LevelOfGrouping\" :getchangedinlist=\"getchangedinlist\">\r\n        </ReportPreview>\r\n        <CalculatedUI :customreportparameters=\"customreportparameters\" v-if=\"showcalculatedUI\" :Columnlist=\"Columnlist\"\r\n            :ExpFieldDataArray=\"ExpFieldDataArray\" :editexpressionvalue=\"editexpressionvalue\" :ExpDataArray=\"ExpDataArray\"\r\n            v-on:close=\"showcalculatedUI = false\" @VerifiedExpressionData=\"VerifiedExpressionColumnValue\" ref=\"Calculated\"\r\n            :AlreadyExistExpression=\"AlreadyExistExpression\">\r\n        </CalculatedUI>\r\n    </section>\r\n</template>\r\n\r\n<style>\r\n.multiselect__tags input.multiselect__input{width: 100px !important;}\r\n.multiselect__tags .multiselect__strong{ margin-right:10px;}\r\n.multiselect__tags-wrap {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n</style>\r\n\r\n\r\n<style scoped>\r\n.mCSB_inside>.mCSB_container {\r\n    margin-right: 30px;\r\n}\r\n\r\n.width80 {\r\n    width: 80px;\r\n}\r\n\r\n.width120 {\r\n    width: 110px;\r\n}\r\n\r\n.invalid-feedback {\r\n    white-space: normal;\r\n    font-size: 110%;\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Datareport.vue?vue&type=template&id=76f31a9b&scoped=true&\"\nimport script from \"./Datareport.vue?vue&type=script&lang=js&\"\nexport * from \"./Datareport.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Datareport.vue?vue&type=style&index=0&id=76f31a9b&prod&lang=css&\"\nimport style1 from \"./Datareport.vue?vue&type=style&index=1&id=76f31a9b&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"76f31a9b\",\n  null\n  \n)\n\nexport default component.exports","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=76f31a9b&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"19411cc8\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=1&id=76f31a9b&prod&scoped=true&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"60283de0\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./modalGraphOptions.vue?vue&type=style&index=0&id=7a09bc57&prod&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1c49c456\", content, true, {\"sourceMap\":false,\"shadowMode\":false});","export * from \"-!../../../../node_modules/vue-style-loader/index.js??ref--7-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Datareport.vue?vue&type=style&index=0&id=76f31a9b&prod&lang=css&\""],"sourceRoot":""}